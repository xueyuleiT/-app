android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> registerContentObserver
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr1:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$MenuVersionImpl -> android.support.v4.view.MenuCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat from(android.content.Context) -> from
    boolean isFinished() -> isFinished
    int getDuration() -> getDuration
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity() -> getCurrVelocity
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(android.widget.Scroller) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
antistatic.spinnerwheel.AbstractWheel -> antistatic.spinnerwheel.AbstractWheel:
    int itemID -> m
    java.lang.String LOG_TAG -> n
    int mCurrentItemIdx -> a
    int mVisibleItems -> b
    boolean mIsAllVisible -> c
    boolean mIsCyclic -> d
    antistatic.spinnerwheel.WheelScroller mScroller -> e
    boolean mIsScrollingPerformed -> f
    int mScrollingOffset -> g
    android.widget.LinearLayout mItemsLayout -> h
    int mFirstItemIdx -> i
    antistatic.spinnerwheel.adapters.WheelViewAdapter mViewAdapter -> j
    int mLayoutHeight -> k
    int mLayoutWidth -> l
    antistatic.spinnerwheel.WheelRecycler mRecycler -> o
    java.util.List changingListeners -> p
    java.util.List scrollingListeners -> q
    java.util.List clickingListeners -> r
    android.database.DataSetObserver mDataObserver -> s
    void initAttributes(android.util.AttributeSet,int) -> a
    void initData(android.content.Context) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void recreateAssets(int,int) -> a
    antistatic.spinnerwheel.WheelScroller createScroller(antistatic.spinnerwheel.WheelScroller$ScrollingListener) -> a
    void onScrollStarted() -> a
    void onScrollTouched() -> b
    void onScrollTouchedUp() -> c
    void onScrollFinished() -> d
    int getBaseDimension() -> e
    int getItemDimension() -> f
    float getMotionEventPosition(android.view.MotionEvent) -> a
    void createItemsLayout() -> g
    void doItemsLayout() -> h
    void onLayout(boolean,int,int,int,int) -> onLayout
    void invalidateItemsLayout(boolean) -> a
    void setVisibleItems(int) -> a
    antistatic.spinnerwheel.adapters.WheelViewAdapter getViewAdapter() -> i
    void setViewAdapter(antistatic.spinnerwheel.adapters.WheelViewAdapter) -> a
    int getCurrentItem() -> j
    void setCurrentItem$2563266(int) -> c
    void setCurrentItem(int) -> b
    boolean isCyclic() -> k
    void setCyclic$1385ff() -> l
    void addChangingListener(antistatic.spinnerwheel.OnWheelChangedListener) -> a
    void addScrollingListener(antistatic.spinnerwheel.OnWheelScrollListener) -> a
    void notifyScrollingListenersAboutStart() -> m
    void notifyScrollingListenersAboutEnd() -> n
    boolean rebuildItems() -> o
    boolean isValidItemIndex(int) -> d
    boolean addItemView(int,boolean) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void access$0(antistatic.spinnerwheel.AbstractWheel,int) -> a
antistatic.spinnerwheel.AbstractWheel$1 -> antistatic.spinnerwheel.a:
    antistatic.spinnerwheel.AbstractWheel this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
antistatic.spinnerwheel.AbstractWheel$2 -> antistatic.spinnerwheel.b:
    antistatic.spinnerwheel.AbstractWheel this$0 -> a
    void onStarted() -> a
    void onTouch() -> b
    void onTouchUp() -> c
    void onScroll(int) -> a
    void onFinished() -> d
    void onJustify() -> e
antistatic.spinnerwheel.AbstractWheel$3 -> antistatic.spinnerwheel.c:
    antistatic.spinnerwheel.AbstractWheel this$0 -> a
    void run() -> run
antistatic.spinnerwheel.AbstractWheel$SavedState -> antistatic.spinnerwheel.AbstractWheel$SavedState:
    int currentItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
antistatic.spinnerwheel.AbstractWheel$SavedState$1 -> antistatic.spinnerwheel.d:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
antistatic.spinnerwheel.AbstractWheelView -> antistatic.spinnerwheel.AbstractWheelView:
    int itemID -> y
    java.lang.String LOG_TAG -> z
    int mItemsDimmedAlpha -> m
    int mSelectionDividerActiveAlpha -> n
    int mSelectionDividerDimmedAlpha -> o
    int mItemOffsetPercent -> p
    int mItemsPadding -> q
    android.graphics.drawable.Drawable mSelectionDivider -> r
    android.graphics.Paint mSelectorWheelPaint -> s
    android.graphics.Paint mSeparatorsPaint -> t
    com.nineoldandroids.animation.Animator mDimSelectorWheelAnimator -> u
    com.nineoldandroids.animation.Animator mDimSeparatorsAnimator -> v
    android.graphics.Bitmap mSpinBitmap -> w
    android.graphics.Bitmap mSeparatorsBitmap -> x
    void initAttributes(android.util.AttributeSet,int) -> a
    void initData(android.content.Context) -> a
    void recreateAssets(int,int) -> a
    void setSelectorPaintCoeff(float) -> a
    void onScrollTouched() -> b
    void onScrollTouchedUp() -> c
    void onScrollFinished() -> d
    void fadeSelectorWheel(long) -> a
    void lightSeparators(long) -> b
    void measureLayout() -> p
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawItems(android.graphics.Canvas) -> a
antistatic.spinnerwheel.ItemsRange -> antistatic.spinnerwheel.e:
    int first -> a
    int count -> b
    int getFirst() -> a
    int getLast() -> b
    int getCount() -> c
    boolean contains(int) -> a
antistatic.spinnerwheel.OnWheelChangedListener -> antistatic.spinnerwheel.f:
    void onChanged$1cad4ebf() -> a
antistatic.spinnerwheel.OnWheelScrollListener -> antistatic.spinnerwheel.g:
    void onScrollingStarted$1c351521() -> a
    void onScrollingFinished$1c351521() -> b
antistatic.spinnerwheel.WheelHorizontalScroller -> antistatic.spinnerwheel.h:
    int getCurrentScrollerPosition() -> a
    int getFinalScrollerPosition() -> b
    float getMotionEventPosition(android.view.MotionEvent) -> a
    void scrollerStartScroll$255f295(int) -> a
    void scrollerFling(int,int,int) -> a
antistatic.spinnerwheel.WheelHorizontalView -> antistatic.spinnerwheel.WheelHorizontalView:
    int itemID -> z
    java.lang.String LOG_TAG -> A
    int mSelectionDividerWidth -> y
    int itemWidth -> B
    void initAttributes(android.util.AttributeSet,int) -> a
    void setSelectorPaintCoeff(float) -> a
    antistatic.spinnerwheel.WheelScroller createScroller(antistatic.spinnerwheel.WheelScroller$ScrollingListener) -> a
    float getMotionEventPosition(android.view.MotionEvent) -> a
    int getBaseDimension() -> e
    int getItemDimension() -> f
    void onScrollTouchedUp() -> c
    void createItemsLayout() -> g
    void doItemsLayout() -> h
    void measureLayout() -> p
    void onMeasure(int,int) -> onMeasure
    void drawItems(android.graphics.Canvas) -> a
antistatic.spinnerwheel.WheelRecycler -> antistatic.spinnerwheel.i:
    java.lang.String LOG_TAG -> a
    java.util.List items -> b
    java.util.List emptyItems -> c
    antistatic.spinnerwheel.AbstractWheel wheel -> d
    int recycleItems(android.widget.LinearLayout,int,antistatic.spinnerwheel.ItemsRange) -> a
    android.view.View getItem() -> a
    android.view.View getEmptyItem() -> b
    void clearAll() -> c
    java.util.List addView(android.view.View,java.util.List) -> a
    android.view.View getCachedView(java.util.List) -> a
antistatic.spinnerwheel.WheelScroller -> antistatic.spinnerwheel.j:
    antistatic.spinnerwheel.WheelScroller$ScrollingListener listener -> b
    android.content.Context context -> c
    android.view.GestureDetector gestureDetector -> d
    android.widget.Scroller scroller -> a
    int lastScrollPosition -> e
    float lastTouchedPosition -> f
    boolean isScrollingPerformed -> g
    int MESSAGE_SCROLL -> h
    int MESSAGE_JUSTIFY -> i
    android.os.Handler animationHandler -> j
    void scroll$255f295(int) -> b
    void stopScrolling() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> b
    void setNextMessage(int) -> c
    void clearMessages() -> e
    void justify() -> f
    void startScrolling() -> g
    void finishScrolling() -> d
    int getCurrentScrollerPosition() -> a
    int getFinalScrollerPosition() -> b
    float getMotionEventPosition(android.view.MotionEvent) -> a
    void scrollerStartScroll$255f295(int) -> a
    void scrollerFling(int,int,int) -> a
    int access$0(antistatic.spinnerwheel.WheelScroller) -> a
    void access$1(antistatic.spinnerwheel.WheelScroller,int) -> a
    antistatic.spinnerwheel.WheelScroller$ScrollingListener access$2(antistatic.spinnerwheel.WheelScroller) -> b
    android.os.Handler access$3(antistatic.spinnerwheel.WheelScroller) -> c
    void access$4(antistatic.spinnerwheel.WheelScroller) -> d
    void access$5$765923a2(antistatic.spinnerwheel.WheelScroller) -> e
antistatic.spinnerwheel.WheelScroller$1 -> antistatic.spinnerwheel.k:
    antistatic.spinnerwheel.WheelScroller this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
antistatic.spinnerwheel.WheelScroller$2 -> antistatic.spinnerwheel.l:
    antistatic.spinnerwheel.WheelScroller this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
antistatic.spinnerwheel.WheelScroller$ScrollingListener -> antistatic.spinnerwheel.m:
    void onScroll(int) -> a
    void onTouch() -> b
    void onTouchUp() -> c
    void onStarted() -> a
    void onFinished() -> d
    void onJustify() -> e
antistatic.spinnerwheel.WheelVerticalScroller -> antistatic.spinnerwheel.n:
    int getCurrentScrollerPosition() -> a
    int getFinalScrollerPosition() -> b
    float getMotionEventPosition(android.view.MotionEvent) -> a
    void scrollerStartScroll$255f295(int) -> a
    void scrollerFling(int,int,int) -> a
antistatic.spinnerwheel.WheelVerticalView -> antistatic.spinnerwheel.WheelVerticalView:
    int itemID -> z
    java.lang.String LOG_TAG -> A
    int mSelectionDividerHeight -> y
    int mItemHeight -> B
    void initAttributes(android.util.AttributeSet,int) -> a
    void setSelectorPaintCoeff(float) -> a
    antistatic.spinnerwheel.WheelScroller createScroller(antistatic.spinnerwheel.WheelScroller$ScrollingListener) -> a
    float getMotionEventPosition(android.view.MotionEvent) -> a
    int getBaseDimension() -> e
    int getItemDimension() -> f
    void createItemsLayout() -> g
    void doItemsLayout() -> h
    void measureLayout() -> p
    void onMeasure(int,int) -> onMeasure
    void drawItems(android.graphics.Canvas) -> a
antistatic.spinnerwheel.adapters.AbstractWheelAdapter -> antistatic.spinnerwheel.a.a:
    java.util.List datasetObservers -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
antistatic.spinnerwheel.adapters.AbstractWheelTextAdapter -> antistatic.spinnerwheel.a.b:
    android.graphics.Typeface textTypeface -> f
    int textColor -> g
    int textSize -> h
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    int itemResourceId -> c
    int itemTextResourceId -> d
    int emptyItemResourceId -> e
    void setTextSize$13462e() -> a
    void setItemTextResource$13462e() -> b
    java.lang.CharSequence getItemText(int) -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void configureTextView(android.widget.TextView) -> a
    android.widget.TextView getTextView(android.view.View,int) -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
antistatic.spinnerwheel.adapters.WheelViewAdapter -> antistatic.spinnerwheel.a.c:
    int getItemsCount() -> c
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
com.ant.liao.BuildConfig -> com.ant.liao.BuildConfig:
    boolean DEBUG -> DEBUG
com.ant.liao.GifAction -> com.ant.liao.GifAction:
    void parseOk(boolean,int) -> parseOk
com.ant.liao.GifDecoder -> com.ant.liao.GifDecoder:
    int STATUS_PARSING -> STATUS_PARSING
    int STATUS_FORMAT_ERROR -> STATUS_FORMAT_ERROR
    int STATUS_OPEN_ERROR -> STATUS_OPEN_ERROR
    int STATUS_FINISH -> STATUS_FINISH
    java.io.InputStream in -> in
    int status -> status
    int width -> width
    int height -> height
    boolean gctFlag -> gctFlag
    int gctSize -> gctSize
    int loopCount -> loopCount
    int[] gct -> gct
    int[] lct -> lct
    int[] act -> act
    int bgIndex -> bgIndex
    int bgColor -> bgColor
    int lastBgColor -> lastBgColor
    int pixelAspect -> pixelAspect
    boolean lctFlag -> lctFlag
    boolean interlace -> interlace
    int lctSize -> lctSize
    int ix -> ix
    int iy -> iy
    int iw -> iw
    int ih -> ih
    int lrx -> lrx
    int lry -> lry
    int lrw -> lrw
    int lrh -> lrh
    android.graphics.Bitmap image -> image
    android.graphics.Bitmap lastImage -> lastImage
    com.ant.liao.GifFrame currentFrame -> currentFrame
    boolean isShow -> isShow
    byte[] block -> block
    int blockSize -> blockSize
    int dispose -> dispose
    int lastDispose -> lastDispose
    boolean transparency -> transparency
    int delay -> delay
    int transIndex -> transIndex
    int MaxStackSize -> MaxStackSize
    short[] prefix -> prefix
    byte[] suffix -> suffix
    byte[] pixelStack -> pixelStack
    byte[] pixels -> pixels
    com.ant.liao.GifFrame gifFrame -> gifFrame
    int frameCount -> frameCount
    com.ant.liao.GifAction action -> action
    byte[] gifData -> gifData
    void run() -> run
    void free() -> free
    int getStatus() -> getStatus
    boolean parseOk() -> parseOk
    int getDelay(int) -> getDelay
    int[] getDelays() -> getDelays
    int getFrameCount() -> getFrameCount
    android.graphics.Bitmap getImage() -> getImage
    int getLoopCount() -> getLoopCount
    void setPixels() -> setPixels
    android.graphics.Bitmap getFrameImage(int) -> getFrameImage
    com.ant.liao.GifFrame getCurrentFrame() -> getCurrentFrame
    com.ant.liao.GifFrame getFrame(int) -> getFrame
    void reset() -> reset
    com.ant.liao.GifFrame next() -> next
    int readByte() -> readByte
    int readStream() -> readStream
    void decodeImageData() -> decodeImageData
    boolean err() -> err
    void init() -> init
    int read() -> read
    int readBlock() -> readBlock
    int[] readColorTable(int) -> readColorTable
    void readContents() -> readContents
    void readGraphicControlExt() -> readGraphicControlExt
    void readHeader() -> readHeader
    void readImage() -> readImage
    void readLSD() -> readLSD
    void readNetscapeExt() -> readNetscapeExt
    int readShort() -> readShort
    void resetFrame() -> resetFrame
    void skip() -> skip
com.ant.liao.GifFrame -> com.ant.liao.GifFrame:
    android.graphics.Bitmap image -> image
    int delay -> delay
    com.ant.liao.GifFrame nextFrame -> nextFrame
com.ant.liao.GifView -> com.ant.liao.GifView:
    com.ant.liao.GifDecoder gifDecoder -> gifDecoder
    android.graphics.Bitmap currentImage -> currentImage
    boolean isRun -> isRun
    boolean pause -> pause
    int showWidth -> showWidth
    int showHeight -> showHeight
    android.graphics.Rect rect -> rect
    com.ant.liao.GifView$DrawThread drawThread -> drawThread
    com.ant.liao.GifView$GifImageType animationType -> animationType
    android.os.Handler redrawHandler -> redrawHandler
    int[] $SWITCH_TABLE$com$ant$liao$GifView$GifImageType -> $SWITCH_TABLE$com$ant$liao$GifView$GifImageType
    void setGifDecoderImage(byte[]) -> setGifDecoderImage
    void setGifDecoderImage(java.io.InputStream) -> setGifDecoderImage
    void setGifImage(byte[]) -> setGifImage
    void setGifImage(java.io.InputStream) -> setGifImage
    void setGifImage(int) -> setGifImage
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void showCover() -> showCover
    void showAnimation() -> showAnimation
    void setGifImageType(com.ant.liao.GifView$GifImageType) -> setGifImageType
    void setShowDimension(int,int) -> setShowDimension
    void parseOk(boolean,int) -> parseOk
    void reDraw() -> reDraw
    com.ant.liao.GifDecoder access$0(com.ant.liao.GifView) -> access$0
    boolean access$1(com.ant.liao.GifView) -> access$1
    boolean access$2(com.ant.liao.GifView) -> access$2
    void access$3(com.ant.liao.GifView,android.graphics.Bitmap) -> access$3
    android.os.Handler access$4(com.ant.liao.GifView) -> access$4
    int[] $SWITCH_TABLE$com$ant$liao$GifView$GifImageType() -> $SWITCH_TABLE$com$ant$liao$GifView$GifImageType
com.ant.liao.GifView$1 -> com.ant.liao.a:
    com.ant.liao.GifView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.ant.liao.GifView$DrawThread -> com.ant.liao.b:
    com.ant.liao.GifView this$0 -> a
    void run() -> run
com.ant.liao.GifView$GifImageType -> com.ant.liao.GifView$GifImageType:
    com.ant.liao.GifView$GifImageType WAIT_FINISH -> WAIT_FINISH
    com.ant.liao.GifView$GifImageType SYNC_DECODER -> SYNC_DECODER
    com.ant.liao.GifView$GifImageType COVER -> COVER
    int nativeInt -> nativeInt
    com.ant.liao.GifView$GifImageType[] ENUM$VALUES -> ENUM$VALUES
    com.ant.liao.GifView$GifImageType[] values() -> values
    com.ant.liao.GifView$GifImageType valueOf(java.lang.String) -> valueOf
com.ant.liao.R -> com.ant.liao.R:
com.ant.liao.R$attr -> com.ant.liao.R$attr:
com.ant.liao.R$drawable -> com.ant.liao.R$drawable:
    int icon -> icon
com.ant.liao.R$string -> com.ant.liao.R$string:
    int app_name -> app_name
    int hello -> hello
com.assistant.adapter.CallAdapter -> com.assistant.a.a:
    java.util.ArrayList callArr -> a
    android.content.Context context -> b
    android.widget.PopupWindow sendMsgPop -> c
    android.view.LayoutInflater mInflater -> d
    java.lang.String content -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.assistant.adapter.CallAdapter,java.lang.String,java.lang.String) -> a
com.assistant.adapter.CallAdapter$1 -> com.assistant.a.b:
    com.assistant.adapter.CallAdapter this$0 -> a
    com.assistant.model.CallModel val$model -> b
    void onClick(android.view.View) -> onClick
com.assistant.adapter.CallAdapter$2 -> com.assistant.a.c:
    com.assistant.adapter.CallAdapter this$0 -> a
    com.assistant.model.CallModel val$model -> b
    void onClick(android.view.View) -> onClick
com.assistant.adapter.CallAdapter$3 -> com.assistant.a.d:
    com.assistant.adapter.CallAdapter this$0 -> a
    com.assistant.model.CallModel val$model -> b
    void onClick(android.view.View) -> onClick
com.assistant.adapter.CallAdapter$4 -> com.assistant.a.e:
    com.assistant.adapter.CallAdapter this$0 -> a
    android.widget.EditText val$edtContent -> b
    java.lang.String val$phone -> c
    java.lang.String val$name -> d
    java.util.ArrayList val$smsInfos -> e
    com.assistant.adapter.SmsInfoAdapter val$sAdapter -> f
    android.widget.ListView val$infoList -> g
    void onClick(android.view.View) -> onClick
com.assistant.adapter.CallAdapter$5 -> com.assistant.a.f:
    com.assistant.adapter.CallAdapter this$0 -> a
    android.widget.EditText val$edtContent -> b
    void onDismiss() -> onDismiss
com.assistant.adapter.CallAdapter$ViewHolder -> com.assistant.a.g:
    android.widget.TextView name -> a
    android.widget.TextView phone -> b
    android.widget.TextView yixiang -> c
    android.widget.TextView huxing -> d
    android.widget.TextView time -> e
    android.widget.ImageButton callIn -> f
    android.widget.ImageButton message -> g
    com.assistant.adapter.CallAdapter this$0 -> h
com.assistant.adapter.DayAdapter -> com.assistant.a.h:
    java.util.ArrayList toDayList -> a
    android.view.LayoutInflater mInflater -> b
    android.content.Context context -> c
    int nowPosition -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.assistant.adapter.DayAdapter$1 -> com.assistant.a.i:
    com.assistant.adapter.DayAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
    com.assistant.adapter.DayAdapter access$0(com.assistant.adapter.DayAdapter$1) -> a
com.assistant.adapter.DayAdapter$1$1 -> com.assistant.a.j:
    com.assistant.adapter.DayAdapter$1 this$1 -> a
    int val$position -> b
    void run() -> run
com.assistant.adapter.DayAdapter$ViewHolder -> com.assistant.a.k:
    android.widget.ImageView timeLinePoint -> a
    android.widget.TextView day -> b
    android.widget.TextView month -> c
    com.assistant.adapter.DayAdapter this$0 -> d
com.assistant.adapter.GroupAdapter -> com.assistant.a.l:
    java.lang.String[] group -> f
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    int getItemsCount() -> c
    java.lang.CharSequence getItemText(int) -> a
com.assistant.adapter.LaoDaiXinAdapter -> com.assistant.a.m:
    java.util.ArrayList conArr -> a
    android.content.Context context -> b
    android.view.LayoutInflater mInflater -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.assistant.adapter.LaoDaiXinAdapter$1 -> com.assistant.a.n:
    com.assistant.adapter.LaoDaiXinAdapter this$0 -> a
    com.assistant.model.ConsumerModel val$model -> b
    void onClick(android.view.View) -> onClick
com.assistant.adapter.LaoDaiXinAdapter$ViewHolder -> com.assistant.a.o:
    android.widget.TextView name -> a
    android.widget.TextView phone -> b
    android.widget.TextView yixiang -> c
    android.widget.TextView huxing -> d
    android.widget.TextView time -> e
    android.widget.Button laoDaiXin -> f
    com.assistant.adapter.LaoDaiXinAdapter this$0 -> g
com.assistant.adapter.SendMsgAdapter -> com.assistant.a.p:
    java.util.ArrayList list -> a
    android.content.Context context -> b
    android.view.LayoutInflater mInflater -> c
    java.util.ArrayList phoneArr -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.assistant.adapter.SendMsgAdapter$1 -> com.assistant.a.q:
    com.assistant.adapter.SendMsgAdapter this$0 -> a
    com.assistant.model.ConsumerModel val$con -> b
    void onClick(android.view.View) -> onClick
com.assistant.adapter.SendMsgAdapter$ViewHolder -> com.assistant.a.r:
    android.widget.TextView name -> a
    android.widget.TextView yixiang -> b
    android.widget.TextView zijinshili -> c
    android.widget.TextView time -> d
    android.widget.RadioButton check -> e
    com.assistant.adapter.SendMsgAdapter this$0 -> f
com.assistant.adapter.SmsAdapter -> com.assistant.a.s:
    android.content.Context context -> a
    java.util.ArrayList info -> b
    android.view.LayoutInflater mInflater -> c
    android.widget.PopupWindow sendMsgPop -> d
    java.lang.String content -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.assistant.adapter.SmsAdapter,java.lang.String,java.lang.String) -> a
com.assistant.adapter.SmsAdapter$1 -> com.assistant.a.t:
    com.assistant.adapter.SmsAdapter this$0 -> a
    com.assistant.model.SmsInfo val$smsInfo -> b
    void onClick(android.view.View) -> onClick
com.assistant.adapter.SmsAdapter$2 -> com.assistant.a.u:
    com.assistant.adapter.SmsAdapter this$0 -> a
    java.lang.String val$phone -> b
    android.widget.EditText val$edtContent -> c
    java.lang.String val$name -> d
    java.util.ArrayList val$smsInfos -> e
    com.assistant.adapter.SmsInfoAdapter val$sAdapter -> f
    android.widget.ListView val$infoList -> g
    void onClick(android.view.View) -> onClick
com.assistant.adapter.SmsAdapter$3 -> com.assistant.a.v:
    com.assistant.adapter.SmsAdapter this$0 -> a
    android.widget.EditText val$edtContent -> b
    void onDismiss() -> onDismiss
com.assistant.adapter.SmsAdapter$ViewHolder -> com.assistant.a.w:
    android.widget.TextView phone -> a
    android.widget.TextView content -> b
    android.widget.TextView time -> c
    com.assistant.adapter.SmsAdapter this$0 -> d
com.assistant.adapter.SmsInfoAdapter -> com.assistant.a.x:
    java.util.ArrayList infoList -> a
    android.content.Context context -> b
    android.view.LayoutInflater mInflater -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.assistant.adapter.SmsInfoAdapter$ViewHolder -> com.assistant.a.y:
    android.widget.TextView tv_name -> a
    android.widget.TextView tv_time -> b
    android.widget.TextView tv_chatContent -> c
    com.assistant.adapter.SmsInfoAdapter this$0 -> d
com.assistant.fragment.FiveFragment -> com.assistant.fragment.FiveFragment:
    android.widget.LinearLayout rootView -> d
    com.assistant.view.PieChartView mChartView -> e
    antistatic.spinnerwheel.AbstractWheel select -> f
    android.widget.TextView leibie -> g
    boolean scrolling -> h
    int currentItem -> i
    android.app.ProgressDialog pDia -> j
    int currenPosition -> a
    com.assistant.view.PopMenu popMenu -> k
    java.lang.String[] Group -> b
    android.os.Handler myHandler -> l
    android.widget.AdapterView$OnItemClickListener popmenuItemClickListener -> c
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void initData() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.app.ProgressDialog access$0(com.assistant.fragment.FiveFragment) -> a
    android.widget.LinearLayout access$1(com.assistant.fragment.FiveFragment) -> b
    void access$2(com.assistant.fragment.FiveFragment,com.assistant.view.PieChartView) -> a
    com.assistant.view.PieChartView access$3(com.assistant.fragment.FiveFragment) -> c
    void access$4(com.assistant.fragment.FiveFragment) -> d
    android.widget.TextView access$5(com.assistant.fragment.FiveFragment) -> e
    com.assistant.view.PopMenu access$6(com.assistant.fragment.FiveFragment) -> f
    boolean access$7(com.assistant.fragment.FiveFragment) -> g
    antistatic.spinnerwheel.AbstractWheel access$8(com.assistant.fragment.FiveFragment) -> h
    void access$9(com.assistant.fragment.FiveFragment,int) -> a
    void access$10(com.assistant.fragment.FiveFragment) -> i
    void access$11(com.assistant.fragment.FiveFragment,boolean) -> a
    android.os.Handler access$12(com.assistant.fragment.FiveFragment) -> j
    int access$13(com.assistant.fragment.FiveFragment) -> k
com.assistant.fragment.FiveFragment$1 -> com.assistant.fragment.a:
    com.assistant.fragment.FiveFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.fragment.FiveFragment$2 -> com.assistant.fragment.b:
    com.assistant.fragment.FiveFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.assistant.fragment.FiveFragment$3 -> com.assistant.fragment.c:
    com.assistant.fragment.FiveFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.fragment.FiveFragment$4 -> com.assistant.fragment.d:
    com.assistant.fragment.FiveFragment this$0 -> a
    void onChanged$1cad4ebf() -> a
com.assistant.fragment.FiveFragment$5 -> com.assistant.fragment.e:
    com.assistant.fragment.FiveFragment this$0 -> a
    void onScrollingStarted$1c351521() -> a
    void onScrollingFinished$1c351521() -> b
com.assistant.fragment.FiveFragment$6 -> com.assistant.fragment.f:
    com.assistant.fragment.FiveFragment this$0 -> a
    void run() -> run
com.assistant.fragment.FourFragment -> com.assistant.fragment.FourFragment:
    boolean scrolling -> o
    android.widget.PopupWindow sendMsgPop -> a
    android.widget.Button sendMessage -> b
    int arrId -> c
    java.util.ArrayList contacts -> d
    android.widget.ListView listview -> p
    android.widget.ListView contactList -> q
    java.util.ArrayList infos -> r
    java.util.ArrayList constactsList -> s
    com.assistant.adapter.SmsAdapter sAdapter -> t
    com.assistant.adapter.SendMsgAdapter smAdapter -> u
    android.widget.Button importContacts -> v
    int sendSize -> w
    boolean isShow -> x
    java.lang.String smsContent -> e
    android.widget.TextView sendCount -> f
    java.lang.String DELIVERED_SMS_ACTION -> g
    java.lang.String RECIEVE_SMS_ACTION -> h
    java.lang.String SMS_SEND_ACTIOIN -> i
    android.os.Handler myHandler -> j
    android.content.BroadcastReceiver m_BroadcastReceiver -> k
    java.lang.String[] Group -> l
    java.util.ArrayList phoneArr -> m
    antistatic.spinnerwheel.AbstractWheel group -> n
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onResume() -> onResume
    void initData() -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void access$0(com.assistant.fragment.FourFragment,java.util.ArrayList) -> a
    java.util.ArrayList access$1(com.assistant.fragment.FourFragment) -> a
    void access$2(com.assistant.fragment.FourFragment,com.assistant.adapter.SmsAdapter) -> a
    android.widget.ListView access$3(com.assistant.fragment.FourFragment) -> b
    com.assistant.adapter.SmsAdapter access$4(com.assistant.fragment.FourFragment) -> c
    void access$5(com.assistant.fragment.FourFragment,com.assistant.adapter.SendMsgAdapter) -> a
    android.widget.ListView access$6(com.assistant.fragment.FourFragment) -> d
    com.assistant.adapter.SendMsgAdapter access$7(com.assistant.fragment.FourFragment) -> e
    int access$8(com.assistant.fragment.FourFragment) -> f
    void access$9(com.assistant.fragment.FourFragment,int) -> a
    void access$10(com.assistant.fragment.FourFragment) -> g
    boolean access$11(com.assistant.fragment.FourFragment) -> h
    void access$12(com.assistant.fragment.FourFragment,boolean) -> a
    boolean access$13(com.assistant.fragment.FourFragment) -> i
    void access$14(com.assistant.fragment.FourFragment,boolean) -> b
    void access$15$5b13eefd(com.assistant.fragment.FourFragment,android.widget.EditText,java.util.ArrayList) -> a
com.assistant.fragment.FourFragment$1 -> com.assistant.fragment.g:
    com.assistant.fragment.FourFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.fragment.FourFragment$2 -> com.assistant.fragment.h:
    com.assistant.fragment.FourFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.assistant.fragment.FourFragment$3 -> com.assistant.fragment.i:
    com.assistant.fragment.FourFragment this$0 -> a
    void run() -> run
com.assistant.fragment.FourFragment$4 -> com.assistant.fragment.j:
    com.assistant.fragment.FourFragment this$0 -> a
    void onChanged$1cad4ebf() -> a
com.assistant.fragment.FourFragment$5 -> com.assistant.fragment.k:
    com.assistant.fragment.FourFragment this$0 -> a
    void onScrollingStarted$1c351521() -> a
    void onScrollingFinished$1c351521() -> b
com.assistant.fragment.FourFragment$5$1 -> com.assistant.fragment.l:
    com.assistant.fragment.FourFragment$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.fragment.FourFragment$5$2 -> com.assistant.fragment.m:
    com.assistant.fragment.FourFragment$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.fragment.FourFragment$6 -> com.assistant.fragment.n:
    com.assistant.fragment.FourFragment this$0 -> a
    android.widget.EditText val$edtContent -> b
    void onClick(android.view.View) -> onClick
com.assistant.fragment.FourFragment$7 -> com.assistant.fragment.o:
    com.assistant.fragment.FourFragment this$0 -> a
    android.widget.EditText val$edtContent -> b
    void onDismiss() -> onDismiss
com.assistant.fragment.FourFragment$ContactsAdapter -> com.assistant.fragment.p:
    java.lang.String[] contactsGroup -> g
    com.assistant.fragment.FourFragment this$0 -> f
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    int getItemsCount() -> c
    java.lang.CharSequence getItemText(int) -> a
com.assistant.fragment.OneFragment -> com.assistant.fragment.OneFragment:
    android.widget.ListView orderList -> a
    boolean scrolling -> r
    int arrId -> b
    android.widget.TextView title -> c
    android.widget.EditText phone -> d
    android.widget.Button btnAdd -> e
    android.widget.Button fastAdd -> f
    com.assistant.fragment.OneFragment$TaskAdapter orderAdapter -> g
    com.assistant.adapter.CallAdapter cAdapter -> h
    java.util.ArrayList taskArr -> i
    java.util.ArrayList orderArr -> j
    java.util.ArrayList heimingdanArr -> k
    java.util.ArrayList laoyezhuArr -> l
    java.util.ArrayList callArr -> m
    antistatic.spinnerwheel.AbstractWheel group -> n
    java.lang.String[] Group -> o
    android.os.Handler myHandler -> s
    android.content.BroadcastReceiver m_BroadcastReceiver -> p
    java.util.Comparator comparator -> q
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    boolean isNumeric(java.lang.String) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onDestroy() -> onDestroy
    void access$0(com.assistant.fragment.OneFragment) -> a
    android.os.Handler access$1(com.assistant.fragment.OneFragment) -> b
    void access$2(com.assistant.fragment.OneFragment,boolean) -> a
com.assistant.fragment.OneFragment$1 -> com.assistant.fragment.q:
    com.assistant.fragment.OneFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.fragment.OneFragment$2 -> com.assistant.fragment.r:
    com.assistant.fragment.OneFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.assistant.fragment.OneFragment$3 -> com.assistant.fragment.s:
    com.assistant.fragment.OneFragment this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.assistant.fragment.OneFragment$4 -> com.assistant.fragment.t:
    com.assistant.fragment.OneFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.assistant.fragment.OneFragment access$0(com.assistant.fragment.OneFragment$4) -> a
com.assistant.fragment.OneFragment$4$1 -> com.assistant.fragment.u:
    com.assistant.fragment.OneFragment$4 this$1 -> a
    java.lang.String val$str -> b
    void run() -> run
com.assistant.fragment.OneFragment$5 -> com.assistant.fragment.v:
    com.assistant.fragment.OneFragment this$0 -> a
    void onClick(android.view.View) -> onClick
    com.assistant.fragment.OneFragment access$0(com.assistant.fragment.OneFragment$5) -> a
com.assistant.fragment.OneFragment$5$1 -> com.assistant.fragment.w:
    com.assistant.fragment.OneFragment$5 this$1 -> a
    java.lang.String val$str -> b
    void run() -> run
com.assistant.fragment.OneFragment$6 -> com.assistant.fragment.x:
    com.assistant.fragment.OneFragment this$0 -> a
    void onChanged$1cad4ebf() -> a
com.assistant.fragment.OneFragment$7 -> com.assistant.fragment.y:
    com.assistant.fragment.OneFragment this$0 -> a
    void onScrollingStarted$1c351521() -> a
    void onScrollingFinished$1c351521() -> b
com.assistant.fragment.OneFragment$7$1 -> com.assistant.fragment.z:
    com.assistant.fragment.OneFragment$7 this$1 -> a
    void run() -> run
com.assistant.fragment.OneFragment$7$2 -> com.assistant.fragment.aa:
    com.assistant.fragment.OneFragment$7 this$1 -> a
    void run() -> run
com.assistant.fragment.OneFragment$7$2$1 -> com.assistant.fragment.ab:
    com.assistant.fragment.OneFragment$7$2 this$2 -> a
com.assistant.fragment.OneFragment$TaskAdapter -> com.assistant.fragment.ac:
    java.lang.String content -> a
    java.util.ArrayList conArr -> b
    android.view.LayoutInflater mInflater -> c
    android.widget.PopupWindow sendMsgPop -> d
    com.assistant.fragment.OneFragment this$0 -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.assistant.fragment.OneFragment$TaskAdapter,java.lang.String,java.lang.String) -> a
    com.assistant.fragment.OneFragment access$1(com.assistant.fragment.OneFragment$TaskAdapter) -> a
com.assistant.fragment.OneFragment$TaskAdapter$1 -> com.assistant.fragment.ad:
    com.assistant.fragment.OneFragment$TaskAdapter this$1 -> a
    com.assistant.model.ConsumerModel val$con -> b
    void onClick(android.view.View) -> onClick
com.assistant.fragment.OneFragment$TaskAdapter$2 -> com.assistant.fragment.ae:
    com.assistant.fragment.OneFragment$TaskAdapter this$1 -> a
    com.assistant.model.ConsumerModel val$con -> b
    void onClick(android.view.View) -> onClick
com.assistant.fragment.OneFragment$TaskAdapter$3 -> com.assistant.fragment.af:
    com.assistant.fragment.OneFragment$TaskAdapter this$1 -> a
    com.assistant.model.ConsumerModel val$con -> b
    void onClick(android.view.View) -> onClick
com.assistant.fragment.OneFragment$TaskAdapter$4 -> com.assistant.fragment.ag:
    com.assistant.fragment.OneFragment$TaskAdapter this$1 -> a
    android.widget.EditText val$edtContent -> b
    java.lang.String val$phone -> c
    java.lang.String val$name -> d
    java.util.ArrayList val$smsInfos -> e
    com.assistant.adapter.SmsInfoAdapter val$sAdapter -> f
    android.widget.ListView val$infoList -> g
    void onClick(android.view.View) -> onClick
com.assistant.fragment.OneFragment$TaskAdapter$5 -> com.assistant.fragment.ah:
    com.assistant.fragment.OneFragment$TaskAdapter this$1 -> a
    android.widget.EditText val$edtContent -> b
    void onDismiss() -> onDismiss
com.assistant.fragment.OneFragment$TaskAdapter$ViewHolder -> com.assistant.fragment.ai:
    android.widget.TextView name -> a
    android.widget.TextView phone -> b
    android.widget.TextView yusuan -> c
    android.widget.TextView yixiang -> d
    android.widget.TextView beizhu -> e
    android.widget.ImageView call -> f
    android.widget.ImageView message -> g
    com.assistant.fragment.OneFragment$TaskAdapter this$1 -> h
com.assistant.fragment.ThreeFragment -> com.assistant.fragment.ThreeFragment:
    boolean scrolling -> m
    boolean tellPhoneScrolling -> n
    android.widget.TextView name -> o
    android.widget.TextView phone -> p
    android.widget.TextView kehushuxing -> q
    android.widget.TextView yixiangyetai -> r
    android.widget.TextView yixiang -> s
    android.widget.TextView laoyezhuPhone -> t
    android.widget.ImageView call -> u
    android.widget.ImageView message -> v
    android.widget.ImageView editer -> w
    java.lang.String searchStr -> x
    java.lang.String content -> y
    android.widget.EditText et_search -> z
    boolean isSearch -> a
    boolean isShow -> b
    android.app.AlertDialog$Builder dialog -> c
    android.widget.PopupWindow sendMsgPop -> d
    antistatic.spinnerwheel.AbstractWheel group -> e
    antistatic.spinnerwheel.AbstractWheel tellPhone -> f
    com.assistant.model.ConsumerModel consumer -> g
    java.util.ArrayList contacts -> h
    java.util.ArrayList checkList -> i
    int arrId -> j
    java.lang.String[] Group -> k
    int[] mActiveContacts -> A
    android.content.BroadcastReceiver m_BroadcastReceiver -> l
    int mActiveContact -> B
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    boolean comparesTime(java.lang.String,java.lang.String,java.text.DateFormat) -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    boolean isNumeric(java.lang.String) -> a
    void checkSearchStr(java.lang.String) -> b
    void onDestroy() -> onDestroy
    void access$0(com.assistant.fragment.ThreeFragment) -> a
    android.widget.EditText access$1(com.assistant.fragment.ThreeFragment) -> b
    void access$2(com.assistant.fragment.ThreeFragment,java.lang.String) -> a
    java.lang.String access$3(com.assistant.fragment.ThreeFragment) -> c
    int access$4(com.assistant.fragment.ThreeFragment) -> d
    void access$5(com.assistant.fragment.ThreeFragment,antistatic.spinnerwheel.AbstractWheel,java.util.ArrayList,int) -> a
    void access$6(com.assistant.fragment.ThreeFragment,com.assistant.model.ConsumerModel) -> a
    void access$7(com.assistant.fragment.ThreeFragment,java.lang.String) -> b
    android.widget.TextView access$8(com.assistant.fragment.ThreeFragment) -> e
    android.widget.TextView access$9(com.assistant.fragment.ThreeFragment) -> f
    void access$10(com.assistant.fragment.ThreeFragment,java.lang.String,java.lang.String) -> a
    boolean access$11(com.assistant.fragment.ThreeFragment) -> g
    void access$12(com.assistant.fragment.ThreeFragment,boolean) -> a
    boolean access$13(com.assistant.fragment.ThreeFragment) -> h
    void access$14(com.assistant.fragment.ThreeFragment,boolean) -> b
    void access$15(com.assistant.fragment.ThreeFragment) -> i
    android.widget.ImageView access$16(com.assistant.fragment.ThreeFragment) -> j
    boolean access$17$6dd45703(java.lang.String,java.lang.String,java.text.DateFormat) -> a
com.assistant.fragment.ThreeFragment$1 -> com.assistant.fragment.aj:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.assistant.fragment.ThreeFragment$10 -> com.assistant.fragment.ak:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onScrollingStarted$1c351521() -> a
    void onScrollingFinished$1c351521() -> b
com.assistant.fragment.ThreeFragment$10$1 -> com.assistant.fragment.al:
    com.assistant.fragment.ThreeFragment$10 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.fragment.ThreeFragment$10$2 -> com.assistant.fragment.am:
    com.assistant.fragment.ThreeFragment$10 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.fragment.ThreeFragment$11 -> com.assistant.fragment.an:
    com.assistant.fragment.ThreeFragment this$0 -> a
    com.example.timeselect.WheelMain val$wheelMain -> b
    java.text.DateFormat val$dateFormat -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.fragment.ThreeFragment$12 -> com.assistant.fragment.ao:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.fragment.ThreeFragment$2 -> com.assistant.fragment.ap:
    com.assistant.fragment.ThreeFragment this$0 -> a
    java.lang.String val$phone -> b
    android.widget.EditText val$edtContent -> c
    java.lang.String val$name -> d
    java.util.ArrayList val$smsInfos -> e
    com.assistant.adapter.SmsInfoAdapter val$sAdapter -> f
    android.widget.ListView val$infoList -> g
    void onClick(android.view.View) -> onClick
com.assistant.fragment.ThreeFragment$3 -> com.assistant.fragment.aq:
    com.assistant.fragment.ThreeFragment this$0 -> a
    android.widget.EditText val$edtContent -> b
    void onDismiss() -> onDismiss
com.assistant.fragment.ThreeFragment$4 -> com.assistant.fragment.ar:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.fragment.ThreeFragment$5 -> com.assistant.fragment.as:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.fragment.ThreeFragment$6 -> com.assistant.fragment.at:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.fragment.ThreeFragment$7 -> com.assistant.fragment.au:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onChanged$1cad4ebf() -> a
com.assistant.fragment.ThreeFragment$8 -> com.assistant.fragment.av:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onScrollingStarted$1c351521() -> a
    void onScrollingFinished$1c351521() -> b
com.assistant.fragment.ThreeFragment$9 -> com.assistant.fragment.aw:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void onChanged$1cad4ebf() -> a
com.assistant.fragment.ThreeFragment$ContactsAdapter -> com.assistant.fragment.ax:
    java.util.ArrayList contactsList -> f
    com.assistant.fragment.ThreeFragment this$0 -> g
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    int getItemsCount() -> c
    java.lang.CharSequence getItemText(int) -> a
com.assistant.fragment.ThreeFragment$EdtTextWatch -> com.assistant.fragment.ay:
    com.assistant.fragment.ThreeFragment this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.assistant.fragment.TwoFragment -> com.assistant.fragment.TwoFragment:
    android.widget.ListView dayList -> e
    android.widget.ListView phoneList -> f
    java.util.ArrayList toDayList -> g
    java.util.ArrayList temp -> a
    com.assistant.adapter.DayAdapter dAdapter -> h
    android.widget.PopupWindow phonePop -> i
    com.assistant.fragment.TwoFragment$PhoneAdapter pAdapter -> j
    android.view.View popView -> k
    int position -> l
    android.view.LayoutInflater mInflater -> m
    android.widget.LinearLayout progress_show -> n
    int i -> o
    java.lang.String content -> p
    android.widget.TextView title -> q
    android.widget.TextView name -> r
    android.widget.TextView quyu -> s
    android.widget.TextView zhanghao -> t
    android.widget.TextView dayXinFang -> u
    android.widget.TextView dayFuFang -> v
    android.widget.TextView dayLaiFang -> w
    android.widget.TextView dayYiXiangQiang -> x
    android.widget.TextView dayYiXiangZhong -> y
    android.widget.TextView dayYiXiangYiBan -> z
    android.widget.TextView dayLaiDian -> A
    android.widget.TextView dayDianZhuanFang -> B
    android.widget.TextView dayXinZengRenGou -> C
    android.widget.TextView dayXinZengQianYue -> D
    android.widget.TextView monthXinFang -> E
    android.widget.TextView monthFuFang -> F
    android.widget.TextView monthLaiFang -> G
    android.widget.TextView monthYiXiangQiang -> H
    android.widget.TextView monthYiXiangZhong -> I
    android.widget.TextView monthYiXiangYiBan -> J
    android.widget.TextView monthLaiDian -> K
    android.widget.TextView monthDianZhuanFang -> L
    android.widget.TextView monthXinZengRenGou -> M
    android.widget.TextView monthXinZengQianYue -> N
    android.widget.TextView yearTao -> O
    android.widget.TextView yearMoney -> P
    android.content.BroadcastReceiver m_BroadcastReceiver -> b
    android.os.Handler myHandler -> c
    java.util.Comparator comparator -> d
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    java.util.List deepCopy(java.util.List) -> a
    void initData() -> a
    void showPop() -> b
    void onDestroy() -> onDestroy
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onClick(android.view.View) -> onClick
    java.util.ArrayList removeMuti(java.util.ArrayList) -> a
    void access$0(com.assistant.fragment.TwoFragment,int) -> a
    int access$1(com.assistant.fragment.TwoFragment) -> a
    void access$2(com.assistant.fragment.TwoFragment,com.assistant.model.TodayStatistics) -> a
    void access$3(com.assistant.fragment.TwoFragment,com.assistant.adapter.DayAdapter) -> a
    android.widget.ListView access$4(com.assistant.fragment.TwoFragment) -> b
    com.assistant.adapter.DayAdapter access$5(com.assistant.fragment.TwoFragment) -> c
    void access$6(com.assistant.fragment.TwoFragment) -> d
    void access$7(com.assistant.fragment.TwoFragment) -> e
    android.widget.TextView access$8(com.assistant.fragment.TwoFragment) -> f
    android.view.LayoutInflater access$9(com.assistant.fragment.TwoFragment) -> g
    java.lang.String access$10(com.assistant.fragment.TwoFragment) -> h
    android.widget.ListView access$11(com.assistant.fragment.TwoFragment) -> i
    void access$12(com.assistant.fragment.TwoFragment,java.lang.String) -> a
    android.widget.LinearLayout access$13(com.assistant.fragment.TwoFragment) -> j
    int access$14(com.assistant.fragment.TwoFragment) -> k
    void access$15(com.assistant.fragment.TwoFragment,int) -> b
    java.util.ArrayList access$16(com.assistant.fragment.TwoFragment) -> l
com.assistant.fragment.TwoFragment$1 -> com.assistant.fragment.az:
    com.assistant.fragment.TwoFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.assistant.fragment.TwoFragment$2 -> com.assistant.fragment.ba:
    com.assistant.fragment.TwoFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.fragment.TwoFragment$3 -> com.assistant.fragment.bb:
    com.assistant.fragment.TwoFragment this$0 -> a
    int compare(com.assistant.model.TodayStatistics,com.assistant.model.TodayStatistics) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.assistant.fragment.TwoFragment$4 -> com.assistant.fragment.bc:
    com.assistant.fragment.TwoFragment this$0 -> a
    void onDismiss() -> onDismiss
com.assistant.fragment.TwoFragment$5 -> com.assistant.fragment.bd:
    com.assistant.fragment.TwoFragment this$0 -> a
    void run() -> run
com.assistant.fragment.TwoFragment$5$1 -> com.assistant.fragment.be:
    com.assistant.fragment.TwoFragment$5 this$1 -> a
com.assistant.fragment.TwoFragment$PhoneAdapter -> com.assistant.fragment.bf:
    java.util.ArrayList arrList -> a
    android.widget.PopupWindow sendMsgPop -> b
    com.assistant.fragment.TwoFragment this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.assistant.fragment.TwoFragment$PhoneAdapter,java.lang.String,java.lang.String) -> a
    com.assistant.fragment.TwoFragment access$1(com.assistant.fragment.TwoFragment$PhoneAdapter) -> a
com.assistant.fragment.TwoFragment$PhoneAdapter$1 -> com.assistant.fragment.bg:
    com.assistant.fragment.TwoFragment$PhoneAdapter this$1 -> a
    com.assistant.model.TodayStatistics val$today -> b
    void onClick(android.view.View) -> onClick
com.assistant.fragment.TwoFragment$PhoneAdapter$2 -> com.assistant.fragment.bh:
    com.assistant.fragment.TwoFragment$PhoneAdapter this$1 -> a
    com.assistant.model.TodayStatistics val$today -> b
    void onClick(android.view.View) -> onClick
com.assistant.fragment.TwoFragment$PhoneAdapter$3 -> com.assistant.fragment.bi:
    com.assistant.fragment.TwoFragment$PhoneAdapter this$1 -> a
    android.widget.EditText val$edtContent -> b
    java.lang.String val$phone -> c
    java.lang.String val$name -> d
    java.util.ArrayList val$smsInfos -> e
    com.assistant.adapter.SmsInfoAdapter val$sAdapter -> f
    void onClick(android.view.View) -> onClick
com.assistant.fragment.TwoFragment$PhoneAdapter$4 -> com.assistant.fragment.bj:
    com.assistant.fragment.TwoFragment$PhoneAdapter this$1 -> a
    android.widget.EditText val$edtContent -> b
    void onDismiss() -> onDismiss
com.assistant.fragment.TwoFragment$PhoneAdapter$ViewHolder -> com.assistant.fragment.bk:
    android.widget.TextView name -> a
    android.widget.TextView phone -> b
    android.widget.ImageButton call -> c
    android.widget.ImageButton message -> d
    com.assistant.fragment.TwoFragment$PhoneAdapter this$1 -> e
com.assistant.model.BeizhuModel -> com.assistant.model.BeizhuModel:
    java.lang.String beizhu -> beizhu
    java.lang.String time -> time
    java.lang.String getBeizhu() -> getBeizhu
    void setBeizhu(java.lang.String) -> setBeizhu
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
com.assistant.model.CallModel -> com.assistant.model.a:
    java.lang.String callTime -> a
    java.lang.String stopTime -> b
    java.lang.String phone -> c
    java.lang.String name -> d
    java.lang.String yixianghuxing -> e
    java.lang.String yixiang -> f
    java.lang.String yusuan -> g
    boolean in -> h
    boolean out -> i
    java.lang.String getCallTime() -> a
    java.lang.String getPhone() -> b
    java.lang.String getName() -> c
    java.lang.String getYixianghuxing() -> d
    java.lang.String getYixiang() -> e
    boolean isOut() -> f
com.assistant.model.ConsumerAccept -> com.assistant.model.ConsumerAccept:
    int customer_id -> customer_id
    int serverid -> serverid
    java.lang.String customer_name -> customer_name
    java.lang.String isaccept -> isaccept
    java.lang.String ishelp -> ishelp
    java.lang.String helpacceptname -> helpacceptname
    java.lang.String accept -> accept
    java.lang.String datatime -> datatime
    java.lang.String customer_phone -> customer_phone
    java.lang.String imgpath -> imgpath
    java.lang.String beizhu -> beizhu
    java.lang.String saleid -> saleid
    java.lang.String consultantname -> consultantname
    java.lang.String consultantphone -> consultantphone
    java.lang.String building -> building
    java.lang.String voicePath -> voicePath
    boolean select -> select
    int getServerid() -> getServerid
    boolean isSelect() -> isSelect
    void setSelect(boolean) -> setSelect
    void setServerid(int) -> setServerid
    java.lang.String getVoicePath() -> getVoicePath
    void setVoicePath(java.lang.String) -> setVoicePath
    java.lang.String getBuilding() -> getBuilding
    void setBuilding(java.lang.String) -> setBuilding
    java.lang.String getConsultantname() -> getConsultantname
    void setConsultantname(java.lang.String) -> setConsultantname
    java.lang.String getConsultantphone() -> getConsultantphone
    void setConsultantphone(java.lang.String) -> setConsultantphone
    java.lang.String getSaleid() -> getSaleid
    void setSaleid(java.lang.String) -> setSaleid
    java.lang.String getIshelp() -> getIshelp
    void setIshelp(java.lang.String) -> setIshelp
    java.lang.String getBeizhu() -> getBeizhu
    void setBeizhu(java.lang.String) -> setBeizhu
    java.lang.String getImgpath() -> getImgpath
    void setImgpath(java.lang.String) -> setImgpath
    int getCustomer_id() -> getCustomer_id
    void setCustomer_id(int) -> setCustomer_id
    java.lang.String getCustomer_phone() -> getCustomer_phone
    void setCustomer_phone(java.lang.String) -> setCustomer_phone
    java.lang.String getCustomer_name() -> getCustomer_name
    void setCustomer_name(java.lang.String) -> setCustomer_name
    java.lang.String getIsaccept() -> getIsaccept
    void setIsaccept(java.lang.String) -> setIsaccept
    java.lang.String getHelpacceptname() -> getHelpacceptname
    void setHelpacceptname(java.lang.String) -> setHelpacceptname
    java.lang.String getAccept() -> getAccept
    void setAccept(java.lang.String) -> setAccept
    java.lang.String getDatatime() -> getDatatime
    void setDatatime(java.lang.String) -> setDatatime
com.assistant.model.ConsumerModel -> com.assistant.model.ConsumerModel:
    int customer_id -> customer_id
    int callGrade -> callGrade
    java.lang.String customer_name -> customer_name
    java.lang.String customer_phone -> customer_phone
    java.lang.String consultantname -> consultantname
    java.lang.String consultantphone -> consultantphone
    java.lang.String datatime -> datatime
    java.lang.String kehuleixing -> kehuleixing
    java.lang.String xingbie -> xingbie
    java.lang.String yisuan -> yisuan
    java.lang.String yixiang -> yixiang
    java.lang.String yixiangyetai -> yixiangyetai
    java.lang.String kehuzu -> kehuzu
    java.lang.String yixiangmianji -> yixiangmianji
    java.lang.String zijinshili -> zijinshili
    java.lang.String yixianghuxing -> yixianghuxing
    java.lang.String kehushuxing -> kehushuxing
    java.lang.String renzhiqudao -> renzhiqudao
    java.lang.String dizhi -> dizhi
    java.lang.String temp1 -> temp1
    java.lang.String beizhu -> beizhu
    java.lang.String temp2 -> temp2
    java.lang.String temp3 -> temp3
    java.lang.String temp4 -> temp4
    java.lang.String temp5 -> temp5
    java.lang.String temp6 -> temp6
    java.lang.String temp7 -> temp7
    java.lang.String temp8 -> temp8
    java.lang.String temp9 -> temp9
    java.lang.String temp10 -> temp10
    java.lang.String louhao -> louhao
    java.lang.String quyu -> quyu
    java.lang.String laifangshijian -> laifangshijian
    java.lang.String lastCallTime -> lastCallTime
    java.lang.String shenfenzheng -> shenfenzheng
    java.lang.String pinyin -> pinyin
    java.lang.String laoyezhuphone -> laoyezhuphone
    java.lang.String chengjiaojine -> chengjiaojine
    java.lang.String getLaoyezhuphone() -> getLaoyezhuphone
    void setLaoyezhuphone(java.lang.String) -> setLaoyezhuphone
    java.lang.String getChengjiaojine() -> getChengjiaojine
    void setChengjiaojine(java.lang.String) -> setChengjiaojine
    java.lang.String getPinyin() -> getPinyin
    void setPinyin(java.lang.String) -> setPinyin
    java.lang.String getLastCallTime() -> getLastCallTime
    void setLastCallTime(java.lang.String) -> setLastCallTime
    int getCallGrade() -> getCallGrade
    void setCallGrade(int) -> setCallGrade
    java.lang.String getLaifangshijian() -> getLaifangshijian
    void setLaifangshijian(java.lang.String) -> setLaifangshijian
    java.lang.String getQuyu() -> getQuyu
    void setQuyu(java.lang.String) -> setQuyu
    java.lang.String getLouhao() -> getLouhao
    void setLouhao(java.lang.String) -> setLouhao
    java.lang.String getBeizhu() -> getBeizhu
    void setBeizhu(java.lang.String) -> setBeizhu
    int getCustomer_id() -> getCustomer_id
    void setCustomer_id(int) -> setCustomer_id
    java.lang.String getCustomer_name() -> getCustomer_name
    void setCustomer_name(java.lang.String) -> setCustomer_name
    java.lang.String getCustomer_phone() -> getCustomer_phone
    void setCustomer_phone(java.lang.String) -> setCustomer_phone
    java.lang.String getConsultantname() -> getConsultantname
    void setConsultantname(java.lang.String) -> setConsultantname
    java.lang.String getConsultantphone() -> getConsultantphone
    void setConsultantphone(java.lang.String) -> setConsultantphone
    java.lang.String getDatatime() -> getDatatime
    void setDatatime(java.lang.String) -> setDatatime
    java.lang.String getKehuleixing() -> getKehuleixing
    void setKehuleixing(java.lang.String) -> setKehuleixing
    java.lang.String getXingbie() -> getXingbie
    void setXingbie(java.lang.String) -> setXingbie
    java.lang.String getYisuan() -> getYisuan
    void setYisuan(java.lang.String) -> setYisuan
    java.lang.String getYixiang() -> getYixiang
    void setYixiang(java.lang.String) -> setYixiang
    java.lang.String getYixiangyetai() -> getYixiangyetai
    void setYixiangyetai(java.lang.String) -> setYixiangyetai
    java.lang.String getKehuzu() -> getKehuzu
    void setKehuzu(java.lang.String) -> setKehuzu
    java.lang.String getYixiangmianji() -> getYixiangmianji
    void setYixiangmianji(java.lang.String) -> setYixiangmianji
    java.lang.String getZijinshili() -> getZijinshili
    void setZijinshili(java.lang.String) -> setZijinshili
    java.lang.String getYixianghuxing() -> getYixianghuxing
    void setYixianghuxing(java.lang.String) -> setYixianghuxing
    java.lang.String getKehushuxing() -> getKehushuxing
    void setKehushuxing(java.lang.String) -> setKehushuxing
    java.lang.String getRenzhiqudao() -> getRenzhiqudao
    void setRenzhiqudao(java.lang.String) -> setRenzhiqudao
    java.lang.String getDizhi() -> getDizhi
    void setDizhi(java.lang.String) -> setDizhi
    java.lang.String getTemp1() -> getTemp1
    void setTemp1(java.lang.String) -> setTemp1
    java.lang.String getTemp2() -> getTemp2
    void setTemp2(java.lang.String) -> setTemp2
    java.lang.String getTemp3() -> getTemp3
    void setTemp3(java.lang.String) -> setTemp3
    java.lang.String getTemp4() -> getTemp4
    void setTemp4(java.lang.String) -> setTemp4
    java.lang.String getTemp5() -> getTemp5
    void setTemp5(java.lang.String) -> setTemp5
    java.lang.String getTemp6() -> getTemp6
    void setTemp6(java.lang.String) -> setTemp6
    java.lang.String getTemp7() -> getTemp7
    void setTemp7(java.lang.String) -> setTemp7
    java.lang.String getTemp8() -> getTemp8
    void setTemp8(java.lang.String) -> setTemp8
    java.lang.String getTemp9() -> getTemp9
    void setTemp9(java.lang.String) -> setTemp9
    java.lang.String getTemp10() -> getTemp10
    void setTemp10(java.lang.String) -> setTemp10
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String getShenfenzheng() -> getShenfenzheng
    void setShenfenzheng(java.lang.String) -> setShenfenzheng
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.assistant.model.SmsContent -> com.assistant.model.b:
    android.app.Activity activity -> a
    android.net.Uri uri -> b
    java.util.List getOnePersonInfo(java.lang.String,java.lang.String) -> a
    java.util.List getSmsInfo() -> a
com.assistant.model.SmsInfo -> com.assistant.model.c:
    java.lang.String smsbody -> a
    java.lang.String phoneNumber -> b
    java.lang.String date -> c
    java.lang.String name -> d
    java.lang.String type -> e
    java.lang.String getSmsbody() -> a
    void setSmsbody(java.lang.String) -> a
    java.lang.String getPhoneNumber() -> b
    void setPhoneNumber(java.lang.String) -> b
    java.lang.String getDate() -> c
    void setDate(java.lang.String) -> c
    java.lang.String getName() -> d
    void setName(java.lang.String) -> d
    java.lang.String getType() -> e
    void setType(java.lang.String) -> e
com.assistant.model.TextMessage -> com.assistant.model.d:
    int serverId -> a
    java.lang.String Content -> b
    java.lang.String fromType -> c
    java.lang.String fromid -> d
    java.lang.String name -> e
    void setServerId(int) -> a
    java.lang.String getFromid() -> a
    void setFromid(java.lang.String) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> b
    void setFromType(java.lang.String) -> c
    java.lang.String getContent() -> c
    void setContent(java.lang.String) -> d
com.assistant.model.TodayStatistics -> com.assistant.model.TodayStatistics:
    int dayXinFang -> dayXinFang
    int dayFuFang -> dayFuFang
    int dayYiXiang -> dayYiXiang
    int dayLaiFang -> dayLaiFang
    int dayYiXiangQiang -> dayYiXiangQiang
    int dayYiXiangZhong -> dayYiXiangZhong
    int dayYiXiangYiBan -> dayYiXiangYiBan
    int dayDianZhuanFang -> dayDianZhuanFang
    int dayXinZengRenGou -> dayXinZengRenGou
    int dayXinZengQianYue -> dayXinZengQianYue
    java.lang.String day -> day
    java.lang.String month -> month
    java.lang.String phone -> phone
    java.lang.String name -> name
    int dayLaiDian -> dayLaiDian
    boolean click -> click
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPhone() -> getPhone
    void setPhone(java.lang.String) -> setPhone
    int getDayXinFang() -> getDayXinFang
    void setDayXinFang(int) -> setDayXinFang
    int getDayFuFang() -> getDayFuFang
    void setDayFuFang(int) -> setDayFuFang
    int getDayYiXiang() -> getDayYiXiang
    void setDayYiXiang(int) -> setDayYiXiang
    int getDayLaiFang() -> getDayLaiFang
    void setDayLaiFang(int) -> setDayLaiFang
    int getDayYiXiangQiang() -> getDayYiXiangQiang
    void setDayYiXiangQiang(int) -> setDayYiXiangQiang
    int getDayYiXiangZhong() -> getDayYiXiangZhong
    void setDayYiXiangZhong(int) -> setDayYiXiangZhong
    int getDayYiXiangYiBan() -> getDayYiXiangYiBan
    void setDayYiXiangYiBan(int) -> setDayYiXiangYiBan
    int getDayDianZhuanFang() -> getDayDianZhuanFang
    void setDayDianZhuanFang(int) -> setDayDianZhuanFang
    int getDayXinZengRenGou() -> getDayXinZengRenGou
    void setDayXinZengRenGou(int) -> setDayXinZengRenGou
    int getDayXinZengQianYue() -> getDayXinZengQianYue
    void setDayXinZengQianYue(int) -> setDayXinZengQianYue
    java.lang.String getDay() -> getDay
    void setDay(java.lang.String) -> setDay
    java.lang.String getMonth() -> getMonth
    void setMonth(java.lang.String) -> setMonth
    int getDayLaiDian() -> getDayLaiDian
    void setDayLaiDian(int) -> setDayLaiDian
    boolean isClick() -> isClick
    void setClick(boolean) -> setClick
com.assistant.service.FxService -> com.assistant.service.FxService:
    int statusBarHeight -> b
    android.view.View view -> c
    boolean viewAdded -> d
    boolean isSmall -> e
    android.view.WindowManager windowManager -> f
    android.view.WindowManager$LayoutParams layoutParams -> g
    android.widget.Button smallOrBig -> h
    com.assistant.model.ConsumerModel consumer -> i
    android.widget.LinearLayout rootview -> j
    android.widget.TextView tv_jingjiren -> k
    android.widget.TextView jingjiren -> l
    android.widget.TextView tv_name -> m
    android.widget.TextView name -> n
    android.widget.TextView tv_phone -> o
    android.widget.TextView phone -> p
    android.widget.TextView tv_huxing -> q
    android.widget.TextView huxing -> r
    android.widget.TextView tv_fangyuan -> s
    android.widget.TextView fangyuan -> t
    android.widget.TextView tv_jine -> u
    android.widget.TextView jine -> v
    android.widget.TextView tv_createTime -> w
    android.widget.TextView createTime -> x
    android.widget.TextView tv_laifangshijian -> y
    android.widget.TextView laifangshijian -> z
    android.widget.TextView tv_beizhu -> A
    android.widget.TextView beizhu -> B
    android.widget.TextView warring -> C
    android.content.BroadcastReceiver m_BroadcastReceiver -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void refreshView(int,int) -> a
    void refresh() -> a
    void onStart(android.content.Intent,int) -> onStart
    void onDestroy() -> onDestroy
    boolean access$0(com.assistant.service.FxService) -> a
    android.widget.Button access$1(com.assistant.service.FxService) -> b
    void access$2(com.assistant.service.FxService,android.view.WindowManager$LayoutParams) -> a
    android.view.WindowManager$LayoutParams access$3(com.assistant.service.FxService) -> c
    android.widget.TextView access$4(com.assistant.service.FxService) -> d
    android.widget.TextView access$5(com.assistant.service.FxService) -> e
    android.widget.TextView access$6(com.assistant.service.FxService) -> f
    android.widget.TextView access$7(com.assistant.service.FxService) -> g
    android.widget.TextView access$8(com.assistant.service.FxService) -> h
    android.widget.TextView access$9(com.assistant.service.FxService) -> i
    android.widget.TextView access$10(com.assistant.service.FxService) -> j
    android.widget.TextView access$11(com.assistant.service.FxService) -> k
    android.widget.TextView access$12(com.assistant.service.FxService) -> l
    android.widget.TextView access$13(com.assistant.service.FxService) -> m
    android.widget.TextView access$14(com.assistant.service.FxService) -> n
    android.widget.TextView access$15(com.assistant.service.FxService) -> o
    android.widget.TextView access$16(com.assistant.service.FxService) -> p
    android.widget.TextView access$17(com.assistant.service.FxService) -> q
    android.widget.TextView access$18(com.assistant.service.FxService) -> r
    android.widget.TextView access$19(com.assistant.service.FxService) -> s
    android.widget.TextView access$20(com.assistant.service.FxService) -> t
    android.widget.TextView access$21(com.assistant.service.FxService) -> u
    void access$22(com.assistant.service.FxService,boolean) -> a
    android.view.WindowManager access$23(com.assistant.service.FxService) -> v
    android.view.View access$24(com.assistant.service.FxService) -> w
com.assistant.service.FxService$1 -> com.assistant.service.a:
    com.assistant.service.FxService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.assistant.service.FxService$2 -> com.assistant.service.b:
    com.assistant.service.FxService this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.service.FxService$3 -> com.assistant.service.c:
    float[] temp -> a
    com.assistant.service.FxService this$0 -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.assistant.service.IntentInterface -> com.assistant.service.d:
    void intentTo(java.lang.String) -> a
com.assistant.service.PhoneReceiver -> com.assistant.service.PhoneReceiver:
    android.content.Context context -> j
    android.telephony.TelephonyManager tm -> a
    java.lang.String phoneNumber -> b
    android.widget.PopupWindow settlementPop -> c
    boolean isAccept -> d
    com.assistant.model.ConsumerModel con -> e
    java.lang.String phoneState -> f
    java.lang.Thread t -> g
    android.os.Handler myHandler -> h
    android.telephony.PhoneStateListener listener -> i
    void showLoad(android.content.Context,android.view.View) -> a
    void dimissLoad() -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.Long upDateRecordTime(java.lang.String) -> a
    android.content.Context access$0(com.assistant.service.PhoneReceiver) -> a
    java.lang.Long access$1(com.assistant.service.PhoneReceiver,java.lang.String) -> a
    void access$2(com.assistant.service.PhoneReceiver,java.lang.String,com.assistant.service.IntentInterface) -> a
    void access$3(com.assistant.service.PhoneReceiver) -> b
com.assistant.service.PhoneReceiver$1 -> com.assistant.service.e:
    com.assistant.service.PhoneReceiver this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.service.PhoneReceiver$2 -> com.assistant.service.f:
    com.assistant.service.PhoneReceiver this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
    com.assistant.service.PhoneReceiver access$0(com.assistant.service.PhoneReceiver$2) -> a
com.assistant.service.PhoneReceiver$2$1 -> com.assistant.service.g:
    com.assistant.service.PhoneReceiver$2 this$1 -> a
    void intentTo(java.lang.String) -> a
com.assistant.service.PhoneReceiver$2$2 -> com.assistant.service.h:
    com.assistant.service.PhoneReceiver$2 this$1 -> a
    java.text.SimpleDateFormat val$dateForamt -> b
    java.lang.Long val$stopTime -> c
    long val$callTime -> d
    void run() -> run
com.assistant.service.PhoneReceiver$2$3 -> com.assistant.service.i:
    com.assistant.service.PhoneReceiver$2 this$1 -> a
    void intentTo(java.lang.String) -> a
com.assistant.service.PhoneReceiver$2$4 -> com.assistant.service.j:
    com.assistant.service.PhoneReceiver$2 this$1 -> a
    java.text.SimpleDateFormat val$dateForamt -> b
    java.lang.Long val$stopTime -> c
    long val$callTime -> d
    java.lang.String val$incomingNumber -> e
    void run() -> run
com.assistant.service.PhoneReceiver$2$5 -> com.assistant.service.k:
    com.assistant.service.PhoneReceiver$2 this$1 -> a
    java.lang.String val$incomingNumber -> b
    void run() -> run
com.assistant.service.PhoneReceiver$3 -> com.assistant.service.l:
    com.assistant.service.PhoneReceiver this$0 -> a
    android.content.Context val$context -> b
    void run() -> run
com.assistant.service.PhoneReceiver$4 -> com.assistant.service.m:
    com.assistant.service.PhoneReceiver this$0 -> a
    java.lang.String val$number -> b
    com.assistant.service.IntentInterface val$listener -> c
    void run() -> run
com.assistant.service.SmsReceiver -> com.assistant.service.SmsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.assistant.service.SpeechApp -> com.assistant.service.SpeechApp:
    void onCreate() -> onCreate
com.assistant.speech.setting.IatSettings -> com.assistant.speech.setting.IatSettings:
    android.preference.EditTextPreference mVadbosPreference -> a
    android.preference.EditTextPreference mVadeosPreference -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.assistant.speech.setting.TtsSettings -> com.assistant.speech.setting.TtsSettings:
    android.preference.EditTextPreference mSpeedPreference -> a
    android.preference.EditTextPreference mPitchPreference -> b
    android.preference.EditTextPreference mVolumePreference -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.assistant.speech.setting.UnderstanderSettings -> com.assistant.speech.setting.UnderstanderSettings:
    android.preference.EditTextPreference mVadbosPreference -> a
    android.preference.EditTextPreference mVadeosPreference -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.assistant.speech.util.ApkInstaller -> com.assistant.speech.a.a:
    android.app.Activity mActivity -> a
    void install() -> a
    android.app.Activity access$0(com.assistant.speech.util.ApkInstaller) -> a
com.assistant.speech.util.ApkInstaller$1 -> com.assistant.speech.a.b:
    com.assistant.speech.util.ApkInstaller this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.assistant.speech.util.ApkInstaller$2 -> com.assistant.speech.a.c:
    com.assistant.speech.util.ApkInstaller this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.assistant.speech.util.JsonParser -> com.assistant.speech.a.d:
    java.lang.String parseIatResult(java.lang.String) -> a
com.assistant.speech.util.SettingTextWatcher -> com.assistant.speech.a.e:
    int editStart -> c
    int editCount -> d
    android.preference.EditTextPreference mEditTextPreference -> e
    int minValue -> a
    int maxValue -> b
    android.content.Context mContext -> f
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.assistant.utils.Constant -> com.assistant.b.a:
    java.util.ArrayList conLst -> a
    java.lang.String[][] tellPhones -> b
    int scWidth -> c
    int scHeight -> d
    java.lang.String task -> e
    java.lang.String finishTask -> f
    boolean isNeedRefresh -> g
    boolean isLoading -> h
    java.lang.String USERNAME -> i
    java.lang.String USERPHONE -> j
    java.lang.String SAFEPWD -> k
    java.lang.String MANAGER -> l
    java.lang.String QUYU -> m
    java.lang.String dayNum -> n
    java.lang.String RUNPAUSE -> o
    java.lang.String CONSUMERIMAGE -> p
    java.lang.String REGISTER -> q
    java.lang.String ISLAOYEZHU -> r
    java.lang.String UNREGISTER -> s
    java.lang.String INSERTCALL -> t
    java.lang.String ISREGISTER -> u
    java.lang.String LOGIN -> v
    java.lang.String GETDAYDETAIL -> w
    java.lang.String GETCALLRECORD -> x
    java.lang.String GETFINISHTASK -> y
    java.lang.String GETLAODAIXIN -> z
    java.lang.String GETALLBEIZHU -> A
    java.lang.String GETONECONSUMERMODEL -> B
    java.lang.String GETCONSUMERMODEL -> C
    java.lang.String EXIT -> D
    java.lang.String FASTUPDATACONSUMERMODEL -> E
    java.lang.String UPDATACONSUMERMODEL -> F
    boolean isCanUseSim(android.content.Context) -> a
com.assistant.utils.CurrentTime -> com.assistant.b.b:
    java.lang.String getCurrentTime(java.lang.String) -> a
com.assistant.utils.MessageUtil -> com.assistant.b.c:
    com.thoughtworks.xstream.XStream xstream -> a
    java.util.Map parseXml(java.io.InputStream) -> a
com.assistant.utils.MessageUtil$1 -> com.assistant.b.d:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
com.assistant.utils.MessageUtil$1$1 -> com.assistant.b.e:
    boolean cdata -> a
    com.assistant.utils.MessageUtil$1 this$1 -> b
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeText
com.assistant.utils.MyClientRead -> com.assistant.b.f:
    java.util.Map readStream(java.io.InputStream) -> a
com.assistant.utils.NetworkData -> com.assistant.b.g:
    com.assistant.utils.MyClientRead read -> a
    java.lang.String getMyModel(java.lang.String) -> a
    com.assistant.model.TextMessage postFastConsumerDataUrl(java.lang.String,com.assistant.model.ConsumerModel) -> a
    com.assistant.model.TextMessage postConsumerDataUrl(java.lang.String,com.assistant.model.ConsumerModel) -> b
    com.assistant.model.TextMessage posturl(java.lang.String) -> b
com.assistant.utils.Sort -> com.assistant.b.h:
    java.lang.String getPinYinHeadChar(java.lang.String) -> b
    java.util.ArrayList autoSort(java.util.ArrayList) -> a
    java.lang.String getAllPinYinHeadChar(java.lang.String) -> a
com.assistant.view.ContactsActivity -> com.assistant.view.ContactsActivity:
    android.content.Context mContext -> a
    java.lang.String[] PHONES_PROJECTION -> d
    java.util.ArrayList mContacts -> e
    android.widget.LinearLayout showBar -> f
    android.widget.Button back -> g
    android.widget.Button rigster -> h
    android.widget.CheckBox cbAll -> i
    int count -> j
    android.widget.ListView mListView -> b
    com.assistant.view.ContactsActivity$MyListAdapter myAdapter -> c
    android.app.ProgressDialog pDia -> k
    android.os.Handler handler -> l
    void onCreate(android.os.Bundle) -> onCreate
    java.util.ArrayList access$0(com.assistant.view.ContactsActivity) -> a
    android.widget.LinearLayout access$1(com.assistant.view.ContactsActivity) -> b
    android.app.ProgressDialog access$2(com.assistant.view.ContactsActivity) -> c
    int access$3(com.assistant.view.ContactsActivity) -> d
    void access$4(com.assistant.view.ContactsActivity,boolean) -> a
    android.widget.Button access$5(com.assistant.view.ContactsActivity) -> e
    void access$6(com.assistant.view.ContactsActivity,android.widget.AdapterView,int) -> a
    void access$7(com.assistant.view.ContactsActivity,android.app.ProgressDialog) -> a
    android.os.Handler access$8(com.assistant.view.ContactsActivity) -> f
com.assistant.view.ContactsActivity$1 -> com.assistant.view.a:
    com.assistant.view.ContactsActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.ContactsActivity$2 -> com.assistant.view.b:
    com.assistant.view.ContactsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.view.ContactsActivity$3 -> com.assistant.view.c:
    com.assistant.view.ContactsActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.assistant.view.ContactsActivity$4 -> com.assistant.view.d:
    com.assistant.view.ContactsActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.assistant.view.ContactsActivity$5 -> com.assistant.view.e:
    com.assistant.view.ContactsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.assistant.view.ContactsActivity access$0(com.assistant.view.ContactsActivity$5) -> a
com.assistant.view.ContactsActivity$5$1 -> com.assistant.view.f:
    com.assistant.view.ContactsActivity$5 this$1 -> a
    void run() -> run
com.assistant.view.ContactsActivity$MyListAdapter -> com.assistant.view.g:
    com.assistant.view.ContactsActivity this$0 -> a
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.assistant.view.ContactsActivity$MyListAdapter$ViewHolder -> com.assistant.view.h:
    android.widget.TextView title -> a
    android.widget.TextView text -> b
    android.widget.RadioButton check -> c
    com.assistant.view.ContactsActivity$MyListAdapter this$1 -> d
com.assistant.view.ContactsActivity$MyModel -> com.assistant.view.i:
    java.lang.String phoneNumber -> a
    java.lang.String name -> b
    boolean isCheck -> c
    com.assistant.view.ContactsActivity this$0 -> d
com.assistant.view.DemoView -> com.assistant.view.DemoView:
    java.util.List bindChart() -> bindChart
    void onSizeChanged(int,int,int,int) -> onSizeChanged
com.assistant.view.ExitPopwindow -> com.assistant.view.j:
    android.widget.PopupWindow exitPop -> a
    android.content.Context client -> b
    android.widget.Button btnExit -> c
    android.widget.Button btnCancel -> d
    android.widget.LinearLayout onExit -> e
    android.widget.LinearLayout exit -> f
    android.os.Handler handler -> g
    void showPopWindow() -> a
    android.widget.LinearLayout access$0(com.assistant.view.ExitPopwindow) -> a
    android.widget.LinearLayout access$1(com.assistant.view.ExitPopwindow) -> b
    android.os.Handler access$2(com.assistant.view.ExitPopwindow) -> c
    android.content.Context access$3(com.assistant.view.ExitPopwindow) -> d
com.assistant.view.ExitPopwindow$1 -> com.assistant.view.k:
    com.assistant.view.ExitPopwindow this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.ExitPopwindow$2 -> com.assistant.view.l:
    com.assistant.view.ExitPopwindow this$0 -> a
    void onClick(android.view.View) -> onClick
    com.assistant.view.ExitPopwindow access$0(com.assistant.view.ExitPopwindow$2) -> a
com.assistant.view.ExitPopwindow$2$1 -> com.assistant.view.m:
    com.assistant.view.ExitPopwindow$2 this$1 -> a
    void run() -> run
com.assistant.view.ExitPopwindow$3 -> com.assistant.view.n:
    com.assistant.view.ExitPopwindow this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.view.HandDown -> com.assistant.view.HandDown:
    android.widget.Button edit -> a
    android.widget.Button fastSave -> b
    android.widget.EditText beizhu -> c
    android.widget.TextView name -> d
    android.widget.TextView phone -> e
    android.widget.TextView quyu -> f
    android.widget.TextView fangyuan -> g
    android.widget.TextView jine -> h
    android.widget.TextView huxing -> i
    com.assistant.model.ConsumerModel conModel -> j
    java.lang.String stoptime -> k
    java.lang.String callTime -> l
    android.os.Handler myHandler -> m
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    android.os.Handler access$0(com.assistant.view.HandDown) -> a
com.assistant.view.HandDown$1 -> com.assistant.view.o:
    com.assistant.view.HandDown this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.HandDown$2 -> com.assistant.view.p:
    com.assistant.view.HandDown this$0 -> a
    void run() -> run
com.assistant.view.HandDownSave -> com.assistant.view.HandDownSave:
    android.widget.Button btnSave -> a
    android.widget.Button btnFastSave -> b
    android.widget.TextView phone -> c
    java.lang.String flag -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
com.assistant.view.HandDownSave$1 -> com.assistant.view.q:
    com.assistant.view.HandDownSave this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.view.HandDownSave$2 -> com.assistant.view.r:
    com.assistant.view.HandDownSave this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.view.Home -> com.assistant.view.Home:
    android.support.v4.app.Fragment[] mFragments -> a
    android.widget.RadioButton imgOne -> d
    android.widget.RadioButton imgTwo -> e
    android.widget.RadioButton imgThree -> f
    android.widget.RadioButton imgFour -> g
    android.widget.RadioButton imgFive -> h
    int showFragment -> i
    android.support.v4.app.FragmentManager fragmentManager -> j
    android.app.ProgressDialog pDia -> b
    com.assistant.view.ExitPopwindow exitPop -> k
    com.assistant.utils.Sort mSort -> l
    boolean isVisible -> m
    android.view.animation.Animation scaleAnimation -> c
    android.os.Handler myHandler -> n
    android.os.Handler handler -> o
    void onCreate(android.os.Bundle) -> onCreate
    void show(int) -> a
    void getDate(android.content.Context,android.view.View) -> a
    void onClick(android.view.View) -> onClick
    void onNewIntent(android.content.Intent) -> onNewIntent
    void handleIntent(android.content.Intent) -> a
    boolean onSearchRequested() -> onSearchRequested
    void onBackPressed() -> onBackPressed
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    android.widget.RadioButton access$0(com.assistant.view.Home) -> a
    android.support.v4.app.FragmentManager access$1(com.assistant.view.Home) -> b
    void access$2(com.assistant.view.Home,int) -> a
    com.assistant.utils.Sort access$3() -> a
    void access$4(com.assistant.utils.Sort) -> a
    android.os.Handler access$5() -> b
    android.os.Handler access$6(com.assistant.view.Home) -> c
com.assistant.view.Home$1 -> com.assistant.view.s:
    com.assistant.view.Home this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.Home$2 -> com.assistant.view.t:
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.Home$3 -> com.assistant.view.u:
    com.assistant.view.Home this$0 -> a
    int val$num -> b
    void run() -> run
com.assistant.view.Home$4 -> com.assistant.view.v:
    android.content.Context val$context -> a
    void run() -> run
com.assistant.view.Home$4$1 -> com.assistant.view.w:
    com.assistant.view.Home$4 this$1 -> a
com.assistant.view.Home$5 -> com.assistant.view.x:
    com.assistant.view.Home this$0 -> a
    java.lang.String val$query -> b
    void run() -> run
com.assistant.view.LaoDaiXin -> com.assistant.view.LaoDaiXin:
    java.util.ArrayList mArr -> a
    android.widget.ListView mList -> b
    android.view.View show -> c
    java.lang.String phone -> d
    android.os.Handler myHandler -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
com.assistant.view.LaoDaiXin$1 -> com.assistant.view.y:
    com.assistant.view.LaoDaiXin this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.LaoDaiXin$2 -> com.assistant.view.z:
    com.assistant.view.LaoDaiXin this$0 -> a
    void run() -> run
com.assistant.view.LaoDaiXin$2$1 -> com.assistant.view.aa:
    com.assistant.view.LaoDaiXin$2 this$1 -> a
com.assistant.view.LaoDaiXin$Madapter -> com.assistant.view.ab:
    android.view.LayoutInflater mInflater -> a
    com.assistant.view.LaoDaiXin this$0 -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.assistant.view.LaoDaiXin$Madapter$ViewHolder -> com.assistant.view.ac:
    android.widget.TextView name -> a
    android.widget.TextView phone -> b
    com.assistant.view.LaoDaiXin$Madapter this$1 -> c
com.assistant.view.LaoDaiXin$Model -> com.assistant.view.ad:
    java.lang.String phone -> a
    java.lang.String name -> b
com.assistant.view.Login -> com.assistant.view.Login:
    android.widget.EditText edtName -> a
    android.widget.EditText edtPwd -> b
    android.widget.Button login -> c
    android.widget.Button chkRember -> d
    java.io.InputStream is -> e
    android.widget.EditText leibie -> h
    com.assistant.view.PopMenu popMenu -> i
    java.lang.String type -> j
    int count -> f
    boolean isLogin -> k
    android.content.SharedPreferences sp -> l
    android.view.View remeber -> m
    android.widget.TextView tv_remeber -> n
    android.widget.TextView line1 -> o
    android.widget.TextView line2 -> p
    boolean isCheck -> q
    boolean isFirstRun -> r
    android.widget.AdapterView$OnItemClickListener popmenuItemClickListener -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean login() -> a
    void onPause() -> onPause
    void onResume() -> onResume
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void onDestroy() -> onDestroy
    android.widget.EditText access$0(com.assistant.view.Login) -> a
    com.assistant.view.PopMenu access$1(com.assistant.view.Login) -> b
    boolean access$2(com.assistant.view.Login) -> c
    boolean access$3(com.assistant.view.Login) -> d
    void access$4(com.assistant.view.Login,boolean) -> a
    android.widget.TextView access$5(com.assistant.view.Login) -> e
com.assistant.view.Login$1 -> com.assistant.view.ae:
    com.assistant.view.Login this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.assistant.view.Login$2 -> com.assistant.view.af:
    com.assistant.view.Login this$0 -> a
    void onClick(android.view.View) -> onClick
    com.assistant.view.Login access$0(com.assistant.view.Login$2) -> a
com.assistant.view.Login$2$1 -> com.assistant.view.ag:
    com.assistant.view.Login$2 this$1 -> a
    void run() -> run
com.assistant.view.Login$3 -> com.assistant.view.ah:
    com.assistant.view.Login this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.view.Login$4 -> com.assistant.view.ai:
    com.assistant.view.Login this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.view.MyGridView -> com.assistant.view.MyGridView:
    void onMeasure(int,int) -> onMeasure
com.assistant.view.PieChartView -> com.assistant.view.aj:
    java.lang.String TAG -> c
    org.xclcharts.chart.PieChart chart -> d
    java.util.LinkedList chartData -> e
    android.graphics.Paint mPaintToolTip -> a
    java.util.HashMap hashMap -> b
    int mSelectedID -> f
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void chartDataSet(java.util.HashMap) -> a
    void render(android.graphics.Canvas) -> render
    java.util.List bindChart() -> bindChart
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.assistant.view.PopMenu -> com.assistant.view.ak:
    java.util.ArrayList itemList -> a
    android.content.Context context -> b
    android.widget.PopupWindow popupWindow -> c
    android.widget.ListView listView -> d
    int width -> e
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
    void addItems(java.lang.String[]) -> a
    void showAsDropDown(android.view.View) -> a
    void dismiss() -> a
    java.util.ArrayList access$0(com.assistant.view.PopMenu) -> a
    android.content.Context access$1(com.assistant.view.PopMenu) -> b
com.assistant.view.PopMenu$PopAdapter -> com.assistant.view.al:
    com.assistant.view.PopMenu this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.assistant.view.PopMenu$PopAdapter$ViewHolder -> com.assistant.view.am:
    android.widget.TextView groupItem -> a
    com.assistant.view.PopMenu$PopAdapter this$1 -> b
com.assistant.view.Register -> com.assistant.view.Register:
    int[] city -> i
    int[] countyOfBeiJing -> j
    int[] countyOfTianJing -> k
    int[] countyOfHeBei -> l
    int[] countyOfShanXi1 -> m
    int[] countyOfNeiMengGu -> n
    int[] countyOfLiaoNing -> o
    int[] countyOfJiLin -> p
    int[] countyOfHeiLongJiang -> q
    int[] countyOfShangHai -> r
    int[] countyOfJiangSu -> s
    int[] countyOfZheJiang -> t
    int[] countyOfAnHui -> u
    int[] countyOfFuJian -> v
    int[] countyOfJiangXi -> w
    int[] countyOfShanDong -> x
    int[] countyOfHeNan -> y
    int[] countyOfHuBei -> z
    int[] countyOfHuNan -> A
    int[] countyOfGuangDong -> B
    int[] countyOfGuangXi -> C
    int[] countyOfHaiNan -> D
    int[] countyOfChongQing -> E
    int[] countyOfSiChuan -> F
    int[] countyOfGuiZhou -> G
    int[] countyOfYunNan -> H
    int[] countyOfXiZang -> I
    int[] countyOfShanXi2 -> J
    int[] countyOfGanSu -> K
    int[] countyOfQingHai -> L
    int[] countyOfNingXia -> M
    int[] countyOfXinJiang -> N
    int[] countyOfHongKong -> O
    int[] countyOfAoMen -> P
    int[] countyOfTaiWan -> Q
    android.widget.EditText chengjiaojine -> R
    android.widget.EditText name -> S
    android.widget.EditText phone -> T
    android.widget.EditText edtYisuan -> U
    android.widget.EditText edtYixiang -> V
    android.widget.EditText edtYixiangyetai -> W
    android.widget.EditText edtYonghuzu -> X
    android.widget.EditText edtKehushuxing -> Y
    android.widget.EditText edtZijinshili -> Z
    android.widget.EditText edtRenzhiqudao -> aa
    android.widget.EditText edtYixiangmianji -> ab
    android.widget.EditText edtYixianghuxing -> ac
    android.widget.EditText shengfen -> ad
    android.widget.EditText chengshi -> ae
    android.widget.EditText quxian -> af
    android.widget.EditText quyu -> ag
    android.widget.EditText louhao -> ah
    android.widget.EditText shenfenzheng -> ai
    com.assistant.model.ConsumerModel conModel -> aj
    android.widget.RadioButton imgFeman -> ak
    android.widget.RadioButton imgMan -> al
    android.widget.Button clear -> am
    android.widget.Button save -> an
    android.widget.Button back -> ao
    java.lang.String TAG -> ap
    java.lang.String laoyezhuphone -> aq
    boolean isRegister -> ar
    com.iflytek.cloud.SpeechRecognizer mIat -> as
    com.iflytek.cloud.ui.RecognizerDialog iatDialog -> at
    android.content.SharedPreferences mSharedPreferences -> au
    com.iflytek.cloud.SpeechSynthesizer mTts -> a
    java.lang.String voicer -> av
    int position -> aw
    int cityId -> ax
    android.graphics.Bitmap bmp -> b
    int mPercentForBuffering -> ay
    int mPercentForPlaying -> az
    java.lang.String mEngineType -> aA
    android.widget.Toast mToast -> aB
    android.widget.ImageButton imgVoice -> c
    android.widget.ImageButton imgMore -> d
    android.widget.EditText beizhu -> e
    int ret -> f
    java.lang.String type -> g
    android.widget.LinearLayout show -> h
    com.iflytek.cloud.InitListener mTtsInitListener -> aC
    com.iflytek.cloud.InitListener mInitListener -> aD
    com.iflytek.cloud.SynthesizerListener mTtsListener -> aE
    android.os.Handler myHandler -> aF
    com.iflytek.cloud.RecognizerListener recognizerListener -> aG
    com.iflytek.cloud.ui.RecognizerDialogListener recognizerDialogListener -> aH
    void onCreate(android.os.Bundle) -> onCreate
    boolean onLongClick(android.view.View) -> onLongClick
    void showTip(java.lang.String) -> b
    boolean isNumeric(java.lang.String) -> a
    void setDialog(int,android.widget.EditText,android.widget.EditText,android.widget.EditText) -> a
    void onClick(android.view.View) -> onClick
    boolean getFastConsumerModel() -> b
    boolean getConsumerModel() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.String access$0() -> a
    void access$1(com.assistant.view.Register,java.lang.String) -> a
    void access$2(com.assistant.view.Register,int) -> a
    android.widget.Toast access$3(com.assistant.view.Register) -> a
    int access$4(com.assistant.view.Register) -> b
    int access$5(com.assistant.view.Register) -> c
    void access$6(com.assistant.view.Register,int) -> b
    void access$7(com.assistant.view.Register,java.lang.String) -> b
    android.widget.EditText access$8(com.assistant.view.Register) -> d
    android.widget.EditText access$9(com.assistant.view.Register) -> e
    android.widget.EditText access$10(com.assistant.view.Register) -> f
    android.widget.EditText access$11(com.assistant.view.Register) -> g
    android.widget.Button access$12(com.assistant.view.Register) -> h
    com.assistant.model.ConsumerModel access$13(com.assistant.view.Register) -> i
    com.iflytek.cloud.SpeechRecognizer access$14(com.assistant.view.Register) -> j
    android.widget.EditText access$15(com.assistant.view.Register) -> k
    android.os.Handler access$16(com.assistant.view.Register) -> l
    android.widget.EditText access$17(com.assistant.view.Register) -> m
    int access$18(com.assistant.view.Register) -> n
    void access$19(com.assistant.view.Register,int) -> c
    android.widget.EditText access$20(com.assistant.view.Register) -> o
    void access$21(com.assistant.view.Register,int) -> d
    void access$22(com.assistant.view.Register,boolean) -> a
    java.lang.String access$23(com.assistant.view.Register) -> p
com.assistant.view.Register$1 -> com.assistant.view.an:
    com.assistant.view.Register this$0 -> a
    void onInit(int) -> onInit
com.assistant.view.Register$10 -> com.assistant.view.ao:
    com.assistant.view.Register this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.view.Register$11 -> com.assistant.view.ap:
    com.assistant.view.Register this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.view.Register$12 -> com.assistant.view.aq:
    com.assistant.view.Register this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.view.Register$13 -> com.assistant.view.ar:
    com.assistant.view.Register this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.assistant.view.Register$14 -> com.assistant.view.as:
    com.assistant.view.Register this$0 -> a
    android.widget.EditText val$edt -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    com.assistant.view.Register access$0(com.assistant.view.Register$14) -> a
com.assistant.view.Register$14$1 -> com.assistant.view.at:
    com.assistant.view.Register$14 this$1 -> a
    void run() -> run
com.assistant.view.Register$15 -> com.assistant.view.au:
    com.assistant.view.Register this$0 -> a
    void run() -> run
com.assistant.view.Register$16 -> com.assistant.view.av:
    com.assistant.view.Register this$0 -> a
    void run() -> run
com.assistant.view.Register$17 -> com.assistant.view.aw:
    com.assistant.view.Register this$0 -> a
    void run() -> run
com.assistant.view.Register$18 -> com.assistant.view.ax:
    com.assistant.view.Register this$0 -> a
    void run() -> run
com.assistant.view.Register$2 -> com.assistant.view.ay:
    com.assistant.view.Register this$0 -> a
    void onInit(int) -> onInit
com.assistant.view.Register$3 -> com.assistant.view.az:
    com.assistant.view.Register this$0 -> a
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.assistant.view.Register$4 -> com.assistant.view.ba:
    com.assistant.view.Register this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.Register$5 -> com.assistant.view.bb:
    com.assistant.view.Register this$0 -> a
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onVolumeChanged(int) -> onVolumeChanged
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.assistant.view.Register$6 -> com.assistant.view.bc:
    com.assistant.view.Register this$0 -> a
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.assistant.view.Register$7 -> com.assistant.view.bd:
    com.assistant.view.Register this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.assistant.view.Register$8 -> com.assistant.view.be:
    com.assistant.view.Register this$0 -> a
    java.lang.String val$str -> b
    void run() -> run
com.assistant.view.Register$9 -> com.assistant.view.bf:
    com.assistant.view.Register this$0 -> a
    android.widget.EditText val$edt -> b
    int val$arrId -> c
    android.widget.EditText val$edt1 -> d
    android.widget.EditText val$edt2 -> e
    void onClick(android.content.DialogInterface,int) -> onClick
    com.assistant.view.Register access$0(com.assistant.view.Register$9) -> a
com.assistant.view.Register$9$1 -> com.assistant.view.bg:
    com.assistant.view.Register$9 this$1 -> a
    android.widget.EditText val$laoyezhu -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    com.assistant.view.Register$9 access$0(com.assistant.view.Register$9$1) -> a
com.assistant.view.Register$9$1$1 -> com.assistant.view.bh:
    com.assistant.view.Register$9$1 this$2 -> a
    java.lang.String val$content -> b
    void run() -> run
com.assistant.view.Register$EdtTextWatch -> com.assistant.view.bi:
    com.assistant.view.Register this$0 -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.assistant.view.Setting -> com.assistant.view.Setting:
    java.lang.String intentType -> a
    android.widget.EditText userid -> b
    android.widget.EditText name -> c
    android.widget.EditText safeWorld -> d
    android.widget.Button save -> e
    android.content.SharedPreferences sp -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void access$0(com.assistant.view.Setting) -> a
com.assistant.view.Setting$1 -> com.assistant.view.bj:
    com.assistant.view.Setting this$0 -> a
    void onClick(android.view.View) -> onClick
com.assistant.view.ShowBeizhu -> com.assistant.view.ShowBeizhu:
    java.lang.String beizhu -> a
    android.widget.TextView showBeizhu -> b
    android.view.View root -> c
    void onCreate(android.os.Bundle) -> onCreate
com.assistant.view.ShowBeizhu$1 -> com.assistant.view.bk:
    com.assistant.view.ShowBeizhu this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.assistant.view.UserInfo -> com.assistant.view.UserInfo:
    android.widget.TextView chengjiaojine -> k
    android.widget.TextView name -> l
    android.widget.TextView phone -> m
    android.widget.TextView xingbie -> n
    android.widget.TextView edtYisuan -> o
    android.widget.TextView edtYixiang -> p
    android.widget.TextView edtYixiangyetai -> q
    android.widget.TextView edtYonghuzu -> r
    android.widget.TextView edtKehushuxing -> s
    android.widget.TextView edtZijinshili -> t
    android.widget.TextView edtRenzhiqudao -> u
    android.widget.TextView edtYixiangmianji -> v
    android.widget.TextView edtYixianghuxing -> w
    android.widget.TextView shengfen -> x
    android.widget.TextView quyu -> y
    android.widget.TextView louhao -> z
    android.widget.TextView shenfenzheng -> A
    android.widget.TextView beizhu -> B
    android.widget.ImageButton imgCall -> C
    android.widget.ImageButton imgEdit -> D
    android.widget.ImageButton imgMessage -> E
    android.widget.ImageButton imgMore -> F
    android.widget.ImageButton delete -> G
    com.assistant.model.ConsumerModel consumer -> H
    java.lang.String content -> a
    android.widget.PopupWindow sendMsgPop -> b
    android.widget.PopupWindow beizhuPop -> c
    android.view.LayoutInflater mInflater -> d
    java.util.ArrayList beizhuArr -> e
    android.view.View popwindow -> f
    android.view.View showBar -> g
    android.app.ProgressDialog pDia -> I
    android.widget.ListView beizhuList -> h
    com.assistant.view.UserInfo$BeizhuAdapter bAdapter -> i
    android.os.Handler myHandler -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    android.widget.TextView access$0(com.assistant.view.UserInfo) -> a
    android.widget.ImageButton access$1(com.assistant.view.UserInfo) -> b
    com.assistant.model.ConsumerModel access$2(com.assistant.view.UserInfo) -> c
com.assistant.view.UserInfo$1 -> com.assistant.view.bl:
    com.assistant.view.UserInfo this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.assistant.view.UserInfo$2 -> com.assistant.view.bm:
    com.assistant.view.UserInfo this$0 -> a
    android.widget.EditText val$edt -> b
    void onClick(android.content.DialogInterface,int) -> onClick
    com.assistant.view.UserInfo access$0(com.assistant.view.UserInfo$2) -> a
com.assistant.view.UserInfo$2$1 -> com.assistant.view.bn:
    com.assistant.view.UserInfo$2 this$1 -> a
    void run() -> run
com.assistant.view.UserInfo$3 -> com.assistant.view.bo:
    com.assistant.view.UserInfo this$0 -> a
    java.util.ArrayList val$beizhuArr -> b
    void run() -> run
com.assistant.view.UserInfo$3$1 -> com.assistant.view.bp:
    com.assistant.view.UserInfo$3 this$1 -> a
com.assistant.view.UserInfo$4 -> com.assistant.view.bq:
    com.assistant.view.UserInfo this$0 -> a
    java.lang.String val$phone -> b
    android.widget.EditText val$edtContent -> c
    java.lang.String val$name -> d
    java.util.ArrayList val$smsInfos -> e
    com.assistant.adapter.SmsInfoAdapter val$sAdapter -> f
    android.widget.ListView val$infoList -> g
    void onClick(android.view.View) -> onClick
com.assistant.view.UserInfo$5 -> com.assistant.view.br:
    com.assistant.view.UserInfo this$0 -> a
    android.widget.EditText val$edtContent -> b
    void onDismiss() -> onDismiss
com.assistant.view.UserInfo$BeizhuAdapter -> com.assistant.view.bs:
    java.util.ArrayList consuList -> a
    android.view.LayoutInflater mInflater -> b
    com.assistant.view.UserInfo this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.assistant.view.UserInfo access$0(com.assistant.view.UserInfo$BeizhuAdapter) -> a
com.assistant.view.UserInfo$BeizhuAdapter$1 -> com.assistant.view.bt:
    com.assistant.view.UserInfo$BeizhuAdapter this$1 -> a
    com.assistant.model.BeizhuModel val$model -> b
    void onClick(android.view.View) -> onClick
com.assistant.view.UserInfo$BeizhuAdapter$ViewHolder -> com.assistant.view.bu:
    android.widget.TextView time -> a
    android.widget.TextView beizhu -> b
    com.assistant.view.UserInfo$BeizhuAdapter this$1 -> c
com.example.assistant.R -> com.example.assistant.R:
com.example.assistant.R$anim -> com.example.assistant.R$anim:
    int crease -> crease
    int loading -> loading
    int popupwindowdimiss -> popupwindowdimiss
    int popupwindowshow -> popupwindowshow
    int zoomin -> zoomin
    int zoomout -> zoomout
com.example.assistant.R$array -> com.example.assistant.R$array:
    int abei_city_item -> abei_city_item
    int akesu_city_item -> akesu_city_item
    int alaer_city_item -> alaer_city_item
    int alashanmeng_city_item -> alashanmeng_city_item
    int aleitai_city_item -> aleitai_city_item
    int ali_city_item -> ali_city_item
    int anhui_province_item -> anhui_province_item
    int anhui_suzhou_city_item -> anhui_suzhou_city_item
    int ankang_city_item -> ankang_city_item
    int anqing_city_item -> anqing_city_item
    int anshan_city_item -> anshan_city_item
    int anshun_city_item -> anshun_city_item
    int anyang_city_item -> anyang_city_item
    int aomen_city_item -> aomen_city_item
    int aomen_province_item -> aomen_province_item
    int baicheng_city_item -> baicheng_city_item
    int baise_city_item -> baise_city_item
    int baishan_city_item -> baishan_city_item
    int baiyin_city_item -> baiyin_city_item
    int baoding_city_item -> baoding_city_item
    int baoji_city_item -> baoji_city_item
    int baoshan_city_item -> baoshan_city_item
    int baotou_city_item -> baotou_city_item
    int bayannaoer_city_item -> bayannaoer_city_item
    int bayinguolen_city_item -> bayinguolen_city_item
    int bazhong_city_item -> bazhong_city_item
    int beihai_city_item -> beihai_city_item
    int beijin_city_item0 -> beijin_city_item0
    int beijin_city_item1 -> beijin_city_item1
    int beijin_province_item -> beijin_province_item
    int bengbu_city_item -> bengbu_city_item
    int benxi_city_item -> benxi_city_item
    int biji_city_item -> biji_city_item
    int boertala_city_item -> boertala_city_item
    int buyang_city_item -> buyang_city_item
    int cangzhou_city_item -> cangzhou_city_item
    int changchun_city_item -> changchun_city_item
    int changde_city_item -> changde_city_item
    int changdu_city_item -> changdu_city_item
    int changji_city_item -> changji_city_item
    int changsha_city_item -> changsha_city_item
    int changzhi_city_item -> changzhi_city_item
    int changzhou_city_item -> changzhou_city_item
    int chaohu_city_item -> chaohu_city_item
    int chaozhou_city_item -> chaozhou_city_item
    int chengde_city_item -> chengde_city_item
    int chengdu_city_item -> chengdu_city_item
    int chifeng_city_item -> chifeng_city_item
    int chizhou_city_item -> chizhou_city_item
    int chongqing_city_item0 -> chongqing_city_item0
    int chongqing_city_item1 -> chongqing_city_item1
    int chongqing_city_item2 -> chongqing_city_item2
    int chongqing_province_item -> chongqing_province_item
    int chuangzuo_city_item -> chuangzuo_city_item
    int chuxiong_city_item -> chuxiong_city_item
    int chuzhou_city_item -> chuzhou_city_item
    int dali_city_item -> dali_city_item
    int dalian_city_item -> dalian_city_item
    int dandong_city_item -> dandong_city_item
    int daqing_city_item -> daqing_city_item
    int datong_city_item -> datong_city_item
    int daxinganling_city_item -> daxinganling_city_item
    int dazhou_city_item -> dazhou_city_item
    int dehuang_city_item -> dehuang_city_item
    int deyang_city_item -> deyang_city_item
    int dezhou_city_item -> dezhou_city_item
    int dingxi_city_item -> dingxi_city_item
    int diqing_city_item -> diqing_city_item
    int dongguan_city_item -> dongguan_city_item
    int dongying_city_item -> dongying_city_item
    int eerduosi_city_item -> eerduosi_city_item
    int engine_entries -> engine_entries
    int engine_values -> engine_values
    int enshi_city_item -> enshi_city_item
    int erzhou_city_item -> erzhou_city_item
    int fangchenggang_city_item -> fangchenggang_city_item
    int foshan_city_item -> foshan_city_item
    int fujian_province_item -> fujian_province_item
    int fuxin_city_item -> fuxin_city_item
    int fuyang_city_item -> fuyang_city_item
    int ganmu_city_item -> ganmu_city_item
    int gannan_city_item -> gannan_city_item
    int gansu_province_item -> gansu_province_item
    int ganzhou_city_item -> ganzhou_city_item
    int geshen_city_item -> geshen_city_item
    int guangan_city_item -> guangan_city_item
    int guangdong_province_item -> guangdong_province_item
    int guangxi_province_item -> guangxi_province_item
    int guangxi_wuzhou_city_item -> guangxi_wuzhou_city_item
    int guangyuan_city_item -> guangyuan_city_item
    int guangzhou_city_item -> guangzhou_city_item
    int guigang_city_item -> guigang_city_item
    int guilin_city_item -> guilin_city_item
    int guiyang_city_item -> guiyang_city_item
    int guizhou_province_item -> guizhou_province_item
    int guluo_city_item -> guluo_city_item
    int guyuan_city_item -> guyuan_city_item
    int haerbing_city_item -> haerbing_city_item
    int haibai_city_item -> haibai_city_item
    int haidong_city_item -> haidong_city_item
    int haikou_city_item -> haikou_city_item
    int hainan_city_item -> hainan_city_item
    int hainan_province_item -> hainan_province_item
    int haixi_city_item -> haixi_city_item
    int hami_city_item -> hami_city_item
    int handan_city_item -> handan_city_item
    int hangzhou_city_item -> hangzhou_city_item
    int hanzhong_city_item -> hanzhong_city_item
    int haozhou_city_item -> haozhou_city_item
    int hebi_city_item -> hebi_city_item
    int hechi_city_item -> hechi_city_item
    int hefei_city_item -> hefei_city_item
    int hegang_city_item -> hegang_city_item
    int heibei_province_item -> heibei_province_item
    int heihe_city_item -> heihe_city_item
    int heilongjiang_province_item -> heilongjiang_province_item
    int heilongjiang_yichun_city_item -> heilongjiang_yichun_city_item
    int henan_province_item -> henan_province_item
    int hengshui_city_item -> hengshui_city_item
    int hengyang_city_item -> hengyang_city_item
    int hetian_city_item -> hetian_city_item
    int heyuan_city_item -> heyuan_city_item
    int heze_city_item -> heze_city_item
    int hezhou_city_item -> hezhou_city_item
    int honghe_city_item -> honghe_city_item
    int hongkong_city_item -> hongkong_city_item
    int hongkong_province_item -> hongkong_province_item
    int huaian_city_item -> huaian_city_item
    int huaibei_city_item -> huaibei_city_item
    int huaihua_city_item -> huaihua_city_item
    int huainan_city_item -> huainan_city_item
    int huanggang_city_item -> huanggang_city_item
    int huangnan_city_item -> huangnan_city_item
    int huangshan_city_item -> huangshan_city_item
    int huangshi_city_item -> huangshi_city_item
    int hubei_jinzhou_city_item -> hubei_jinzhou_city_item
    int hubei_province_item -> hubei_province_item
    int huhehaote_city_item -> huhehaote_city_item
    int huizhou_city_item -> huizhou_city_item
    int huludao_city_item -> huludao_city_item
    int hulunbeier_city_item -> hulunbeier_city_item
    int hunan_bingzhou_city_item -> hunan_bingzhou_city_item
    int hunan_province_item -> hunan_province_item
    int huzhou_city_item -> huzhou_city_item
    int jiamusi_city_item -> jiamusi_city_item
    int jian_city_item -> jian_city_item
    int jiangmen_city_item -> jiangmen_city_item
    int jiangsu_province_item -> jiangsu_province_item
    int jiangsu_taizhou_city_item -> jiangsu_taizhou_city_item
    int jiangxi_province_item -> jiangxi_province_item
    int jiangxi_wuzhou_city_item -> jiangxi_wuzhou_city_item
    int jiangxi_yichun_city_item -> jiangxi_yichun_city_item
    int jiaozuo_city_item -> jiaozuo_city_item
    int jiaxing_city_item -> jiaxing_city_item
    int jiayuguan_city_item -> jiayuguan_city_item
    int jilin_city_item -> jilin_city_item
    int jilin_province_item -> jilin_province_item
    int jinan_city_item -> jinan_city_item
    int jinchang_city_item -> jinchang_city_item
    int jincheng_city_item -> jincheng_city_item
    int jingdezhen_city_item -> jingdezhen_city_item
    int jinhua_city_item -> jinhua_city_item
    int jining_city_item -> jining_city_item
    int jinmen_city_item -> jinmen_city_item
    int jinzhong_city_item -> jinzhong_city_item
    int jiujiang_city_item -> jiujiang_city_item
    int jiuquan_city_item -> jiuquan_city_item
    int jixi_city_item -> jixi_city_item
    int jiyang_city_item -> jiyang_city_item
    int kaifang_city_item -> kaifang_city_item
    int kaipingshan_city_item -> kaipingshan_city_item
    int kehushuxing -> kehushuxing
    int kehuzu -> kehuzu
    int kelamayi_city_item -> kelamayi_city_item
    int kemuleisu_city_item -> kemuleisu_city_item
    int kunming_city_item -> kunming_city_item
    int laibing_city_item -> laibing_city_item
    int laiwu_city_item -> laiwu_city_item
    int langfang_city_item -> langfang_city_item
    int language_entries -> language_entries
    int language_values -> language_values
    int lanzhou_city_item -> lanzhou_city_item
    int lasa_city_item -> lasa_city_item
    int leihe_city_item -> leihe_city_item
    int leshan_city_item -> leshan_city_item
    int liangshan_city_item -> liangshan_city_item
    int lianyungang_city_item -> lianyungang_city_item
    int liaocheng_city_item -> liaocheng_city_item
    int liaoning_jinzhou_city_item -> liaoning_jinzhou_city_item
    int liaoning_province_item -> liaoning_province_item
    int liaoyang_city_item -> liaoyang_city_item
    int liaoyuan_city_item -> liaoyuan_city_item
    int lijiang_city_item -> lijiang_city_item
    int linfen_city_item -> linfen_city_item
    int lingcang_city_item -> lingcang_city_item
    int linxi_city_item -> linxi_city_item
    int linxia_city_item -> linxia_city_item
    int linxia_province_item -> linxia_province_item
    int linzhi_city_item -> linzhi_city_item
    int lishui_city_item -> lishui_city_item
    int liuzhou_city_item -> liuzhou_city_item
    int longnan_city_item -> longnan_city_item
    int longyan_city_item -> longyan_city_item
    int loudi_city_item -> loudi_city_item
    int luan_city_item -> luan_city_item
    int luoyang_city_item -> luoyang_city_item
    int lupanshui_city_item -> lupanshui_city_item
    int luzhou_city_item -> luzhou_city_item
    int lvliang_city_item -> lvliang_city_item
    int maanshan_city_item -> maanshan_city_item
    int maoming_city_item -> maoming_city_item
    int meishan_city_item -> meishan_city_item
    int meizhou_city_item -> meizhou_city_item
    int mianyang_city_item -> mianyang_city_item
    int mudanjiang_city_item -> mudanjiang_city_item
    int nanchang_city_item -> nanchang_city_item
    int nanchong_city_item -> nanchong_city_item
    int nanjing_city_item -> nanjing_city_item
    int nanjing_suzhou_city_item -> nanjing_suzhou_city_item
    int nanning_city_item -> nanning_city_item
    int nanp_city_item -> nanp_city_item
    int nantong_city_item -> nantong_city_item
    int nanyang_city_item -> nanyang_city_item
    int naqu_city_item -> naqu_city_item
    int neijiang_city_item -> neijiang_city_item
    int neimenggu_province_item -> neimenggu_province_item
    int ningbo_city_item -> ningbo_city_item
    int ningde_city_item -> ningde_city_item
    int nujiang_city_item -> nujiang_city_item
    int panjin_city_item -> panjin_city_item
    int panzhihua_city_item -> panzhihua_city_item
    int pingliang_city_item -> pingliang_city_item
    int pingxiang_city_item -> pingxiang_city_item
    int province_item -> province_item
    int punc_entries -> punc_entries
    int punc_values -> punc_values
    int putian_city_item -> putian_city_item
    int qingdao_city_item -> qingdao_city_item
    int qingdongnan_city_item -> qingdongnan_city_item
    int qinghai_province_item -> qinghai_province_item
    int qinghuangdao_city_item -> qinghuangdao_city_item
    int qingnan_city_item -> qingnan_city_item
    int qingxinan_city_item -> qingxinan_city_item
    int qingyang_city_item -> qingyang_city_item
    int qingyuan_city_item -> qingyuan_city_item
    int qinzhou_city_item -> qinzhou_city_item
    int qiqihaer_city_item -> qiqihaer_city_item
    int qitaihe_city_item -> qitaihe_city_item
    int quanzhou_city_item -> quanzhou_city_item
    int qujing_city_item -> qujing_city_item
    int quyu -> quyu
    int quzhou_city_item -> quzhou_city_item
    int renzhiqudao -> renzhiqudao
    int rgeze_city_item -> rgeze_city_item
    int rizhao_city_item -> rizhao_city_item
    int sanmenxia_city_item -> sanmenxia_city_item
    int sanming_city_item -> sanming_city_item
    int sanya_city_item -> sanya_city_item
    int shandong_bingzhou_city_item -> shandong_bingzhou_city_item
    int shandong_province_item -> shandong_province_item
    int shanghai_city_item0 -> shanghai_city_item0
    int shanghai_city_item1 -> shanghai_city_item1
    int shanghai_province_item -> shanghai_province_item
    int shangluo_city_item -> shangluo_city_item
    int shangqiu_city_item -> shangqiu_city_item
    int shangrao_city_item -> shangrao_city_item
    int shannan_city_item -> shannan_city_item
    int shantou_city_item -> shantou_city_item
    int shanwei_city_item -> shanwei_city_item
    int shanxi1_province_item -> shanxi1_province_item
    int shanxi2_province_item -> shanxi2_province_item
    int shaoguan_city_item -> shaoguan_city_item
    int shaoxing_city_item -> shaoxing_city_item
    int shaoyang_city_item -> shaoyang_city_item
    int shenglongjia_city_item -> shenglongjia_city_item
    int shenyang_city_item -> shenyang_city_item
    int shenzhen_city_item -> shenzhen_city_item
    int shihezi_city_item -> shihezi_city_item
    int shijiazhuang_city_item -> shijiazhuang_city_item
    int shiyan_city_item -> shiyan_city_item
    int shizuishan_city_item -> shizuishan_city_item
    int shuangyashan_city_item -> shuangyashan_city_item
    int shuozhou_city_item -> shuozhou_city_item
    int sichuan_province_item -> sichuan_province_item
    int simao_city_item -> simao_city_item
    int siping_city_item -> siping_city_item
    int songyuan_city_item -> songyuan_city_item
    int stream_entries -> stream_entries
    int stream_values -> stream_values
    int suihua_city_item -> suihua_city_item
    int suining_city_item -> suining_city_item
    int suizhou_city_item -> suizhou_city_item
    int suqian_city_item -> suqian_city_item
    int tacheng_city_item -> tacheng_city_item
    int taian_city_item -> taian_city_item
    int taiwan_city_item -> taiwan_city_item
    int taiwan_province_item -> taiwan_province_item
    int taiyuan_city_item -> taiyuan_city_item
    int tangshan_city_item -> tangshan_city_item
    int tianjin_city_item0 -> tianjin_city_item0
    int tianjin_city_item1 -> tianjin_city_item1
    int tianjin_province_item -> tianjin_province_item
    int tianshui_city_item -> tianshui_city_item
    int tieling_city_item -> tieling_city_item
    int tongchuan_city_item -> tongchuan_city_item
    int tonghua_city_item -> tonghua_city_item
    int tongliao_city_item -> tongliao_city_item
    int tongling_city_item -> tongling_city_item
    int tongren_city_item -> tongren_city_item
    int tulyfan_city_item -> tulyfan_city_item
    int tumushihe_city_item -> tumushihe_city_item
    int voicer_cloud_entries -> voicer_cloud_entries
    int voicer_cloud_values -> voicer_cloud_values
    int weifang_city_item -> weifang_city_item
    int weihai_city_item -> weihai_city_item
    int weinan_city_item -> weinan_city_item
    int wenshan_city_item -> wenshan_city_item
    int wenzhou_city_item -> wenzhou_city_item
    int wuhai_city_item -> wuhai_city_item
    int wuhan_city_item -> wuhan_city_item
    int wuhu_city_item -> wuhu_city_item
    int wujiaqu_city_item -> wujiaqu_city_item
    int wulanchabu_city_item -> wulanchabu_city_item
    int wulumuqi_city_item -> wulumuqi_city_item
    int wushun_city_item -> wushun_city_item
    int wuwei_city_item -> wuwei_city_item
    int wuxi_city_item -> wuxi_city_item
    int wuzhong_city_item -> wuzhong_city_item
    int xiamen_city_item -> xiamen_city_item
    int xian_city_item -> xian_city_item
    int xiangpan_city_item -> xiangpan_city_item
    int xiangtan_city_item -> xiangtan_city_item
    int xiangxi_city_item -> xiangxi_city_item
    int xianning_city_item -> xianning_city_item
    int xianyang_city_item -> xianyang_city_item
    int xiaogan_city_item -> xiaogan_city_item
    int xilinguolemeng_city_item -> xilinguolemeng_city_item
    int xinganmeng_city_item -> xinganmeng_city_item
    int xingtai_city_item -> xingtai_city_item
    int xining_city_item -> xining_city_item
    int xinjiang_province_item -> xinjiang_province_item
    int xinxiang_city_item -> xinxiang_city_item
    int xinyang_city_item -> xinyang_city_item
    int xinyu_city_item -> xinyu_city_item
    int xinzhou_city_item -> xinzhou_city_item
    int xishuangbanna_city_item -> xishuangbanna_city_item
    int xizang_province_item -> xizang_province_item
    int xuancheng_city_item -> xuancheng_city_item
    int xuchang_city_item -> xuchang_city_item
    int xuzhou_city_item -> xuzhou_city_item
    int yaan_city_item -> yaan_city_item
    int yanan_city_item -> yanan_city_item
    int yanbian_city_item -> yanbian_city_item
    int yancheng_city_item -> yancheng_city_item
    int yangjiang_city_item -> yangjiang_city_item
    int yangquan_city_item -> yangquan_city_item
    int yangzhou_city_item -> yangzhou_city_item
    int yantai_city_item -> yantai_city_item
    int yibing_city_item -> yibing_city_item
    int yichang_city_item -> yichang_city_item
    int yili_city_item -> yili_city_item
    int yinchuan_city_item -> yinchuan_city_item
    int yingkou_city_item -> yingkou_city_item
    int yingtan_city_item -> yingtan_city_item
    int yixiang -> yixiang
    int yixianghuxing -> yixianghuxing
    int yixiangmianji -> yixiangmianji
    int yixiangyetai -> yixiangyetai
    int yiyang_city_item -> yiyang_city_item
    int yongzhou_city_item -> yongzhou_city_item
    int yuelin_city_item -> yuelin_city_item
    int yuexi_city_item -> yuexi_city_item
    int yueyang_city_item -> yueyang_city_item
    int yulin_city_item -> yulin_city_item
    int yuncheng_city_item -> yuncheng_city_item
    int yunfu_city_item -> yunfu_city_item
    int yunnan_province_item -> yunnan_province_item
    int yushu_city_item -> yushu_city_item
    int yusuan -> yusuan
    int zaobo_city_item -> zaobo_city_item
    int zaozhuang_city_item -> zaozhuang_city_item
    int zejiang_huzhou_city_item -> zejiang_huzhou_city_item
    int zejiang_taizhou_city_item -> zejiang_taizhou_city_item
    int zhangjiajie_city_item -> zhangjiajie_city_item
    int zhangjiakou_city_item -> zhangjiakou_city_item
    int zhangjiang_city_item -> zhangjiang_city_item
    int zhangyue_city_item -> zhangyue_city_item
    int zhangzhou_city_item -> zhangzhou_city_item
    int zhaoqing_city_item -> zhaoqing_city_item
    int zhaotong_city_item -> zhaotong_city_item
    int zhaoyang_city_item -> zhaoyang_city_item
    int zhejiang_province_item -> zhejiang_province_item
    int zhenjiang_city_item -> zhenjiang_city_item
    int zhenshou_city_item -> zhenshou_city_item
    int zhongshan_city_item -> zhongshan_city_item
    int zhongwei_city_item -> zhongwei_city_item
    int zhoukou_city_item -> zhoukou_city_item
    int zhoushan_city_item -> zhoushan_city_item
    int zhuhai_city_item -> zhuhai_city_item
    int zhumadian_city_item -> zhumadian_city_item
    int zhunyi_city_item -> zhunyi_city_item
    int zhuzhou_city_item -> zhuzhou_city_item
    int zigong_city_item -> zigong_city_item
    int zijinshili -> zijinshili
    int ziyang_city_item -> ziyang_city_item
com.example.assistant.R$attr -> com.example.assistant.R$attr:
    int abstractWheelViewStyle -> abstractWheelViewStyle
    int isAllVisible -> isAllVisible
    int isCyclic -> isCyclic
    int itemOffsetPercent -> itemOffsetPercent
    int itemsDimmedAlpha -> itemsDimmedAlpha
    int itemsPadding -> itemsPadding
    int selectionDivider -> selectionDivider
    int selectionDividerActiveAlpha -> selectionDividerActiveAlpha
    int selectionDividerDimmedAlpha -> selectionDividerDimmedAlpha
    int selectionDividerHeight -> selectionDividerHeight
    int selectionDividerWidth -> selectionDividerWidth
    int visibleItems -> visibleItems
com.example.assistant.R$color -> com.example.assistant.R$color:
    int aliceblue -> aliceblue
    int antiquewhite -> antiquewhite
    int aqua -> aqua
    int aquamarine -> aquamarine
    int azure -> azure
    int base_color_text_white -> base_color_text_white
    int beige -> beige
    int bisque -> bisque
    int black -> black
    int blanchedalmond -> blanchedalmond
    int blue -> blue
    int blueviolet -> blueviolet
    int brown -> brown
    int burlywood -> burlywood
    int cadetblue -> cadetblue
    int chartreuse -> chartreuse
    int chocolate -> chocolate
    int content_color -> content_color
    int coral -> coral
    int cornflowerblue -> cornflowerblue
    int cornsilk -> cornsilk
    int crimson -> crimson
    int cyan -> cyan
    int darkblue -> darkblue
    int darkcyan -> darkcyan
    int darkgoldenrod -> darkgoldenrod
    int darkgray -> darkgray
    int darkgreen -> darkgreen
    int darkgrey -> darkgrey
    int darkkhaki -> darkkhaki
    int darkmagenta -> darkmagenta
    int darkolivegreen -> darkolivegreen
    int darkorange -> darkorange
    int darkorchid -> darkorchid
    int darkred -> darkred
    int darksalmon -> darksalmon
    int darkseagreen -> darkseagreen
    int darkslateblue -> darkslateblue
    int darkslategray -> darkslategray
    int darkslategrey -> darkslategrey
    int darkturquoise -> darkturquoise
    int darkviolet -> darkviolet
    int deeppink -> deeppink
    int deepskyblue -> deepskyblue
    int dimgray -> dimgray
    int dimgrey -> dimgrey
    int dodgerblue -> dodgerblue
    int firebrick -> firebrick
    int floralwhite -> floralwhite
    int forestgreen -> forestgreen
    int fuchsia -> fuchsia
    int gainsboro -> gainsboro
    int ghostwhite -> ghostwhite
    int gold -> gold
    int goldenrod -> goldenrod
    int gray -> gray
    int green -> green
    int greenyellow -> greenyellow
    int grey -> grey
    int honeydew -> honeydew
    int hotpink -> hotpink
    int indianred -> indianred
    int indigo -> indigo
    int ivory -> ivory
    int khaki -> khaki
    int lavender -> lavender
    int lavenderblush -> lavenderblush
    int lawngreen -> lawngreen
    int lemonchiffon -> lemonchiffon
    int lightblue -> lightblue
    int lightcoral -> lightcoral
    int lightcyan -> lightcyan
    int lightgoldenrodyellow -> lightgoldenrodyellow
    int lightgray -> lightgray
    int lightgreen -> lightgreen
    int lightgrey -> lightgrey
    int lightpink -> lightpink
    int lightsalmon -> lightsalmon
    int lightseagreen -> lightseagreen
    int lightskyblue -> lightskyblue
    int lightslategray -> lightslategray
    int lightslategrey -> lightslategrey
    int lightsteelblue -> lightsteelblue
    int lightyellow -> lightyellow
    int lime -> lime
    int limegreen -> limegreen
    int linen -> linen
    int list_backgroud_color -> list_backgroud_color
    int magenta -> magenta
    int maroon -> maroon
    int mediumaquamarine -> mediumaquamarine
    int mediumblue -> mediumblue
    int mediumorchid -> mediumorchid
    int mediumpurple -> mediumpurple
    int mediumseagreen -> mediumseagreen
    int mediumslateblue -> mediumslateblue
    int mediumspringgreen -> mediumspringgreen
    int mediumturquoise -> mediumturquoise
    int mediumvioletred -> mediumvioletred
    int midnightblue -> midnightblue
    int mintcream -> mintcream
    int mistyrose -> mistyrose
    int moccasin -> moccasin
    int navajowhite -> navajowhite
    int navy -> navy
    int oldlace -> oldlace
    int olive -> olive
    int olivedrab -> olivedrab
    int orange -> orange
    int orangered -> orangered
    int orchid -> orchid
    int palegoldenrod -> palegoldenrod
    int palegreen -> palegreen
    int paleturquoise -> paleturquoise
    int palevioletred -> palevioletred
    int papayawhip -> papayawhip
    int peachpuff -> peachpuff
    int peru -> peru
    int pink -> pink
    int plum -> plum
    int powderblue -> powderblue
    int purple -> purple
    int red -> red
    int rosybrown -> rosybrown
    int royalblue -> royalblue
    int saddlebrown -> saddlebrown
    int salmon -> salmon
    int sandybrown -> sandybrown
    int seagreen -> seagreen
    int seashell -> seashell
    int sienna -> sienna
    int silver -> silver
    int skyblue -> skyblue
    int slateblue -> slateblue
    int slategray -> slategray
    int slategrey -> slategrey
    int snow -> snow
    int springgreen -> springgreen
    int steelblue -> steelblue
    int tan -> tan
    int teal -> teal
    int thistle -> thistle
    int title_color -> title_color
    int tomato -> tomato
    int turquoise -> turquoise
    int violet -> violet
    int wheat -> wheat
    int white -> white
    int whitesmoke -> whitesmoke
    int yellow -> yellow
com.example.assistant.R$dimen -> com.example.assistant.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    int font_size_10 -> font_size_10
    int font_size_12 -> font_size_12
    int font_size_14 -> font_size_14
    int font_size_16 -> font_size_16
    int font_size_18 -> font_size_18
    int font_size_20 -> font_size_20
    int font_size_22 -> font_size_22
    int font_size_24 -> font_size_24
    int font_size_26 -> font_size_26
    int font_size_28 -> font_size_28
    int font_size_30 -> font_size_30
    int font_size_8 -> font_size_8
    int popmenu -> popmenu
    int popmenu_p_y -> popmenu_p_y
    int popmenu_v_y -> popmenu_v_y
    int popmenu_x -> popmenu_x
    int popmenu_y -> popmenu_y
    int text_app_title -> text_app_title
com.example.assistant.R$drawable -> com.example.assistant.R$drawable:
    int accountgrdiao -> accountgrdiao
    int accountgrdiao_press -> accountgrdiao_press
    int back_btn_normal -> back_btn_normal
    int back_btn_selected -> back_btn_selected
    int back_normal -> back_normal
    int back_press -> back_press
    int beizhu -> beizhu
    int bg_pop_item -> bg_pop_item
    int bg_pop_pressed -> bg_pop_pressed
    int bgground -> bgground
    int bgradio -> bgradio
    int bgroud -> bgroud
    int blue_bg -> blue_bg
    int btn_back -> btn_back
    int btn_back_1 -> btn_back_1
    int btn_bg -> btn_bg
    int btn_bg_blue -> btn_bg_blue
    int btn_bule_disable -> btn_bule_disable
    int btn_bule_focused -> btn_bule_focused
    int btn_bule_normal -> btn_bule_normal
    int btn_bule_pressed -> btn_bule_pressed
    int btn_chat_send -> btn_chat_send
    int btn_check_off_normal -> btn_check_off_normal
    int btn_check_on_normal -> btn_check_on_normal
    int btn_login_drawable -> btn_login_drawable
    int btn_more -> btn_more
    int btn_nor_bg -> btn_nor_bg
    int btn_press_bg -> btn_press_bg
    int btn_roun_bg -> btn_roun_bg
    int btn_round_bg -> btn_round_bg
    int btn_select -> btn_select
    int btncall -> btncall
    int button_login -> button_login
    int button_login_press -> button_login_press
    int call -> call
    int called -> called
    int callin -> callin
    int cancel -> cancel
    int cancel_button -> cancel_button
    int cancel_p -> cancel_p
    int cb_check_1 -> cb_check_1
    int chat_item -> chat_item
    int chat_item_click -> chat_item_click
    int chat_send_btn_nor -> chat_send_btn_nor
    int chat_send_btn_pre -> chat_send_btn_pre
    int chatfrom_bg -> chatfrom_bg
    int chatfrom_bg_focused -> chatfrom_bg_focused
    int chatfrom_bg_normal -> chatfrom_bg_normal
    int chatfrom_bg_pressed -> chatfrom_bg_pressed
    int chatto_bg -> chatto_bg
    int chatto_bg_focused -> chatto_bg_focused
    int chatto_bg_normal -> chatto_bg_normal
    int chatto_bg_pressed -> chatto_bg_pressed
    int checkbox_checked -> checkbox_checked
    int checkbox_normal -> checkbox_normal
    int clear -> clear
    int contact -> contact
    int contact_bg -> contact_bg
    int contact_come -> contact_come
    int contact_edit -> contact_edit
    int default_btn -> default_btn
    int default_click_btn -> default_click_btn
    int default_select_btn -> default_select_btn
    int delete -> delete
    int delete_press -> delete_press
    int deleteselect -> deleteselect
    int editer -> editer
    int editer_press -> editer_press
    int editerselect -> editerselect
    int edt_bg -> edt_bg
    int fangda -> fangda
    int feman -> feman
    int feman_press -> feman_press
    int femansex_select -> femansex_select
    int fenge -> fenge
    int fiveselect -> fiveselect
    int footer_bg_white -> footer_bg_white
    int fourselect -> fourselect
    int greemessage -> greemessage
    int horizontalline -> horizontalline
    int ic_launcher -> ic_launcher
    int icon_account -> icon_account
    int icon_account_ -> icon_account_
    int icon_account_press -> icon_account_press
    int icon_checkbox -> icon_checkbox
    int icon_password -> icon_password
    int icon_password_ -> icon_password_
    int icon_password_press -> icon_password_press
    int layout_backgroud -> layout_backgroud
    int left_line -> left_line
    int lianxiren -> lianxiren
    int line -> line
    int line_background -> line_background
    int login -> login
    int logo -> logo
    int man -> man
    int man_press -> man_press
    int mansex_select -> mansex_select
    int maoboli -> maoboli
    int maoboli1 -> maoboli1
    int message_bg -> message_bg
    int messagegrdiao -> messagegrdiao
    int messagegrdiao_press -> messagegrdiao_press
    int more_normal -> more_normal
    int more_press -> more_press
    int net_anim1 -> net_anim1
    int net_anim2 -> net_anim2
    int net_anim3 -> net_anim3
    int net_anim4 -> net_anim4
    int net_anim5 -> net_anim5
    int net_anim6 -> net_anim6
    int net_anim7 -> net_anim7
    int net_anim8 -> net_anim8
    int ok -> ok
    int ok_button -> ok_button
    int ok_d -> ok_d
    int ok_p -> ok_p
    int oneselect -> oneselect
    int onexit -> onexit
    int phone_callin -> phone_callin
    int phonegrdiao -> phonegrdiao
    int phonegrdiao_pres -> phonegrdiao_pres
    int phonegrdiao_press -> phonegrdiao_press
    int phonein -> phonein
    int phonein_press -> phonein_press
    int popmenu_bg -> popmenu_bg
    int popwin -> popwin
    int pwd -> pwd
    int rect -> rect
    int sc_acm_inputbox -> sc_acm_inputbox
    int search -> search
    int select_line -> select_line
    int send -> send
    int send_message -> send_message
    int shujugrdiao -> shujugrdiao
    int shujugrdiao_press -> shujugrdiao_press
    int sms_bg -> sms_bg
    int suoxiao -> suoxiao
    int superman -> superman
    int threeselect -> threeselect
    int timeline -> timeline
    int timepoint -> timepoint
    int title_bar -> title_bar
    int touming -> touming
    int twoselect -> twoselect
    int user -> user
    int usergrdiao -> usergrdiao
    int usergrdiao_press -> usergrdiao_press
    int voice -> voice
    int voice_nor -> voice_nor
    int voice_play -> voice_play
    int voice_pre -> voice_pre
    int webviewtab_bg -> webviewtab_bg
    int wheel_bg -> wheel_bg
    int wheel_bg_hor -> wheel_bg_hor
    int wheel_bg_ver -> wheel_bg_ver
    int wheel_val -> wheel_val
    int xiaoxi -> xiaoxi
    int yuan -> yuan
com.example.assistant.R$id -> com.example.assistant.R$id:
    int FiveFragment -> FiveFragment
    int FourFragment -> FourFragment
    int OneFragment -> OneFragment
    int RelativeLayout1 -> RelativeLayout1
    int ThreeFragment -> ThreeFragment
    int TwoFragment -> TwoFragment
    int action_settings -> action_settings
    int addOne -> addOne
    int back -> back
    int beizhu -> beizhu
    int beizhuList -> beizhuList
    int bottom -> bottom
    int btnLogin -> btnLogin
    int btnRigster -> btnRigster
    int btn_cancel -> btn_cancel
    int btn_exit -> btn_exit
    int call -> call
    int cancel -> cancel
    int cbAll -> cbAll
    int check -> check
    int chengjiaojine -> chengjiaojine
    int chengshi -> chengshi
    int chkbox_remember -> chkbox_remember
    int clear -> clear
    int color_text -> color_text
    int color_title -> color_title
    int contactList -> contactList
    int contacts_name -> contacts_name
    int container -> container
    int content -> content
    int createTime -> createTime
    int day -> day
    int dayDianZhuanFang -> dayDianZhuanFang
    int dayFuFang -> dayFuFang
    int dayLaiDian -> dayLaiDian
    int dayLaiFang -> dayLaiFang
    int dayList -> dayList
    int dayXinFang -> dayXinFang
    int dayXinZengQianYue -> dayXinZengQianYue
    int dayXinZengRenGou -> dayXinZengRenGou
    int dayYiXiangQiang -> dayYiXiangQiang
    int dayYiXiangYiBan -> dayYiXiangYiBan
    int dayYiXiangZhong -> dayYiXiangZhong
    int delete -> delete
    int edit -> edit
    int editer -> editer
    int edtBeizhu -> edtBeizhu
    int edtContent -> edtContent
    int edtSearch -> edtSearch
    int edtSend -> edtSend
    int exit -> exit
    int fangyuan -> fangyuan
    int fastAddOne -> fastAddOne
    int fastSave -> fastSave
    int feman -> feman
    int gressBar -> gressBar
    int group -> group
    int head -> head
    int hour -> hour
    int huxing -> huxing
    int imgFive -> imgFive
    int imgFour -> imgFour
    int imgHead -> imgHead
    int imgMore -> imgMore
    int imgOne -> imgOne
    int imgPhoto -> imgPhoto
    int imgThree -> imgThree
    int imgTwo -> imgTwo
    int imgVoice -> imgVoice
    int importContacts -> importContacts
    int iv_isSend -> iv_isSend
    int iv_user_photo -> iv_user_photo
    int jine -> jine
    int jingjiren -> jingjiren
    int kehushuxing -> kehushuxing
    int laifangshijian -> laifangshijian
    int laoDaiXin -> laoDaiXin
    int laoDaiXinList -> laoDaiXinList
    int laoyezhuPhone -> laoyezhuPhone
    int leibie -> leibie
    int line1 -> line1
    int line2 -> line2
    int listView -> listView
    int loadView -> loadView
    int louhao -> louhao
    int lvContact -> lvContact
    int man -> man
    int message -> message
    int min -> min
    int month -> month
    int monthDianZhuanFang -> monthDianZhuanFang
    int monthFuFang -> monthFuFang
    int monthLaiDian -> monthLaiDian
    int monthLaiFang -> monthLaiFang
    int monthXinFang -> monthXinFang
    int monthXinZengQianYue -> monthXinZengQianYue
    int monthXinZengRenGou -> monthXinZengRenGou
    int monthYiXiangQiang -> monthYiXiangQiang
    int monthYiXiangYiBan -> monthYiXiangYiBan
    int monthYiXiangZhong -> monthYiXiangZhong
    int msgList -> msgList
    int name -> name
    int ok -> ok
    int onExit -> onExit
    int oneSelect -> oneSelect
    int orderList -> orderList
    int phone -> phone
    int phonelist -> phonelist
    int popup_view_cont -> popup_view_cont
    int progress -> progress
    int progress_show -> progress_show
    int quxian -> quxian
    int quyu -> quyu
    int radioGroup -> radioGroup
    int remeber -> remeber
    int renzhiqudao -> renzhiqudao
    int root -> root
    int rootView -> rootView
    int safepwd -> safepwd
    int save -> save
    int select -> select
    int send -> send
    int sendCount -> sendCount
    int sendMessage -> sendMessage
    int sendMsg -> sendMsg
    int shenfenzheng -> shenfenzheng
    int shengfen -> shengfen
    int show -> show
    int showbeizhu -> showbeizhu
    int smallOrBig -> smallOrBig
    int smsList -> smsList
    int tellPhone -> tellPhone
    int text -> text
    int textView -> textView
    int time -> time
    int timeLineDown -> timeLineDown
    int timeLineUp -> timeLineUp
    int timePicker1 -> timePicker1
    int timePoint -> timePoint
    int title -> title
    int tv_beizhu -> tv_beizhu
    int tv_chatContent -> tv_chatContent
    int tv_createTime -> tv_createTime
    int tv_fangyuan -> tv_fangyuan
    int tv_huxing -> tv_huxing
    int tv_jine -> tv_jine
    int tv_jingjiren -> tv_jingjiren
    int tv_laifangshijian -> tv_laifangshijian
    int tv_name -> tv_name
    int tv_phone -> tv_phone
    int tv_remeber -> tv_remeber
    int tv_sendTime -> tv_sendTime
    int tv_userName -> tv_userName
    int twoSelect -> twoSelect
    int userName -> userName
    int userPWD -> userPWD
    int userid -> userid
    int view -> view
    int viewF -> viewF
    int warring -> warring
    int xingbie -> xingbie
    int year -> year
    int yearMoney -> yearMoney
    int yearTao -> yearTao
    int yisuan -> yisuan
    int yixiang -> yixiang
    int yixianghuxing -> yixianghuxing
    int yixiangmianji -> yixiangmianji
    int yixiangyetai -> yixiangyetai
    int yonghuzu -> yonghuzu
    int yusuan -> yusuan
    int zhanghao -> zhanghao
    int zijinshili -> zijinshili
com.example.assistant.R$layout -> com.example.assistant.R$layout:
    int beizhu_item -> beizhu_item
    int beizhupop -> beizhupop
    int call_item -> call_item
    int chat_message -> chat_message
    int chat_message_come -> chat_message_come
    int chat_message_send -> chat_message_send
    int contacts_item -> contacts_item
    int contacts_item1 -> contacts_item1
    int contacts_list -> contacts_list
    int day_item -> day_item
    int exitpopwindow -> exitpopwindow
    int fivefragment -> fivefragment
    int floatting -> floatting
    int fourfragment -> fourfragment
    int hand_down -> hand_down
    int hand_down_save -> hand_down_save
    int home -> home
    int importcontacts -> importcontacts
    int laodaixin -> laodaixin
    int laodaixin_item -> laodaixin_item
    int laoyezhu_item -> laoyezhu_item
    int loading_pop -> loading_pop
    int login -> login
    int onefragment -> onefragment
    int phone_item -> phone_item
    int phonepop -> phonepop
    int picker -> picker
    int pomenu_item -> pomenu_item
    int popmenu -> popmenu
    int register -> register
    int searchable -> searchable
    int sendmessagepop -> sendmessagepop
    int setting -> setting
    int showbeizhu -> showbeizhu
    int sms_item -> sms_item
    int superman_alertdialog -> superman_alertdialog
    int task_item -> task_item
    int threefragment -> threefragment
    int timepicker -> timepicker
    int twofragment -> twofragment
    int userinfo -> userinfo
com.example.assistant.R$menu -> com.example.assistant.R$menu:
    int main -> main
com.example.assistant.R$string -> com.example.assistant.R$string:
    int action_settings -> action_settings
    int app_id -> app_id
    int app_name -> app_name
    int example_explain -> example_explain
    int pref_key_iat_show -> pref_key_iat_show
    int pref_title_iat_show -> pref_title_iat_show
    int searchHint -> searchHint
    int searchLabel -> searchLabel
    int searchbtn -> searchbtn
    int superman_cancel -> superman_cancel
    int superman_content -> superman_content
    int superman_ok -> superman_ok
    int superman_title -> superman_title
    int text_begin -> text_begin
    int text_download_success -> text_download_success
    int text_isr_abnf_hint -> text_isr_abnf_hint
    int text_tts_source -> text_tts_source
    int text_understand_hint -> text_understand_hint
    int text_upload_contacts -> text_upload_contacts
    int text_upload_success -> text_upload_success
    int text_upload_userwords -> text_upload_userwords
    int text_userword_empty -> text_userword_empty
    int tts_toast_format -> tts_toast_format
com.example.assistant.R$style -> com.example.assistant.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    int NoTitle -> NoTitle
    int PopupAnimation -> PopupAnimation
    int Smile -> Smile
    int Smile_TextView -> Smile_TextView
    int Smile_TextView__White -> Smile_TextView__White
    int dialog -> dialog
com.example.assistant.R$styleable -> com.example.assistant.R$styleable:
    int[] AbstractWheelView -> AbstractWheelView
    int AbstractWheelView_isAllVisible -> AbstractWheelView_isAllVisible
    int AbstractWheelView_isCyclic -> AbstractWheelView_isCyclic
    int AbstractWheelView_itemOffsetPercent -> AbstractWheelView_itemOffsetPercent
    int AbstractWheelView_itemsDimmedAlpha -> AbstractWheelView_itemsDimmedAlpha
    int AbstractWheelView_itemsPadding -> AbstractWheelView_itemsPadding
    int AbstractWheelView_selectionDivider -> AbstractWheelView_selectionDivider
    int AbstractWheelView_selectionDividerActiveAlpha -> AbstractWheelView_selectionDividerActiveAlpha
    int AbstractWheelView_selectionDividerDimmedAlpha -> AbstractWheelView_selectionDividerDimmedAlpha
    int AbstractWheelView_visibleItems -> AbstractWheelView_visibleItems
    int[] WheelHorizontalView -> WheelHorizontalView
    int WheelHorizontalView_selectionDividerWidth -> WheelHorizontalView_selectionDividerWidth
    int[] WheelVerticalView -> WheelVerticalView
    int WheelVerticalView_selectionDividerHeight -> WheelVerticalView_selectionDividerHeight
com.example.assistant.R$xml -> com.example.assistant.R$xml:
    int iat_setting -> iat_setting
    int searchable -> searchable
    int tts_setting -> tts_setting
    int understand_setting -> understand_setting
com.example.exception.CrashApplication -> com.example.exception.CrashApplication:
    void onCreate() -> onCreate
com.example.exception.CrashHandler -> com.example.exception.a:
    java.lang.Thread$UncaughtExceptionHandler mDefaultHandler -> a
    com.example.exception.CrashHandler INSTANCE -> b
    android.content.Context mContext -> c
    java.util.Map infos -> d
    java.text.DateFormat formatter -> e
    com.example.exception.CrashHandler getInstance() -> a
    void init(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    java.lang.String saveCrashInfo2File(java.lang.Throwable) -> a
    android.content.Context access$0(com.example.exception.CrashHandler) -> a
com.example.exception.CrashHandler$1 -> com.example.exception.b:
    com.example.exception.CrashHandler this$0 -> a
    void run() -> run
com.example.timeselect.JudgeDate -> com.example.timeselect.a:
    boolean isDate(java.lang.String,java.lang.String) -> a
com.example.timeselect.NumericWheelAdapter -> com.example.timeselect.b:
    int minValue -> a
    int maxValue -> b
    java.lang.String format -> c
    java.lang.String getItem(int) -> a
    int getItemsCount() -> a
    int getMaximumLength() -> b
com.example.timeselect.OnWheelChangedListener -> com.example.timeselect.c:
    void onChanged$6894b957(int) -> a
com.example.timeselect.ScreenInfo -> com.example.timeselect.d:
    android.app.Activity activity -> a
    int width -> b
    int height -> c
    float density -> d
    int densityDpi -> e
    int getHeight() -> a
com.example.timeselect.WheelAdapter -> com.example.timeselect.e:
    int getItemsCount() -> a
    java.lang.String getItem(int) -> a
    int getMaximumLength() -> b
com.example.timeselect.WheelMain -> com.example.timeselect.f:
    android.view.View view -> b
    com.example.timeselect.WheelView wv_year -> c
    com.example.timeselect.WheelView wv_month -> d
    com.example.timeselect.WheelView wv_day -> e
    com.example.timeselect.WheelView wv_hours -> f
    com.example.timeselect.WheelView wv_mins -> g
    int screenheight -> a
    boolean hasSelectTime -> h
    int START_YEAR -> i
    int END_YEAR -> j
    void initDateTimePicker(int,int,int) -> a
    java.lang.String getTime() -> a
    int access$0() -> b
    com.example.timeselect.WheelView access$1(com.example.timeselect.WheelMain) -> a
    com.example.timeselect.WheelView access$2(com.example.timeselect.WheelMain) -> b
    com.example.timeselect.WheelView access$3(com.example.timeselect.WheelMain) -> c
com.example.timeselect.WheelMain$1 -> com.example.timeselect.g:
    com.example.timeselect.WheelMain this$0 -> a
    java.util.List val$list_big -> b
    java.util.List val$list_little -> c
    void onChanged$6894b957(int) -> a
com.example.timeselect.WheelMain$2 -> com.example.timeselect.h:
    com.example.timeselect.WheelMain this$0 -> a
    java.util.List val$list_big -> b
    java.util.List val$list_little -> c
    void onChanged$6894b957(int) -> a
com.example.timeselect.WheelView -> com.example.timeselect.WheelView:
    int[] SHADOWS_COLORS -> c
    int TEXT_SIZE -> a
    int ITEM_OFFSET -> d
    com.example.timeselect.WheelAdapter adapter -> e
    int currentItem -> f
    int itemsWidth -> g
    int labelWidth -> h
    int visibleItems -> i
    int itemHeight -> j
    android.text.TextPaint itemsPaint -> k
    android.text.TextPaint valuePaint -> l
    android.text.StaticLayout itemsLayout -> m
    android.text.StaticLayout labelLayout -> n
    android.text.StaticLayout valueLayout -> o
    java.lang.String label -> p
    android.graphics.drawable.Drawable centerDrawable -> q
    android.graphics.drawable.GradientDrawable topShadow -> r
    android.graphics.drawable.GradientDrawable bottomShadow -> s
    boolean isScrollingPerformed -> t
    int scrollingOffset -> u
    android.view.GestureDetector gestureDetector -> v
    android.widget.Scroller scroller -> w
    int lastScrollY -> x
    boolean isCyclic -> b
    java.util.List changingListeners -> y
    java.util.List scrollingListeners -> z
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> A
    int MESSAGE_SCROLL -> B
    int MESSAGE_JUSTIFY -> C
    android.os.Handler animationHandler -> D
    void initData(android.content.Context) -> a
    void setAdapter(com.example.timeselect.WheelAdapter) -> a
    void setLabel(java.lang.String) -> a
    void addChangingListener(com.example.timeselect.OnWheelChangedListener) -> a
    int getCurrentItem() -> a
    void setCurrentItem$2563266(int) -> b
    void setCurrentItem(int) -> a
    void setCyclic$1385ff() -> b
    void invalidateLayouts() -> d
    java.lang.String getTextItem(int) -> c
    java.lang.String buildText(boolean) -> a
    int getMaxTextLength() -> e
    int getItemHeight() -> f
    int calculateLayoutWidth(int,int) -> a
    void createLayouts(int,int) -> b
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setNextMessage(int) -> d
    void clearMessages() -> g
    void justify() -> h
    void finishScrolling() -> c
    boolean access$0(com.example.timeselect.WheelView) -> a
    android.widget.Scroller access$1(com.example.timeselect.WheelView) -> b
    void access$2(com.example.timeselect.WheelView) -> c
    void access$3(com.example.timeselect.WheelView) -> d
    void access$4(com.example.timeselect.WheelView,int) -> a
    int access$5(com.example.timeselect.WheelView) -> e
    int access$6(com.example.timeselect.WheelView) -> f
    int access$7(com.example.timeselect.WheelView) -> g
    void access$8(com.example.timeselect.WheelView,int) -> b
    com.example.timeselect.WheelAdapter access$9(com.example.timeselect.WheelView) -> h
    int access$10(com.example.timeselect.WheelView) -> i
    void access$11$35f9f2c(com.example.timeselect.WheelView) -> j
    android.os.Handler access$12(com.example.timeselect.WheelView) -> k
    void access$13(com.example.timeselect.WheelView) -> l
com.example.timeselect.WheelView$1 -> com.example.timeselect.i:
    com.example.timeselect.WheelView this$0 -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.example.timeselect.WheelView$2 -> com.example.timeselect.j:
    com.example.timeselect.WheelView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.google.gson.DefaultDateTypeAdapter -> com.google.gson.a:
    java.text.DateFormat enUsFormat -> a
    java.text.DateFormat localFormat -> b
    java.text.DateFormat iso8601Format -> c
    com.google.gson.JsonElement serialize$107ba52a(java.util.Date) -> a
    java.util.Date deserializeToDate(com.google.gson.JsonElement) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> field
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    java.lang.Class getDeclaredClass() -> getDeclaredClass
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.util.Collection getAnnotations() -> getAnnotations
    boolean hasModifier(int) -> hasModifier
    java.lang.Object get(java.lang.Object) -> get
    boolean isSynthetic() -> isSynthetic
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy[] $VALUES -> $VALUES
    com.google.gson.FieldNamingPolicy[] values() -> values
    com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    java.lang.String separateCamelCase(java.lang.String,java.lang.String) -> separateCamelCase
    java.lang.String upperCaseFirstLetter(java.lang.String) -> upperCaseFirstLetter
    java.lang.String modifyString(char,java.lang.String,int) -> modifyString
    java.lang.String access$100(java.lang.String) -> access$100
    java.lang.String access$200(java.lang.String,java.lang.String) -> access$200
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.b:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.c:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.d:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.e:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.f:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    boolean DEFAULT_JSON_NON_EXECUTABLE -> DEFAULT_JSON_NON_EXECUTABLE
    java.lang.String JSON_NON_EXECUTABLE_PREFIX -> JSON_NON_EXECUTABLE_PREFIX
    java.lang.ThreadLocal calls -> calls
    java.util.Map typeTokenCache -> typeTokenCache
    java.util.List factories -> factories
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean serializeNulls -> serializeNulls
    boolean htmlSafe -> htmlSafe
    boolean generateNonExecutableJson -> generateNonExecutableJson
    boolean prettyPrinting -> prettyPrinting
    com.google.gson.JsonDeserializationContext deserializationContext -> deserializationContext
    com.google.gson.JsonSerializationContext serializationContext -> serializationContext
    com.google.gson.TypeAdapter doubleAdapter(boolean) -> doubleAdapter
    com.google.gson.TypeAdapter floatAdapter(boolean) -> floatAdapter
    void checkValidFloatingPoint(double) -> checkValidFloatingPoint
    com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> longAdapter
    com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader) -> assertFullConsumption
    java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    java.lang.String toString() -> toString
    void access$000(com.google.gson.Gson,double) -> access$000
    java.util.List access$100(com.google.gson.Gson) -> access$100
com.google.gson.Gson$1 -> com.google.gson.g:
    com.google.gson.Gson this$0 -> a
    java.lang.Object initialValue() -> initialValue
com.google.gson.Gson$2 -> com.google.gson.h:
    com.google.gson.Gson this$0 -> a
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.Gson$3 -> com.google.gson.i:
    com.google.gson.Gson this$0 -> a
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.Gson$4 -> com.google.gson.j:
    com.google.gson.Gson this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$5 -> com.google.gson.k:
    com.google.gson.Gson this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$6 -> com.google.gson.l:
    com.google.gson.Gson this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.Gson$7 -> com.google.gson.m:
    com.google.gson.TypeAdapter getNextAdapter(com.google.gson.Gson,com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getNextAdapter
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.n:
    com.google.gson.TypeAdapter delegate -> a
    void setDelegate(com.google.gson.TypeAdapter) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> excluder
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> longSerializationPolicy
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    java.util.Map instanceCreators -> instanceCreators
    java.util.List factories -> factories
    java.util.List hierarchyFactories -> hierarchyFactories
    boolean serializeNulls -> serializeNulls
    java.lang.String datePattern -> datePattern
    int dateStyle -> dateStyle
    int timeStyle -> timeStyle
    boolean complexMapKeySerialization -> complexMapKeySerialization
    boolean serializeSpecialFloatingPointValues -> serializeSpecialFloatingPointValues
    boolean escapeHtmlChars -> escapeHtmlChars
    boolean prettyPrinting -> prettyPrinting
    boolean generateNonExecutableJson -> generateNonExecutableJson
    com.google.gson.GsonBuilder setVersion(double) -> setVersion
    com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    com.google.gson.Gson create() -> create
    void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> addTypeAdaptersForDate
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.List elements -> elements
    void add(com.google.gson.JsonElement) -> add
    void addAll(com.google.gson.JsonArray) -> addAll
    int size() -> size
    java.util.Iterator iterator() -> iterator
    com.google.gson.JsonElement get(int) -> get
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    short getAsShort() -> getAsShort
    boolean getAsBoolean() -> getAsBoolean
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    boolean isJsonArray() -> isJsonArray
    boolean isJsonObject() -> isJsonObject
    boolean isJsonPrimitive() -> isJsonPrimitive
    boolean isJsonNull() -> isJsonNull
    com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    boolean getAsBoolean() -> getAsBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    java.lang.Number getAsNumber() -> getAsNumber
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    short getAsShort() -> getAsShort
    java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    java.util.Map members -> members
    void add(java.lang.String,com.google.gson.JsonElement) -> add
    com.google.gson.JsonElement remove(java.lang.String) -> remove
    void addProperty(java.lang.String,java.lang.String) -> addProperty
    void addProperty(java.lang.String,java.lang.Number) -> addProperty
    void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    void addProperty(java.lang.String,java.lang.Character) -> addProperty
    com.google.gson.JsonElement createJsonElement(java.lang.Object) -> createJsonElement
    java.util.Set entrySet() -> entrySet
    boolean has(java.lang.String) -> has
    com.google.gson.JsonElement get(java.lang.String) -> get
    com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    com.google.gson.JsonElement parse(java.lang.String) -> parse
    com.google.gson.JsonElement parse(java.io.Reader) -> parse
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Class[] PRIMITIVE_TYPES -> PRIMITIVE_TYPES
    java.lang.Object value -> value
    void setValue(java.lang.Object) -> setValue
    boolean isBoolean() -> isBoolean
    java.lang.Boolean getAsBooleanWrapper() -> getAsBooleanWrapper
    boolean getAsBoolean() -> getAsBoolean
    boolean isNumber() -> isNumber
    java.lang.Number getAsNumber() -> getAsNumber
    boolean isString() -> isString
    java.lang.String getAsString() -> getAsString
    double getAsDouble() -> getAsDouble
    java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    float getAsFloat() -> getAsFloat
    long getAsLong() -> getAsLong
    short getAsShort() -> getAsShort
    int getAsInt() -> getAsInt
    byte getAsByte() -> getAsByte
    char getAsCharacter() -> getAsCharacter
    boolean isPrimitiveOrString(java.lang.Object) -> isPrimitiveOrString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isIntegral(com.google.gson.JsonPrimitive) -> isIntegral
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> parser
    java.lang.Object lock -> lock
    com.google.gson.JsonElement next() -> next
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    long serialVersionUID -> serialVersionUID
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> $VALUES
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.o:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.p:
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.TreeTypeAdapter -> com.google.gson.q:
    com.google.gson.JsonSerializer serializer -> a
    com.google.gson.JsonDeserializer deserializer -> b
    com.google.gson.Gson gson -> c
    com.google.gson.reflect.TypeToken typeToken -> d
    com.google.gson.TypeAdapterFactory skipPast -> e
    com.google.gson.TypeAdapter delegate -> f
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> a
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> a
    com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> b
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> a
com.google.gson.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.r:
    com.google.gson.reflect.TypeToken exactType -> a
    boolean matchRawType -> b
    java.lang.Class hierarchyType -> c
    com.google.gson.JsonSerializer serializer -> d
    com.google.gson.JsonDeserializer deserializer -> e
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    void toJson(java.io.Writer,java.lang.Object) -> toJson
    com.google.gson.TypeAdapter nullSafe() -> nullSafe
    java.lang.String toJson(java.lang.Object) -> toJson
    com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object fromJson(java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.String) -> fromJson
    java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.s:
    com.google.gson.TypeAdapter this$0 -> a
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getSupertype
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    void checkNotPrimitive(java.lang.reflect.Type) -> checkNotPrimitive
    void access$000(java.lang.reflect.Type) -> access$000
    int access$100(java.lang.Object) -> access$100
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.a:
    java.lang.reflect.Type componentType -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.b:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.c:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> instanceCreators
    com.google.gson.internal.ObjectConstructor getConstructor(com.google.gson.reflect.TypeToken) -> getConstructor
    com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class) -> newDefaultConstructor
    com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.Class) -> newDefaultImplementationConstructor
    com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.reflect.Type,java.lang.Class) -> newUnsafeAllocator
    java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.d:
    com.google.gson.InstanceCreator val$creator -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.e:
    java.lang.reflect.Constructor val$constructor -> a
    com.google.gson.internal.ConstructorConstructor this$0 -> b
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.f:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.g:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.h:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.i:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.j:
    com.google.gson.internal.ConstructorConstructor this$0 -> a
    java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.k:
    com.google.gson.internal.UnsafeAllocator unsafeAllocator -> d
    java.lang.Class val$rawType -> a
    java.lang.reflect.Type val$type -> b
    com.google.gson.internal.ConstructorConstructor this$0 -> c
    java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    double IGNORE_VERSIONS -> IGNORE_VERSIONS
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> version
    int modifiers -> modifiers
    boolean serializeInnerClasses -> serializeInnerClasses
    boolean requireExpose -> requireExpose
    java.util.List serializationStrategies -> serializationStrategies
    java.util.List deserializationStrategies -> deserializationStrategies
    com.google.gson.internal.Excluder clone() -> clone
    com.google.gson.internal.Excluder withVersion(double) -> withVersion
    com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    boolean isAnonymousOrLocal(java.lang.Class) -> isAnonymousOrLocal
    boolean isInnerClass(java.lang.Class) -> isInnerClass
    boolean isStatic(java.lang.Class) -> isStatic
    boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> isValidVersion
    boolean isValidSince(com.google.gson.annotations.Since) -> isValidSince
    boolean isValidUntil(com.google.gson.annotations.Until) -> isValidUntil
    java.lang.Object clone() -> clone
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.l:
    com.google.gson.TypeAdapter delegate -> f
    boolean val$skipDeserialize -> a
    boolean val$skipSerialize -> b
    com.google.gson.Gson val$gson -> c
    com.google.gson.reflect.TypeToken val$type -> d
    com.google.gson.internal.Excluder this$0 -> e
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.GsonInternalAccess -> com.google.gson.internal.GsonInternalAccess:
    com.google.gson.internal.GsonInternalAccess INSTANCE -> INSTANCE
    com.google.gson.TypeAdapter getNextAdapter(com.google.gson.Gson,com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getNextAdapter
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> value
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.lang.String toString() -> toString
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.Pair -> com.google.gson.internal.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    java.lang.String toString() -> toString
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> PRIMITIVE_TO_WRAPPER_TYPE
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> WRAPPER_TO_PRIMITIVE_TYPE
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> add
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.m:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    void write(char[],int,int) -> write
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.n:
    char[] chars -> a
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.google.gson.internal.UnsafeAllocator create() -> create
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.o:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.p:
    java.lang.reflect.Method val$newInstance -> a
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.q:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.r:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> componentType
    com.google.gson.TypeAdapter componentTypeAdapter -> componentTypeAdapter
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.a:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.BigDecimalTypeAdapter -> com.google.gson.internal.bind.BigDecimalTypeAdapter:
    java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.BigIntegerTypeAdapter -> com.google.gson.internal.bind.BigIntegerTypeAdapter:
    java.math.BigInteger read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.math.BigInteger) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.b:
    com.google.gson.TypeAdapter elementTypeAdapter -> b
    com.google.gson.internal.ObjectConstructor constructor -> c
    com.google.gson.internal.bind.CollectionTypeAdapterFactory this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat enUsFormat -> enUsFormat
    java.text.DateFormat localFormat -> localFormat
    java.text.DateFormat iso8601Format -> iso8601Format
    java.text.DateFormat buildIso8601Format() -> buildIso8601Format
    java.util.Date read(com.google.gson.stream.JsonReader) -> read
    java.util.Date deserializeToDate(java.lang.String) -> deserializeToDate
    void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.c:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> UNREADABLE_READER
    java.lang.Object SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    java.lang.Object peekStack() -> peekStack
    java.lang.Object popStack() -> popStack
    void expect(com.google.gson.stream.JsonToken) -> expect
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    java.lang.String toString() -> toString
    void promoteNameToValue() -> promoteNameToValue
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.d:
    int read(char[],int,int) -> read
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> UNWRITABLE_WRITER
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> SENTINEL_CLOSED
    java.util.List stack -> stack
    java.lang.String pendingName -> pendingName
    com.google.gson.JsonElement product -> product
    com.google.gson.JsonElement get() -> get
    com.google.gson.JsonElement peek() -> peek
    void put(com.google.gson.JsonElement) -> put
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.e:
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    boolean complexMapKeySerialization -> complexMapKeySerialization
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type) -> getKeyAdapter
    com.google.gson.JsonElement toJsonTree(com.google.gson.TypeAdapter,java.lang.Object) -> toJsonTree
    boolean access$000(com.google.gson.internal.bind.MapTypeAdapterFactory) -> access$000
    com.google.gson.JsonElement access$100(com.google.gson.TypeAdapter,java.lang.Object) -> access$100
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.f:
    com.google.gson.TypeAdapter keyTypeAdapter -> b
    com.google.gson.TypeAdapter valueTypeAdapter -> c
    com.google.gson.internal.ObjectConstructor constructor -> d
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    com.google.gson.Gson gson -> gson
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.g:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.h:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> constructorConstructor
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> fieldNamingPolicy
    com.google.gson.internal.Excluder excluder -> excluder
    boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    java.lang.String getFieldName(java.lang.reflect.Field) -> getFieldName
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean) -> createBoundField
    java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class) -> getBoundFields
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.i:
    com.google.gson.TypeAdapter typeAdapter -> a
    com.google.gson.Gson val$context -> b
    com.google.gson.reflect.TypeToken val$fieldType -> c
    java.lang.reflect.Field val$field -> d
    boolean val$isPrimitive -> e
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> f
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    com.google.gson.internal.ObjectConstructor constructor -> constructor
    java.util.Map boundFields -> boundFields
    com.google.gson.internal.bind.ReflectiveTypeAdapterFactory this$0 -> this$0
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.j:
    java.lang.String name -> g
    boolean serialized -> h
    boolean deserialized -> i
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void read(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.SqlDateTypeAdapter -> com.google.gson.internal.bind.SqlDateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Date read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Date) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.SqlDateTypeAdapter$1 -> com.google.gson.internal.bind.k:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TimeTypeAdapter -> com.google.gson.internal.bind.TimeTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.text.DateFormat format -> format
    java.sql.Time read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.sql.Time) -> write
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TimeTypeAdapter$1 -> com.google.gson.internal.bind.l:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.m:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter NUMBER -> NUMBER
    com.google.gson.TypeAdapterFactory NUMBER_FACTORY -> NUMBER_FACTORY
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    com.google.gson.TypeAdapterFactory newEnumTypeHierarchyFactory() -> newEnumTypeHierarchyFactory
    com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.n:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.o:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.p:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.q:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.r:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.s:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.t:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.u:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.v:
    java.net.URI read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.w:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.x:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.y:
    java.util.BitSet read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.z:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$20$1 -> com.google.gson.internal.bind.aa:
    com.google.gson.TypeAdapter val$dateTypeAdapter -> a
    com.google.gson.internal.bind.TypeAdapters$20 this$0 -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.ab:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.ac:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.ad:
    com.google.gson.JsonElement read(com.google.gson.stream.JsonReader) -> a
    void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.ae:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.af:
    com.google.gson.reflect.TypeToken val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.ag:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.ah:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.ai:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.aj:
    java.lang.Class val$clazz -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.ak:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.al:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.am:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.an:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.ao:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.ap:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.aq:
    java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.ar:
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.as:
    java.util.Map nameToConstant -> a
    java.util.Map constantToName -> b
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> isAssignableFrom
    boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> typeEquals
    java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> buildUnexpectedTypeError
    boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map) -> matches
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    char[] NON_EXECUTE_PREFIX -> NON_EXECUTE_PREFIX
    java.lang.String TRUE -> TRUE
    java.lang.String FALSE -> FALSE
    com.google.gson.stream.StringPool stringPool -> stringPool
    java.io.Reader in -> in
    boolean lenient -> lenient
    char[] buffer -> buffer
    int pos -> pos
    int limit -> limit
    int bufferStartLine -> bufferStartLine
    int bufferStartColumn -> bufferStartColumn
    com.google.gson.stream.JsonScope[] stack -> stack
    int stackSize -> stackSize
    com.google.gson.stream.JsonToken token -> token
    java.lang.String name -> name
    java.lang.String value -> value
    int valuePos -> valuePos
    int valueLength -> valueLength
    boolean skipping -> skipping
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void beginArray() -> beginArray
    void endArray() -> endArray
    void beginObject() -> beginObject
    void endObject() -> endObject
    void expect(com.google.gson.stream.JsonToken) -> expect
    boolean hasNext() -> hasNext
    com.google.gson.stream.JsonToken peek() -> peek
    void consumeNonExecutePrefix() -> consumeNonExecutePrefix
    com.google.gson.stream.JsonToken advance() -> advance
    java.lang.String nextName() -> nextName
    java.lang.String nextString() -> nextString
    boolean nextBoolean() -> nextBoolean
    void nextNull() -> nextNull
    double nextDouble() -> nextDouble
    long nextLong() -> nextLong
    int nextInt() -> nextInt
    void close() -> close
    void skipValue() -> skipValue
    void push(com.google.gson.stream.JsonScope) -> push
    com.google.gson.stream.JsonToken nextInArray(boolean) -> nextInArray
    com.google.gson.stream.JsonToken nextInObject(boolean) -> nextInObject
    com.google.gson.stream.JsonToken objectValue() -> objectValue
    com.google.gson.stream.JsonToken nextValue() -> nextValue
    boolean fillBuffer(int) -> fillBuffer
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    int nextNonWhitespace(boolean) -> nextNonWhitespace
    void checkLenient() -> checkLenient
    void skipToEndOfLine() -> skipToEndOfLine
    boolean skipTo(java.lang.String) -> skipTo
    java.lang.String nextString(char) -> nextString
    java.lang.String nextLiteral(boolean) -> nextLiteral
    java.lang.String toString() -> toString
    char readEscapeCharacter() -> readEscapeCharacter
    com.google.gson.stream.JsonToken readLiteral() -> readLiteral
    com.google.gson.stream.JsonToken decodeLiteral() -> decodeLiteral
    com.google.gson.stream.JsonToken decodeNumber(char[],int,int) -> decodeNumber
    java.io.IOException syntaxError(java.lang.String) -> syntaxError
    java.lang.CharSequence getSnippet() -> getSnippet
    com.google.gson.stream.JsonToken access$000(com.google.gson.stream.JsonReader) -> access$000
    int access$100(com.google.gson.stream.JsonReader) -> access$100
    int access$200(com.google.gson.stream.JsonReader) -> access$200
    java.lang.String access$302(com.google.gson.stream.JsonReader,java.lang.String) -> access$302
    java.lang.String access$400(com.google.gson.stream.JsonReader) -> access$400
    java.lang.String access$402(com.google.gson.stream.JsonReader,java.lang.String) -> access$402
    com.google.gson.stream.JsonToken access$002(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> access$002
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.a:
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonReader$2 -> com.google.gson.stream.b:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.JsonScope -> com.google.gson.stream.c:
    com.google.gson.stream.JsonScope EMPTY_ARRAY -> a
    com.google.gson.stream.JsonScope NONEMPTY_ARRAY -> b
    com.google.gson.stream.JsonScope EMPTY_OBJECT -> c
    com.google.gson.stream.JsonScope DANGLING_NAME -> d
    com.google.gson.stream.JsonScope NONEMPTY_OBJECT -> e
    com.google.gson.stream.JsonScope EMPTY_DOCUMENT -> f
    com.google.gson.stream.JsonScope NONEMPTY_DOCUMENT -> g
    com.google.gson.stream.JsonScope CLOSED -> h
    com.google.gson.stream.JsonScope[] $VALUES -> i
    com.google.gson.stream.JsonScope[] values() -> values
    com.google.gson.stream.JsonScope valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> $VALUES
    com.google.gson.stream.JsonToken[] values() -> values
    com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.io.Writer out -> out
    java.util.List stack -> stack
    java.lang.String indent -> indent
    java.lang.String separator -> separator
    boolean lenient -> lenient
    boolean htmlSafe -> htmlSafe
    java.lang.String deferredName -> deferredName
    boolean serializeNulls -> serializeNulls
    void setIndent(java.lang.String) -> setIndent
    void setLenient(boolean) -> setLenient
    boolean isLenient() -> isLenient
    void setHtmlSafe(boolean) -> setHtmlSafe
    boolean isHtmlSafe() -> isHtmlSafe
    void setSerializeNulls(boolean) -> setSerializeNulls
    boolean getSerializeNulls() -> getSerializeNulls
    com.google.gson.stream.JsonWriter beginArray() -> beginArray
    com.google.gson.stream.JsonWriter endArray() -> endArray
    com.google.gson.stream.JsonWriter beginObject() -> beginObject
    com.google.gson.stream.JsonWriter endObject() -> endObject
    com.google.gson.stream.JsonWriter open(com.google.gson.stream.JsonScope,java.lang.String) -> open
    com.google.gson.stream.JsonWriter close(com.google.gson.stream.JsonScope,com.google.gson.stream.JsonScope,java.lang.String) -> close
    com.google.gson.stream.JsonScope peek() -> peek
    void replaceTop(com.google.gson.stream.JsonScope) -> replaceTop
    com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    void writeDeferredName() -> writeDeferredName
    com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    com.google.gson.stream.JsonWriter nullValue() -> nullValue
    com.google.gson.stream.JsonWriter value(boolean) -> value
    com.google.gson.stream.JsonWriter value(double) -> value
    com.google.gson.stream.JsonWriter value(long) -> value
    com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    void flush() -> flush
    void close() -> close
    void string(java.lang.String) -> string
    void newline() -> newline
    void beforeName() -> beforeName
    void beforeValue(boolean) -> beforeValue
com.google.gson.stream.JsonWriter$1 -> com.google.gson.stream.d:
    int[] $SwitchMap$com$google$gson$stream$JsonScope -> a
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    long serialVersionUID -> serialVersionUID
com.google.gson.stream.StringPool -> com.google.gson.stream.e:
    java.lang.String[] pool -> a
    java.lang.String get(char[],int,int) -> a
com.iflytek.cloud.DataDownloader -> com.iflytek.cloud.DataDownloader:
    void downloadData(com.iflytek.cloud.SpeechListener) -> downloadData
    boolean a_() -> a_
com.iflytek.cloud.DataUploader -> com.iflytek.cloud.DataUploader:
    void uploadData(com.iflytek.cloud.SpeechListener,java.lang.String,byte[]) -> uploadData
    boolean a_() -> a_
com.iflytek.cloud.ErrorCode -> com.iflytek.cloud.ErrorCode:
    int SUCCESS -> SUCCESS
    int MSP_ERROR_FAIL -> MSP_ERROR_FAIL
    int MSP_ERROR_EXCEPTION -> MSP_ERROR_EXCEPTION
    int MSP_ERROR_GENERAL -> MSP_ERROR_GENERAL
    int MSP_ERROR_OUT_OF_MEMORY -> MSP_ERROR_OUT_OF_MEMORY
    int MSP_ERROR_FILE_NOT_FOUND -> MSP_ERROR_FILE_NOT_FOUND
    int MSP_ERROR_NOT_SUPPORT -> MSP_ERROR_NOT_SUPPORT
    int MSP_ERROR_NOT_IMPLEMENT -> MSP_ERROR_NOT_IMPLEMENT
    int MSP_ERROR_ACCESS -> MSP_ERROR_ACCESS
    int MSP_ERROR_INVALID_PARA -> MSP_ERROR_INVALID_PARA
    int MSP_ERROR_INVALID_PARA_VALUE -> MSP_ERROR_INVALID_PARA_VALUE
    int MSP_ERROR_INVALID_HANDLE -> MSP_ERROR_INVALID_HANDLE
    int MSP_ERROR_INVALID_DATA -> MSP_ERROR_INVALID_DATA
    int MSP_ERROR_NO_LICENSE -> MSP_ERROR_NO_LICENSE
    int MSP_ERROR_NOT_INIT -> MSP_ERROR_NOT_INIT
    int MSP_ERROR_NULL_HANDLE -> MSP_ERROR_NULL_HANDLE
    int MSP_ERROR_OVERFLOW -> MSP_ERROR_OVERFLOW
    int MSP_ERROR_TIME_OUT -> MSP_ERROR_TIME_OUT
    int MSP_ERROR_OPEN_FILE -> MSP_ERROR_OPEN_FILE
    int MSP_ERROR_NOT_FOUND -> MSP_ERROR_NOT_FOUND
    int MSP_ERROR_NO_ENOUGH_BUFFER -> MSP_ERROR_NO_ENOUGH_BUFFER
    int MSP_ERROR_NO_DATA -> MSP_ERROR_NO_DATA
    int MSP_ERROR_NO_MORE_DATA -> MSP_ERROR_NO_MORE_DATA
    int MSP_ERROR_NO_RESPONSE_DATA -> MSP_ERROR_NO_RESPONSE_DATA
    int MSP_ERROR_ALREADY_EXIST -> MSP_ERROR_ALREADY_EXIST
    int MSP_ERROR_LOAD_MODULE -> MSP_ERROR_LOAD_MODULE
    int MSP_ERROR_BUSY -> MSP_ERROR_BUSY
    int MSP_ERROR_INVALID_CONFIG -> MSP_ERROR_INVALID_CONFIG
    int MSP_ERROR_VERSION_CHECK -> MSP_ERROR_VERSION_CHECK
    int MSP_ERROR_CANCELED -> MSP_ERROR_CANCELED
    int MSP_ERROR_INVALID_MEDIA_TYPE -> MSP_ERROR_INVALID_MEDIA_TYPE
    int MSP_ERROR_CONFIG_INITIALIZE -> MSP_ERROR_CONFIG_INITIALIZE
    int MSP_ERROR_CREATE_HANDLE -> MSP_ERROR_CREATE_HANDLE
    int MSP_ERROR_CODING_LIB_NOT_LOAD -> MSP_ERROR_CODING_LIB_NOT_LOAD
    int MSP_ERROR_USER_CANCELLED -> MSP_ERROR_USER_CANCELLED
    int MSP_ERROR_INVALID_OPERATION -> MSP_ERROR_INVALID_OPERATION
    int MSP_ERROR_MESSAGE_NOT_COMPLETE -> MSP_ERROR_MESSAGE_NOT_COMPLETE
    int MSP_ERROR_USER_ACTIVE_ABORT -> MSP_ERROR_USER_ACTIVE_ABORT
    int MSP_ERROR_BUSY_GRMBUILDING -> MSP_ERROR_BUSY_GRMBUILDING
    int MSP_ERROR_BUSY_LEXUPDATING -> MSP_ERROR_BUSY_LEXUPDATING
    int MSP_ERROR_NET_GENERAL -> MSP_ERROR_NET_GENERAL
    int MSP_ERROR_NET_OPENSOCK -> MSP_ERROR_NET_OPENSOCK
    int MSP_ERROR_NET_CONNECTSOCK -> MSP_ERROR_NET_CONNECTSOCK
    int MSP_ERROR_NET_ACCEPTSOCK -> MSP_ERROR_NET_ACCEPTSOCK
    int MSP_ERROR_NET_SENDSOCK -> MSP_ERROR_NET_SENDSOCK
    int MSP_ERROR_NET_RECVSOCK -> MSP_ERROR_NET_RECVSOCK
    int MSP_ERROR_NET_INVALIDSOCK -> MSP_ERROR_NET_INVALIDSOCK
    int MSP_ERROR_NET_BADADDRESS -> MSP_ERROR_NET_BADADDRESS
    int MSP_ERROR_NET_BINDSEQUENCE -> MSP_ERROR_NET_BINDSEQUENCE
    int MSP_ERROR_NET_NOTOPENSOCK -> MSP_ERROR_NET_NOTOPENSOCK
    int MSP_ERROR_NET_NOTBIND -> MSP_ERROR_NET_NOTBIND
    int MSP_ERROR_NET_NOTLISTEN -> MSP_ERROR_NET_NOTLISTEN
    int MSP_ERROR_NET_CONNECTCLOSE -> MSP_ERROR_NET_CONNECTCLOSE
    int MSP_ERROR_NET_NOTDGRAMSOCK -> MSP_ERROR_NET_NOTDGRAMSOCK
    int MSP_ERROR_NET_DNS -> MSP_ERROR_NET_DNS
    int MSP_ERROR_NET_INIT -> MSP_ERROR_NET_INIT
    int MSP_ERROR_MSG_GENERAL -> MSP_ERROR_MSG_GENERAL
    int MSP_ERROR_MSG_PARSE_ERROR -> MSP_ERROR_MSG_PARSE_ERROR
    int MSP_ERROR_MSG_BUILD_ERROR -> MSP_ERROR_MSG_BUILD_ERROR
    int MSP_ERROR_MSG_PARAM_ERROR -> MSP_ERROR_MSG_PARAM_ERROR
    int MSP_ERROR_MSG_CONTENT_EMPTY -> MSP_ERROR_MSG_CONTENT_EMPTY
    int MSP_ERROR_MSG_INVALID_CONTENT_TYPE -> MSP_ERROR_MSG_INVALID_CONTENT_TYPE
    int MSP_ERROR_MSG_INVALID_CONTENT_LENGTH -> MSP_ERROR_MSG_INVALID_CONTENT_LENGTH
    int MSP_ERROR_MSG_INVALID_CONTENT_ENCODE -> MSP_ERROR_MSG_INVALID_CONTENT_ENCODE
    int MSP_ERROR_MSG_INVALID_KEY -> MSP_ERROR_MSG_INVALID_KEY
    int MSP_ERROR_MSG_KEY_EMPTY -> MSP_ERROR_MSG_KEY_EMPTY
    int MSP_ERROR_MSG_SESSION_ID_EMPTY -> MSP_ERROR_MSG_SESSION_ID_EMPTY
    int MSP_ERROR_MSG_LOGIN_ID_EMPTY -> MSP_ERROR_MSG_LOGIN_ID_EMPTY
    int MSP_ERROR_MSG_SYNC_ID_EMPTY -> MSP_ERROR_MSG_SYNC_ID_EMPTY
    int MSP_ERROR_MSG_APP_ID_EMPTY -> MSP_ERROR_MSG_APP_ID_EMPTY
    int MSP_ERROR_MSG_EXTERN_ID_EMPTY -> MSP_ERROR_MSG_EXTERN_ID_EMPTY
    int MSP_ERROR_MSG_INVALID_CMD -> MSP_ERROR_MSG_INVALID_CMD
    int MSP_ERROR_MSG_INVALID_SUBJECT -> MSP_ERROR_MSG_INVALID_SUBJECT
    int MSP_ERROR_MSG_INVALID_VERSION -> MSP_ERROR_MSG_INVALID_VERSION
    int MSP_ERROR_MSG_NO_CMD -> MSP_ERROR_MSG_NO_CMD
    int MSP_ERROR_MSG_NO_SUBJECT -> MSP_ERROR_MSG_NO_SUBJECT
    int MSP_ERROR_MSG_NO_VERSION -> MSP_ERROR_MSG_NO_VERSION
    int MSP_ERROR_MSG_MSSP_EMPTY -> MSP_ERROR_MSG_MSSP_EMPTY
    int MSP_ERROR_MSG_NEW_RESPONSE -> MSP_ERROR_MSG_NEW_RESPONSE
    int MSP_ERROR_MSG_NEW_CONTENT -> MSP_ERROR_MSG_NEW_CONTENT
    int MSP_ERROR_MSG_INVALID_SESSION_ID -> MSP_ERROR_MSG_INVALID_SESSION_ID
    int MSP_ERROR_MSG_INVALID_CONTENT -> MSP_ERROR_MSG_INVALID_CONTENT
    int MSP_ERROR_DB_GENERAL -> MSP_ERROR_DB_GENERAL
    int MSP_ERROR_DB_EXCEPTION -> MSP_ERROR_DB_EXCEPTION
    int MSP_ERROR_DB_NO_RESULT -> MSP_ERROR_DB_NO_RESULT
    int MSP_ERROR_DB_INVALID_USER -> MSP_ERROR_DB_INVALID_USER
    int MSP_ERROR_DB_INVALID_PWD -> MSP_ERROR_DB_INVALID_PWD
    int MSP_ERROR_DB_CONNECT -> MSP_ERROR_DB_CONNECT
    int MSP_ERROR_DB_INVALID_SQL -> MSP_ERROR_DB_INVALID_SQL
    int MSP_ERROR_DB_INVALID_APPID -> MSP_ERROR_DB_INVALID_APPID
    int MSP_ERROR_RES_GENERAL -> MSP_ERROR_RES_GENERAL
    int MSP_ERROR_RES_LOAD -> MSP_ERROR_RES_LOAD
    int MSP_ERROR_RES_FREE -> MSP_ERROR_RES_FREE
    int MSP_ERROR_RES_MISSING -> MSP_ERROR_RES_MISSING
    int MSP_ERROR_RES_INVALID_NAME -> MSP_ERROR_RES_INVALID_NAME
    int MSP_ERROR_RES_INVALID_ID -> MSP_ERROR_RES_INVALID_ID
    int MSP_ERROR_RES_INVALID_IMG -> MSP_ERROR_RES_INVALID_IMG
    int MSP_ERROR_RES_WRITE -> MSP_ERROR_RES_WRITE
    int MSP_ERROR_RES_LEAK -> MSP_ERROR_RES_LEAK
    int MSP_ERROR_RES_HEAD -> MSP_ERROR_RES_HEAD
    int MSP_ERROR_RES_DATA -> MSP_ERROR_RES_DATA
    int MSP_ERROR_RES_SKIP -> MSP_ERROR_RES_SKIP
    int MSP_ERROR_TTS_GENERAL -> MSP_ERROR_TTS_GENERAL
    int MSP_ERROR_TTS_TEXTEND -> MSP_ERROR_TTS_TEXTEND
    int MSP_ERROR_TTS_TEXT_EMPTY -> MSP_ERROR_TTS_TEXT_EMPTY
    int MSP_ERROR_TTS_LTTS_ERROR -> MSP_ERROR_TTS_LTTS_ERROR
    int MSP_ERROR_REC_GENERAL -> MSP_ERROR_REC_GENERAL
    int MSP_ERROR_REC_INACTIVE -> MSP_ERROR_REC_INACTIVE
    int MSP_ERROR_REC_GRAMMAR_ERROR -> MSP_ERROR_REC_GRAMMAR_ERROR
    int MSP_ERROR_REC_NO_ACTIVE_GRAMMARS -> MSP_ERROR_REC_NO_ACTIVE_GRAMMARS
    int MSP_ERROR_REC_DUPLICATE_GRAMMAR -> MSP_ERROR_REC_DUPLICATE_GRAMMAR
    int MSP_ERROR_REC_INVALID_MEDIA_TYPE -> MSP_ERROR_REC_INVALID_MEDIA_TYPE
    int MSP_ERROR_REC_INVALID_LANGUAGE -> MSP_ERROR_REC_INVALID_LANGUAGE
    int MSP_ERROR_REC_URI_NOT_FOUND -> MSP_ERROR_REC_URI_NOT_FOUND
    int MSP_ERROR_REC_URI_TIMEOUT -> MSP_ERROR_REC_URI_TIMEOUT
    int MSP_ERROR_REC_URI_FETCH_ERROR -> MSP_ERROR_REC_URI_FETCH_ERROR
    int MSP_ERROR_EP_GENERAL -> MSP_ERROR_EP_GENERAL
    int MSP_ERROR_EP_NO_SESSION_NAME -> MSP_ERROR_EP_NO_SESSION_NAME
    int MSP_ERROR_EP_INACTIVE -> MSP_ERROR_EP_INACTIVE
    int MSP_ERROR_EP_INITIALIZED -> MSP_ERROR_EP_INITIALIZED
    int MSP_ERROR_TUV_GENERAL -> MSP_ERROR_TUV_GENERAL
    int MSP_ERROR_TUV_GETHIDPARAM -> MSP_ERROR_TUV_GETHIDPARAM
    int MSP_ERROR_TUV_TOKEN -> MSP_ERROR_TUV_TOKEN
    int MSP_ERROR_TUV_CFGFILE -> MSP_ERROR_TUV_CFGFILE
    int MSP_ERROR_TUV_RECV_CONTENT -> MSP_ERROR_TUV_RECV_CONTENT
    int MSP_ERROR_TUV_VERFAIL -> MSP_ERROR_TUV_VERFAIL
    int MSP_ERROR_LOGIN_SUCCESS -> MSP_ERROR_LOGIN_SUCCESS
    int MSP_ERROR_LOGIN_NO_LICENSE -> MSP_ERROR_LOGIN_NO_LICENSE
    int MSP_ERROR_LOGIN_SESSIONID_INVALID -> MSP_ERROR_LOGIN_SESSIONID_INVALID
    int MSP_ERROR_LOGIN_SESSIONID_ERROR -> MSP_ERROR_LOGIN_SESSIONID_ERROR
    int MSP_ERROR_LOGIN_UNLOGIN -> MSP_ERROR_LOGIN_UNLOGIN
    int MSP_ERROR_LOGIN_INVALID_USER -> MSP_ERROR_LOGIN_INVALID_USER
    int MSP_ERROR_LOGIN_INVALID_PWD -> MSP_ERROR_LOGIN_INVALID_PWD
    int MSP_ERROR_LOGIN_SYSTEM_ERROR -> MSP_ERROR_LOGIN_SYSTEM_ERROR
    int MSP_ERROR_AUTH_NO_LICENSE -> MSP_ERROR_AUTH_NO_LICENSE
    int MSP_ERROR_AUTH_NO_ENOUGH_LICENSE -> MSP_ERROR_AUTH_NO_ENOUGH_LICENSE
    int MSP_ERROR_AUTH_INVALID_LICENSE -> MSP_ERROR_AUTH_INVALID_LICENSE
    int MSP_ERROR_AUTH_LICENSE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_EXPIRED
    int MSP_ERROR_AUTH_NEED_MORE_DATA -> MSP_ERROR_AUTH_NEED_MORE_DATA
    int MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED -> MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED
    int MSP_ERROR_AUTH_INVALID_MACHINE_ID -> MSP_ERROR_AUTH_INVALID_MACHINE_ID
    int MSP_ERROR_AUTH_LOCAL_ASR_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_ASR_FORBIDDEN
    int MSP_ERROR_AUTH_LOCAL_TTS_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_TTS_FORBIDDEN
    int MSP_ERROR_AUTH_LOCAL_IVW_FORBIDDEN -> MSP_ERROR_AUTH_LOCAL_IVW_FORBIDDEN
    int MSP_ERROR_AUTH_ERROR_END -> MSP_ERROR_AUTH_ERROR_END
    int MSP_ERROR_HCR_GENERAL -> MSP_ERROR_HCR_GENERAL
    int MSP_ERROR_HCR_RESOURCE_NOT_EXIST -> MSP_ERROR_HCR_RESOURCE_NOT_EXIST
    int MSP_ERROR_HCR_CREATE -> MSP_ERROR_HCR_CREATE
    int MSP_ERROR_HCR_DESTROY -> MSP_ERROR_HCR_DESTROY
    int MSP_ERROR_HCR_START -> MSP_ERROR_HCR_START
    int MSP_ERROR_HCR_APPEND_STROKES -> MSP_ERROR_HCR_APPEND_STROKES
    int MSP_ERROR_HCR_INIT -> MSP_ERROR_HCR_INIT
    int MSP_ERROR_HCR_POINT_DECODE -> MSP_ERROR_HCR_POINT_DECODE
    int MSP_ERROR_HCR_DISPATCH -> MSP_ERROR_HCR_DISPATCH
    int MSP_ERROR_HCR_GETRESULT -> MSP_ERROR_HCR_GETRESULT
    int MSP_ERROR_HCR_RESOURCE -> MSP_ERROR_HCR_RESOURCE
    int MSP_ERROR_HTTP_BASE -> MSP_ERROR_HTTP_BASE
    int MSP_ERROR_ISV_NO_USER -> MSP_ERROR_ISV_NO_USER
    int MSP_ERROR_LUA_BASE -> MSP_ERROR_LUA_BASE
    int MSP_ERROR_LUA_YIELD -> MSP_ERROR_LUA_YIELD
    int MSP_ERROR_LUA_ERRRUN -> MSP_ERROR_LUA_ERRRUN
    int MSP_ERROR_LUA_ERRSYNTAX -> MSP_ERROR_LUA_ERRSYNTAX
    int MSP_ERROR_LUA_ERRMEM -> MSP_ERROR_LUA_ERRMEM
    int MSP_ERROR_LUA_ERRERR -> MSP_ERROR_LUA_ERRERR
    int MSP_ERROR_LUA_INVALID_PARAM -> MSP_ERROR_LUA_INVALID_PARAM
    int MSP_ERROR_MMP_BASE -> MSP_ERROR_MMP_BASE
    int MSP_ERROR_MMP_MYSQL_INITFAIL -> MSP_ERROR_MMP_MYSQL_INITFAIL
    int MSP_ERROR_MMP_REDIS_INITFAIL -> MSP_ERROR_MMP_REDIS_INITFAIL
    int MSP_ERROR_MMP_NETDSS_INITFAIL -> MSP_ERROR_MMP_NETDSS_INITFAIL
    int MSP_ERROR_MMP_TAIR_INITFAIL -> MSP_ERROR_MMP_TAIR_INITFAIL
    int MSP_ERROR_MMP_MAIL_SESSION_FAIL -> MSP_ERROR_MMP_MAIL_SESSION_FAIL
    int MSP_ERROR_MMP_MAIL_LOGON_FAIL -> MSP_ERROR_MMP_MAIL_LOGON_FAIL
    int MSP_ERROR_MMP_MAIL_USER_ILLEGAL -> MSP_ERROR_MMP_MAIL_USER_ILLEGAL
    int MSP_ERROR_MMP_MAIL_PWD_ERR -> MSP_ERROR_MMP_MAIL_PWD_ERR
    int MSP_ERROR_MMP_MAIL_SOCKET_ERR -> MSP_ERROR_MMP_MAIL_SOCKET_ERR
    int MSP_ERROR_MMP_MAIL_INIT_FAIL -> MSP_ERROR_MMP_MAIL_INIT_FAIL
    int MSP_ERROR_MMP_STORE_MNR_NO_INIT -> MSP_ERROR_MMP_STORE_MNR_NO_INIT
    int MSP_ERROR_MMP_STORE_MNR_POOL_FULL -> MSP_ERROR_MMP_STORE_MNR_POOL_FULL
    int MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL -> MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL
    int MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG -> MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG
    int MSP_ERROR_MMP_PARAM_NULL -> MSP_ERROR_MMP_PARAM_NULL
    int MSP_ERROR_MMP_ERR_MORE_TOTAL -> MSP_ERROR_MMP_ERR_MORE_TOTAL
    int MSP_ERROR_MMP_PROC_THRESHOLD -> MSP_ERROR_MMP_PROC_THRESHOLD
    int MSP_ERROR_MMP_SERVER_THRESHOLD -> MSP_ERROR_MMP_SERVER_THRESHOLD
    int MSP_ERROR_MMP_PYTHON_NO_EXIST -> MSP_ERROR_MMP_PYTHON_NO_EXIST
    int MSP_ERROR_MMP_PYTHON_IMPORT_FAILED -> MSP_ERROR_MMP_PYTHON_IMPORT_FAILED
    int MSP_ERROR_MMP_PYTHON_BAD_FUNC -> MSP_ERROR_MMP_PYTHON_BAD_FUNC
    int MSP_ERROR_MMP_DB_DATA_ILLEGAL -> MSP_ERROR_MMP_DB_DATA_ILLEGAL
    int MSP_ERROR_MMP_REDIS_NOT_CONN -> MSP_ERROR_MMP_REDIS_NOT_CONN
    int MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY -> MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY
    int MSP_ERROR_MMP_TAIR_CONNECT -> MSP_ERROR_MMP_TAIR_CONNECT
    int MSP_ERROR_MMP_PMC_SERVINFO_INVALID -> MSP_ERROR_MMP_PMC_SERVINFO_INVALID
    int MSP_ERROR_MMP_ALARM_GROUP_NULL -> MSP_ERROR_MMP_ALARM_GROUP_NULL
    int MSP_ERROR_MMP_ALARM_CONTXT_NULL -> MSP_ERROR_MMP_ALARM_CONTXT_NULL
    int MSP_ERROR_LMOD_BASE -> MSP_ERROR_LMOD_BASE
    int MSP_ERROR_LMOD_NOT_FOUND -> MSP_ERROR_LMOD_NOT_FOUND
    int MSP_ERROR_LMOD_UNEXPECTED_BIN -> MSP_ERROR_LMOD_UNEXPECTED_BIN
    int MSP_ERROR_LMOD_LOADCODE -> MSP_ERROR_LMOD_LOADCODE
    int MSP_ERROR_LMOD_PRECALL -> MSP_ERROR_LMOD_PRECALL
    int MSP_ERROR_LMOD_RUNTIME_EXCEPTION -> MSP_ERROR_LMOD_RUNTIME_EXCEPTION
    int MSP_ERROR_LMOD_ALREADY_LOADED -> MSP_ERROR_LMOD_ALREADY_LOADED
    int MSP_ERROR_BIZ_BASE -> MSP_ERROR_BIZ_BASE
    int MSP_ERROR_NGX_LOG_MORE_TOTEL_SIZE -> MSP_ERROR_NGX_LOG_MORE_TOTEL_SIZE
    int ERROR_NO_NETWORK -> ERROR_NO_NETWORK
    int ERROR_NETWORK_TIMEOUT -> ERROR_NETWORK_TIMEOUT
    int ERROR_NET_EXPECTION -> ERROR_NET_EXPECTION
    int ERROR_INVALID_RESULT -> ERROR_INVALID_RESULT
    int ERROR_NO_MATCH -> ERROR_NO_MATCH
    int ERROR_AUDIO_RECORD -> ERROR_AUDIO_RECORD
    int ERROR_NO_SPPECH -> ERROR_NO_SPPECH
    int ERROR_SPEECH_TIMEOUT -> ERROR_SPEECH_TIMEOUT
    int ERROR_EMPTY_UTTERANCE -> ERROR_EMPTY_UTTERANCE
    int ERROR_FILE_ACCESS -> ERROR_FILE_ACCESS
    int ERROR_PLAY_MEDIA -> ERROR_PLAY_MEDIA
    int ERROR_INVALID_PARAM -> ERROR_INVALID_PARAM
    int ERROR_TEXT_OVERFLOW -> ERROR_TEXT_OVERFLOW
    int ERROR_INVALID_DATA -> ERROR_INVALID_DATA
    int ERROR_LOGIN -> ERROR_LOGIN
    int ERROR_PERMISSION_DENIED -> ERROR_PERMISSION_DENIED
    int ERROR_INTERRUPT -> ERROR_INTERRUPT
    int ERROR_VERSION_LOWER -> ERROR_VERSION_LOWER
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_COMPONENT_NOT_INSTALLED -> ERROR_COMPONENT_NOT_INSTALLED
    int ERROR_ENGINE_NOT_SUPPORTED -> ERROR_ENGINE_NOT_SUPPORTED
    int ERROR_ENGINE_INIT_FAIL -> ERROR_ENGINE_INIT_FAIL
    int ERROR_ENGINE_CALL_FAIL -> ERROR_ENGINE_CALL_FAIL
    int ERROR_ENGINE_BUSY -> ERROR_ENGINE_BUSY
    int ERROR_LOCAL_NO_INIT -> ERROR_LOCAL_NO_INIT
    int ERROR_LOCAL_RESOURCE -> ERROR_LOCAL_RESOURCE
    int ERROR_LOCAL_ENGINE -> ERROR_LOCAL_ENGINE
    int ERROR_IVW_INTERRUPT -> ERROR_IVW_INTERRUPT
    int ERROR_ASR_CLIENT -> ERROR_ASR_CLIENT
    int ERROR_ASR_INVALID_PARA -> ERROR_ASR_INVALID_PARA
    int ERROR_ASR_INVALID_PARA_VALUE -> ERROR_ASR_INVALID_PARA_VALUE
    int ERROR_ASR_OUT_OF_MEMORY -> ERROR_ASR_OUT_OF_MEMORY
    int ERROR_ASR_CREATE_HANDLE_FAILED -> ERROR_ASR_CREATE_HANDLE_FAILED
    int ERROR_ASR_ENGINE_INIT_FAILED -> ERROR_ASR_ENGINE_INIT_FAILED
    int ERROR_ASR_ENGINE_STARTED -> ERROR_ASR_ENGINE_STARTED
    int ERROR_ASR_ENGINE_UNINIT -> ERROR_ASR_ENGINE_UNINIT
    int ERROR_ASR_SPEECH_TIMEOUT -> ERROR_ASR_SPEECH_TIMEOUT
    int ERROR_ASR_NO_RECOGNIZED_RESULT -> ERROR_ASR_NO_RECOGNIZED_RESULT
    int ERROR_ASR_INVALID_HANDLE -> ERROR_ASR_INVALID_HANDLE
    int ERROR_ASR_FILE_ACCESS -> ERROR_ASR_FILE_ACCESS
    int ERROR_AITALK_FALSE -> ERROR_AITALK_FALSE
    int ERROR_AITALK_PERMISSION_DENIED -> ERROR_AITALK_PERMISSION_DENIED
    int ERROR_AITALK_INVALID_PARA -> ERROR_AITALK_INVALID_PARA
    int ERROR_AITALK_BUFFER_OVERFLOW -> ERROR_AITALK_BUFFER_OVERFLOW
    int ERROR_AITALK_FAILED -> ERROR_AITALK_FAILED
    int ERROR_AITALK_NOT_SUPPORTED -> ERROR_AITALK_NOT_SUPPORTED
    int ERROR_AITALK_OUT_OF_MEMORY -> ERROR_AITALK_OUT_OF_MEMORY
    int ERROR_AITALK_INVALID_RESOURCE -> ERROR_AITALK_INVALID_RESOURCE
    int ERROR_AITALK_NOT_FOUND -> ERROR_AITALK_NOT_FOUND
    int ERROR_AITALK_INVALID_GRAMMAR -> ERROR_AITALK_INVALID_GRAMMAR
    int ERROR_AITALK_INVALID_CALL -> ERROR_AITALK_INVALID_CALL
    int ERROR_AITALK_SYNTAX_ERROR -> ERROR_AITALK_SYNTAX_ERROR
    int ERROR_AITALK_RESET -> ERROR_AITALK_RESET
    int ERROR_AITALK_ENDED -> ERROR_AITALK_ENDED
    int ERROR_AITALK_IDLE -> ERROR_AITALK_IDLE
    int ERROR_AITALK_CANNOT_SAVE_FILE -> ERROR_AITALK_CANNOT_SAVE_FILE
    int ERROR_AITALK_INVALID_GRAMMAR_NAME -> ERROR_AITALK_INVALID_GRAMMAR_NAME
    int ERROR_AITALK_BUFFER_EMPTY -> ERROR_AITALK_BUFFER_EMPTY
    int ERROR_AITALK_GET_RESULT -> ERROR_AITALK_GET_RESULT
    int ERROR_AITALK_REACT_OUT_TIME -> ERROR_AITALK_REACT_OUT_TIME
    int ERROR_AITALK_SPEECH_OUT_TIME -> ERROR_AITALK_SPEECH_OUT_TIME
    int ERROR_AITALK_AUDIO_CUT -> ERROR_AITALK_AUDIO_CUT
    int ERROR_AITALK_AUDIO_LOWER -> ERROR_AITALK_AUDIO_LOWER
    int ERROR_AITALK_INSUFFICIENT_PERMISSIONS -> ERROR_AITALK_INSUFFICIENT_PERMISSIONS
    int ERROR_AITALK_RESULT_ERROR -> ERROR_AITALK_RESULT_ERROR
    int ERROR_AITALK_SHORT_PAUSE -> ERROR_AITALK_SHORT_PAUSE
    int ERROR_AITALK_BUSY -> ERROR_AITALK_BUSY
    int ERROR_AITALK_GRM_NOT_UPDATE -> ERROR_AITALK_GRM_NOT_UPDATE
    int ERROR_AITALK_STARTED -> ERROR_AITALK_STARTED
    int ERROR_AITALK_STOPPED -> ERROR_AITALK_STOPPED
    int ERROR_AITALK_ALREADY_STARTED -> ERROR_AITALK_ALREADY_STARTED
    int ERROR_AITALK_ALREADY_STOPPED -> ERROR_AITALK_ALREADY_STOPPED
    int ERROR_AITALK_TOO_MANY_COMMAND -> ERROR_AITALK_TOO_MANY_COMMAND
    int ERROR_AITALK_WAIT -> ERROR_AITALK_WAIT
    int ERROR_AITALK_MAE_RIGHT -> ERROR_AITALK_MAE_RIGHT
    int ERROR_AITALK_MAE_WRONG -> ERROR_AITALK_MAE_WRONG
    int ERROR_AITALK_GRM_ERR -> ERROR_AITALK_GRM_ERR
    int ERROR_TTS_INVALID_PARA -> ERROR_TTS_INVALID_PARA
    int ERROR_TTS_INVALID_PARA_VALUE -> ERROR_TTS_INVALID_PARA_VALUE
    int ERROR_TTS_OUT_OF_MEMORY -> ERROR_TTS_OUT_OF_MEMORY
    int ERROR_TTS_INVALID_HANDLE -> ERROR_TTS_INVALID_HANDLE
    int ERROR_TTS_CREATE_HANDLE_FAILED -> ERROR_TTS_CREATE_HANDLE_FAILED
    int ERROR_TTS_INVALID_RESOURCE -> ERROR_TTS_INVALID_RESOURCE
    int ERROR_TTS_INVALID_VOICE_NAME -> ERROR_TTS_INVALID_VOICE_NAME
    int ERROR_TTS_ENGINE_UNINIT -> ERROR_TTS_ENGINE_UNINIT
    int ERROR_TTS_ENGINE_INIT_FAILED -> ERROR_TTS_ENGINE_INIT_FAILED
    int ERROR_TTS_ENGINE_BUSY -> ERROR_TTS_ENGINE_BUSY
    int ERROR_AISOUND_BASE -> ERROR_AISOUND_BASE
    int ERROR_AISOUND_UNIMPEMENTED -> ERROR_AISOUND_UNIMPEMENTED
    int ERROR_AISOUND_UNSUPPORTED -> ERROR_AISOUND_UNSUPPORTED
    int ERROR_AISOUND_INVALID_HANDLE -> ERROR_AISOUND_INVALID_HANDLE
    int ERROR_AISOUND_INVALID_PARA -> ERROR_AISOUND_INVALID_PARA
    int ERROR_AISOUND_INSUFFICIENT_HEAP -> ERROR_AISOUND_INSUFFICIENT_HEAP
    int ERROR_AISOUND_STATE_REFUSE -> ERROR_AISOUND_STATE_REFUSE
    int ERROR_AISOUND_INVALID_PARA_ID -> ERROR_AISOUND_INVALID_PARA_ID
    int ERROR_AISOUND_INVALID_PARA_VALUE -> ERROR_AISOUND_INVALID_PARA_VALUE
    int ERROR_AISOUND_RESOURCE -> ERROR_AISOUND_RESOURCE
    int ERROR_AISOUND_RESOURCE_READ -> ERROR_AISOUND_RESOURCE_READ
    int ERROR_AISOUND_LBENDIAN -> ERROR_AISOUND_LBENDIAN
    int ERROR_AISOUND_HEADFILE -> ERROR_AISOUND_HEADFILE
    int ERROR_AISOUND_BUFFER_OVERFLOW -> ERROR_AISOUND_BUFFER_OVERFLOW
    int ERROR_AISOUND_INVALID_ISAMPA -> ERROR_AISOUND_INVALID_ISAMPA
    int ERROR_AISOUND_INVALID_CSSML -> ERROR_AISOUND_INVALID_CSSML
com.iflytek.cloud.GrammarListener -> com.iflytek.cloud.GrammarListener:
    void onBuildFinish(java.lang.String,com.iflytek.cloud.SpeechError) -> onBuildFinish
com.iflytek.cloud.InitListener -> com.iflytek.cloud.InitListener:
    void onInit(int) -> onInit
com.iflytek.cloud.LexiconListener -> com.iflytek.cloud.LexiconListener:
    void onLexiconUpdated(java.lang.String,com.iflytek.cloud.SpeechError) -> onLexiconUpdated
com.iflytek.cloud.RecognizerListener -> com.iflytek.cloud.RecognizerListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.RecognizerResult -> com.iflytek.cloud.RecognizerResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.Setting -> com.iflytek.cloud.Setting:
    boolean a -> a
    boolean b -> b
    com.iflytek.cloud.Setting$LOG_LEVEL c -> c
    java.lang.String d -> d
    void saveLogFile(com.iflytek.cloud.Setting$LOG_LEVEL,java.lang.String) -> saveLogFile
    void showLogcat(boolean) -> showLogcat
    void setLocationEnable(boolean) -> setLocationEnable
com.iflytek.cloud.Setting$LOG_LEVEL -> com.iflytek.cloud.Setting$LOG_LEVEL:
    com.iflytek.cloud.Setting$LOG_LEVEL all -> all
    com.iflytek.cloud.Setting$LOG_LEVEL detail -> detail
    com.iflytek.cloud.Setting$LOG_LEVEL normal -> normal
    com.iflytek.cloud.Setting$LOG_LEVEL low -> low
    com.iflytek.cloud.Setting$LOG_LEVEL none -> none
    com.iflytek.cloud.Setting$LOG_LEVEL[] a -> a
    com.iflytek.cloud.Setting$LOG_LEVEL[] values() -> values
    com.iflytek.cloud.Setting$LOG_LEVEL valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.SpeechConstant -> com.iflytek.cloud.SpeechConstant:
    java.lang.String APPID -> APPID
    java.lang.String RESULT_TYPE -> RESULT_TYPE
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String ACCENT -> ACCENT
    java.lang.String DOMAIN -> DOMAIN
    java.lang.String VAD_BOS -> VAD_BOS
    java.lang.String VAD_EOS -> VAD_EOS
    java.lang.String SAMPLE_RATE -> SAMPLE_RATE
    java.lang.String PARAMS -> PARAMS
    java.lang.String WAP_PROXY -> WAP_PROXY
    java.lang.String NET_CHECK -> NET_CHECK
    java.lang.String NET_TIMEOUT -> NET_TIMEOUT
    java.lang.String KEY_SPEECH_TIMEOUT -> KEY_SPEECH_TIMEOUT
    java.lang.String ENGINE_MODE -> ENGINE_MODE
    java.lang.String ENGINE_TYPE -> ENGINE_TYPE
    java.lang.String AUDIO_SOURCE -> AUDIO_SOURCE
    java.lang.String ASR_SOURCE_PATH -> ASR_SOURCE_PATH
    java.lang.String LOCAL_GRAMMAR -> LOCAL_GRAMMAR
    java.lang.String CLOUD_GRAMMAR -> CLOUD_GRAMMAR
    java.lang.String GRAMMAR_TYPE -> GRAMMAR_TYPE
    java.lang.String GRAMMAR_CONTENT -> GRAMMAR_CONTENT
    java.lang.String LEXICON_CONTENT -> LEXICON_CONTENT
    java.lang.String LEXICON_NAME -> LEXICON_NAME
    java.lang.String GRAMMAR_LIST -> GRAMMAR_LIST
    java.lang.String LOCAL_GRAMMAR_PACKAGE -> LOCAL_GRAMMAR_PACKAGE
    java.lang.String MIXED_THRESHOLD -> MIXED_THRESHOLD
    java.lang.String GRAMMAR_NAME -> GRAMMAR_NAME
    java.lang.String LEXICON_TYPE -> LEXICON_TYPE
    java.lang.String ASR_NBEST -> ASR_NBEST
    java.lang.String ASR_WBEST -> ASR_WBEST
    java.lang.String ASR_PTT -> ASR_PTT
    java.lang.String SEARCH_AREA -> SEARCH_AREA
    java.lang.String NLP_VERSION -> NLP_VERSION
    java.lang.String TYPE_LOCAL -> TYPE_LOCAL
    java.lang.String TYPE_CLOUD -> TYPE_CLOUD
    java.lang.String TYPE_MIX -> TYPE_MIX
    java.lang.String TYPE_AUTO -> TYPE_AUTO
    java.lang.String ISV_SST -> ISV_SST
    java.lang.String ISV_PWDT -> ISV_PWDT
    java.lang.String ISV_VID -> ISV_VID
    java.lang.String ISV_RGN -> ISV_RGN
    java.lang.String ISV_PWD -> ISV_PWD
    java.lang.String ISV_AUDIOPATH -> ISV_AUDIOPATH
    java.lang.String ISV_CMD -> ISV_CMD
    java.lang.String ISV_AUTHID -> ISV_AUTHID
    java.lang.String ISV_INTERRUPT_ERROR -> ISV_INTERRUPT_ERROR
    java.lang.String IVW_SST -> IVW_SST
    java.lang.String IVW_WORD_PATH -> IVW_WORD_PATH
    java.lang.String IVW_THRESHOLD -> IVW_THRESHOLD
    java.lang.String KEEP_ALIVE -> KEEP_ALIVE
    java.lang.String IVW_SHOT_WORD -> IVW_SHOT_WORD
    java.lang.String VOICE_NAME -> VOICE_NAME
    java.lang.String TEXT -> TEXT
    java.lang.String NEXT_TEXT -> NEXT_TEXT
    java.lang.String LOCAL_SPEAKERS -> LOCAL_SPEAKERS
    java.lang.String AUDIO_FORMAT -> AUDIO_FORMAT
    java.lang.String SPEED -> SPEED
    java.lang.String PITCH -> PITCH
    java.lang.String VOLUME -> VOLUME
    java.lang.String BACKGROUND_SOUND -> BACKGROUND_SOUND
    java.lang.String TTS_BUFFER_TIME -> TTS_BUFFER_TIME
    java.lang.String TTS_DATA_NOTIFY -> TTS_DATA_NOTIFY
    java.lang.String TTS_INTERRUPT_ERROR -> TTS_INTERRUPT_ERROR
    java.lang.String TTS_SPELL_INFO -> TTS_SPELL_INFO
    java.lang.String STREAM_TYPE -> STREAM_TYPE
    java.lang.String KEY_REQUEST_FOCUS -> KEY_REQUEST_FOCUS
    java.lang.String TTS_AUDIO_PATH -> TTS_AUDIO_PATH
    java.lang.String DATA_TYPE -> DATA_TYPE
    java.lang.String SUBJECT -> SUBJECT
    java.lang.String ASR_AUDIO_PATH -> ASR_AUDIO_PATH
    java.lang.String ASR_INTERRUPT_ERROR -> ASR_INTERRUPT_ERROR
    java.lang.String ASR_NOMATCH_ERROR -> ASR_NOMATCH_ERROR
    java.lang.String ASR_NET_PERF -> ASR_NET_PERF
    java.lang.String ENG_ASR -> ENG_ASR
    java.lang.String ENG_TTS -> ENG_TTS
    java.lang.String ENG_NLU -> ENG_NLU
    java.lang.String ENG_IVW -> ENG_IVW
    java.lang.String ENG_IVP -> ENG_IVP
    java.lang.String MODE_MSC -> MODE_MSC
    java.lang.String MODE_PLUS -> MODE_PLUS
    java.lang.String MODE_AUTO -> MODE_AUTO
    java.lang.String TEXT_ENCODING -> TEXT_ENCODING
com.iflytek.cloud.SpeechError -> com.iflytek.cloud.SpeechError:
    long serialVersionUID -> serialVersionUID
    int a -> a
    java.lang.String b -> b
    java.lang.String toString() -> toString
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorDescription() -> getErrorDescription
    java.lang.String getHtmlDescription(boolean) -> getHtmlDescription
    java.lang.String getPlainDescription(boolean) -> getPlainDescription
com.iflytek.cloud.SpeechEvent -> com.iflytek.cloud.SpeechEvent:
    int EVENT_NETPREF -> EVENT_NETPREF
    int EVENT_SESSION_ID -> EVENT_SESSION_ID
    java.lang.String KEY_EVENT_SESSION_ID -> KEY_EVENT_SESSION_ID
    int EVENT_TTS_BUFFER -> EVENT_TTS_BUFFER
    java.lang.String KEY_EVENT_TTS_BUFFER -> KEY_EVENT_TTS_BUFFER
    int EVENT_IVW_RESULT -> EVENT_IVW_RESULT
    java.lang.String KEY_EVENT_IVW_RESULT -> KEY_EVENT_IVW_RESULT
    int EVENT_AUDIO_URL -> EVENT_AUDIO_URL
    java.lang.String KEY_EVENT_AUDIO_URL -> KEY_EVENT_AUDIO_URL
com.iflytek.cloud.SpeechListener -> com.iflytek.cloud.SpeechListener:
    void onEvent(int,android.os.Bundle) -> onEvent
    void onData(byte[]) -> onData
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.SpeechRecognizer -> com.iflytek.cloud.SpeechRecognizer:
    com.iflytek.cloud.SpeechRecognizer a -> a
    com.iflytek.cloud.d.a.a c -> c
    com.iflytek.speech.SpeechRecognizerAidl d -> d
    com.iflytek.cloud.SpeechRecognizer$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechRecognizer createRecognizer(android.content.Context,com.iflytek.cloud.InitListener) -> createRecognizer
    com.iflytek.cloud.SpeechRecognizer getRecognizer() -> getRecognizer
    void a(android.content.Context) -> a
    int buildGrammar(java.lang.String,java.lang.String,com.iflytek.cloud.GrammarListener) -> buildGrammar
    int updateLexicon(java.lang.String,java.lang.String,com.iflytek.cloud.LexiconListener) -> updateLexicon
    int startListening(com.iflytek.cloud.RecognizerListener) -> startListening
    int writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    boolean isListening() -> isListening
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.SpeechRecognizer) -> a
com.iflytek.cloud.SpeechRecognizer$a -> com.iflytek.cloud.SpeechRecognizer$a:
    com.iflytek.cloud.RecognizerListener b -> b
    com.iflytek.speech.RecognizerListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechRecognizer a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    android.os.Handler a(com.iflytek.cloud.SpeechRecognizer$a) -> a
    com.iflytek.cloud.RecognizerListener b(com.iflytek.cloud.SpeechRecognizer$a) -> b
    com.iflytek.speech.RecognizerListener c(com.iflytek.cloud.SpeechRecognizer$a) -> c
com.iflytek.cloud.SpeechSynthesizer -> com.iflytek.cloud.SpeechSynthesizer:
    com.iflytek.cloud.SpeechSynthesizer c -> c
    com.iflytek.cloud.d.a.e d -> d
    com.iflytek.speech.SpeechSynthesizerAidl e -> e
    com.iflytek.cloud.SpeechSynthesizer$a f -> f
    com.iflytek.cloud.InitListener a -> a
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechSynthesizer createSynthesizer(android.content.Context,com.iflytek.cloud.InitListener) -> createSynthesizer
    com.iflytek.cloud.SpeechSynthesizer getSynthesizer() -> getSynthesizer
    void a(android.content.Context) -> a
    int startSpeaking(java.lang.String,com.iflytek.cloud.SynthesizerListener) -> startSpeaking
    int synthesizeToUri(java.lang.String,java.lang.String,com.iflytek.cloud.SynthesizerListener) -> synthesizeToUri
    void pauseSpeaking() -> pauseSpeaking
    void resumeSpeaking() -> resumeSpeaking
    void stopSpeaking() -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.SpeechSynthesizer$a -> com.iflytek.cloud.SpeechSynthesizer$a:
    com.iflytek.cloud.SynthesizerListener b -> b
    com.iflytek.speech.SynthesizerListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechSynthesizer a -> a
    void onSpeakBegin() -> onSpeakBegin
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.cloud.SynthesizerListener a(com.iflytek.cloud.SpeechSynthesizer$a) -> a
    android.os.Handler b(com.iflytek.cloud.SpeechSynthesizer$a) -> b
    com.iflytek.speech.SynthesizerListener c(com.iflytek.cloud.SpeechSynthesizer$a) -> c
com.iflytek.cloud.SpeechUnderstander -> com.iflytek.cloud.SpeechUnderstander:
    java.lang.String SCENE -> SCENE
    com.iflytek.cloud.SpeechUnderstander a -> a
    com.iflytek.cloud.d.a.f c -> c
    com.iflytek.speech.SpeechUnderstanderAidl d -> d
    com.iflytek.cloud.SpeechUnderstander$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.SpeechUnderstander createUnderstander(android.content.Context,com.iflytek.cloud.InitListener) -> createUnderstander
    com.iflytek.cloud.SpeechUnderstander getUnderstander() -> getUnderstander
    void a(android.content.Context) -> a
    int startUnderstanding(com.iflytek.cloud.SpeechUnderstanderListener) -> startUnderstanding
    boolean isUnderstanding() -> isUnderstanding
    int writeAudio(byte[],int,int) -> writeAudio
    void stopUnderstanding() -> stopUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.SpeechUnderstander) -> a
com.iflytek.cloud.SpeechUnderstander$a -> com.iflytek.cloud.SpeechUnderstander$a:
    com.iflytek.cloud.SpeechUnderstanderListener b -> b
    com.iflytek.speech.SpeechUnderstanderListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.SpeechUnderstander a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.speech.SpeechUnderstanderListener a(com.iflytek.cloud.SpeechUnderstander$a) -> a
    android.os.Handler b(com.iflytek.cloud.SpeechUnderstander$a) -> b
    com.iflytek.cloud.SpeechUnderstanderListener c(com.iflytek.cloud.SpeechUnderstander$a) -> c
com.iflytek.cloud.SpeechUnderstanderListener -> com.iflytek.cloud.SpeechUnderstanderListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.SpeechUtility -> com.iflytek.cloud.SpeechUtility:
    com.iflytek.cloud.SpeechUtility c -> c
    java.util.ArrayList d -> d
    int e -> e
    android.content.Context f -> f
    boolean g -> g
    com.iflytek.cloud.SpeechUtility$a h -> h
    com.iflytek.cloud.a.c.d$a a -> a
    com.iflytek.cloud.SpeechUtility createUtility(android.content.Context,java.lang.String) -> createUtility
    com.iflytek.cloud.SpeechUtility getUtility() -> getUtility
    int b() -> b
    boolean c() -> c
    boolean destroy() -> destroy
    boolean a() -> a
    void d() -> d
    void e() -> e
    boolean checkServiceInstalled() -> checkServiceInstalled
    void a(java.lang.String) -> a
    com.iflytek.speech.SpeechComponent b(java.lang.String) -> b
    java.lang.String[] queryAvailableEngines() -> queryAvailableEngines
    int openEngineSettings(java.lang.String) -> openEngineSettings
    boolean c(java.lang.String) -> c
    java.lang.String getComponentUrl() -> getComponentUrl
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    com.iflytek.cloud.a.c.d$a getEngineMode() -> getEngineMode
    int getServiceVersion() -> getServiceVersion
com.iflytek.cloud.SpeechUtility$1 -> com.iflytek.cloud.SpeechUtility$1:
com.iflytek.cloud.SpeechUtility$a -> com.iflytek.cloud.SpeechUtility$a:
    com.iflytek.cloud.SpeechUtility a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.iflytek.cloud.SynthesizeToUriListener -> com.iflytek.cloud.SynthesizeToUriListener:
    void onBufferProgress(int) -> onBufferProgress
    void onSynthesizeCompleted(java.lang.String,com.iflytek.cloud.SpeechError) -> onSynthesizeCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.SynthesizerListener -> com.iflytek.cloud.SynthesizerListener:
    void onSpeakBegin() -> onSpeakBegin
    void onBufferProgress(int,int,int,java.lang.String) -> onBufferProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int,int,int) -> onSpeakProgress
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.TextUnderstander -> com.iflytek.cloud.TextUnderstander:
    com.iflytek.cloud.d.a.g a -> a
    com.iflytek.speech.TextUnderstanderAidl c -> c
    com.iflytek.cloud.TextUnderstander d -> d
    com.iflytek.cloud.TextUnderstander$a e -> e
    com.iflytek.cloud.InitListener f -> f
    android.os.Handler g -> g
    com.iflytek.cloud.TextUnderstander createTextUnderstander(android.content.Context,com.iflytek.cloud.InitListener) -> createTextUnderstander
    com.iflytek.cloud.TextUnderstander getTextUnderstander() -> getTextUnderstander
    void a(android.content.Context) -> a
    int understandText(java.lang.String,com.iflytek.cloud.TextUnderstanderListener) -> understandText
    boolean isUnderstanding() -> isUnderstanding
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
    com.iflytek.cloud.InitListener a(com.iflytek.cloud.TextUnderstander) -> a
com.iflytek.cloud.TextUnderstander$a -> com.iflytek.cloud.TextUnderstander$a:
    com.iflytek.cloud.TextUnderstanderListener b -> b
    com.iflytek.speech.TextUnderstanderListener c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.TextUnderstander a -> a
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    com.iflytek.speech.TextUnderstanderListener a(com.iflytek.cloud.TextUnderstander$a) -> a
    android.os.Handler b(com.iflytek.cloud.TextUnderstander$a) -> b
    com.iflytek.cloud.TextUnderstanderListener c(com.iflytek.cloud.TextUnderstander$a) -> c
com.iflytek.cloud.TextUnderstanderListener -> com.iflytek.cloud.TextUnderstanderListener:
    void onResult(com.iflytek.cloud.UnderstanderResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.iflytek.cloud.UnderstanderResult -> com.iflytek.cloud.UnderstanderResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.Version -> com.iflytek.cloud.Version:
    java.lang.String getVersion() -> getVersion
com.iflytek.cloud.VoiceWakeuper -> com.iflytek.cloud.VoiceWakeuper:
    com.iflytek.cloud.VoiceWakeuper a -> a
    com.iflytek.cloud.d.a.h c -> c
    com.iflytek.cloud.VoiceWakeuper createWakeuper(android.content.Context,com.iflytek.cloud.InitListener) -> createWakeuper
    com.iflytek.cloud.VoiceWakeuper getWakeuper() -> getWakeuper
    void startListening(com.iflytek.cloud.WakeuperListener) -> startListening
    int writeAudio(byte[],int,int) -> writeAudio
    void stopListening() -> stopListening
    boolean isListening() -> isListening
    void cancel() -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.WakeuperListener -> com.iflytek.cloud.WakeuperListener:
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.cloud.WakeuperResult) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.WakeuperResult -> com.iflytek.cloud.WakeuperResult:
    java.lang.String a -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.cloud.a -> com.iflytek.cloud.a:
    com.iflytek.cloud.RecognizerResult a(android.os.Parcel) -> a
    com.iflytek.cloud.RecognizerResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.a.a.a -> com.iflytek.cloud.a.a.a:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    byte[] e -> e
    com.iflytek.cloud.GrammarListener f -> f
    com.iflytek.cloud.LexiconListener g -> g
    java.lang.String h -> h
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.a.c.a) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a() -> a
    void a(byte[],int,int) -> a
    int b() -> b
    int c() -> c
    int b(java.lang.String) -> b
    boolean a(java.lang.String,java.lang.String) -> a
    java.lang.String c(java.lang.String) -> c
    int grammarCallBack(int,char[]) -> grammarCallBack
    int lexiconCallBack(int,char[]) -> lexiconCallBack
    java.lang.String d() -> d
    java.lang.String e() -> e
com.iflytek.cloud.a.a.b -> com.iflytek.cloud.a.a.b:
    com.iflytek.cloud.RecognizerListener a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    int f -> f
    boolean g -> g
    com.iflytek.cloud.a.a.a h -> h
    com.iflytek.cloud.c.f i -> i
    int j -> j
    int k -> k
    java.lang.String l -> l
    java.util.concurrent.ConcurrentLinkedQueue m -> m
    java.util.ArrayList n -> n
    com.iflytek.cloud.a.c.c o -> o
    int v -> v
    int a() -> a
    java.util.concurrent.ConcurrentLinkedQueue b() -> b
    void a(byte[],int) -> a
    void a(com.iflytek.cloud.RecognizerListener) -> a
    void c() -> c
    void a(android.os.Message) -> a
    void d() -> d
    void e() -> e
    void b(android.os.Message) -> b
    boolean a(boolean) -> a
    void w() -> w
    void b(boolean) -> b
    void f() -> f
    void a(com.iflytek.cloud.SpeechError) -> a
    void g() -> g
    void a(boolean,byte[]) -> a
    void h() -> h
    boolean i() -> i
    void stusCb(char[],int,int,int,byte[]) -> stusCb
    void rsltCb(char[],byte[],int,int) -> rsltCb
    void errCb(char[],int,byte[]) -> errCb
    void x() -> x
    void c(android.os.Message) -> c
    void a(byte[],boolean) -> a
    void a(byte[],int,int) -> a
    void b(com.iflytek.cloud.SpeechError) -> b
    void c(boolean) -> c
    com.iflytek.cloud.a.c.c j() -> j
    void k() -> k
    java.lang.String l() -> l
com.iflytek.cloud.a.b.a -> com.iflytek.cloud.a.b.a:
    com.iflytek.msc.MSCSessionInfo c -> c
    com.iflytek.msc.MSCSessionInfo d -> d
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.a.c.a) -> a
    void a(java.lang.String) -> a
    void a(byte[],int) -> a
    void a(byte[],int,int) -> a
    void a() -> a
com.iflytek.cloud.a.b.b -> com.iflytek.cloud.a.b.b:
    java.lang.String a -> a
    com.iflytek.cloud.WakeuperListener b -> b
    boolean c -> c
    int d -> d
    com.iflytek.cloud.a.b.a e -> e
    com.iflytek.cloud.c.f f -> f
    java.util.ArrayList g -> g
    boolean h -> h
    boolean i -> i
    int j -> j
    int a() -> a
    void a(com.iflytek.cloud.WakeuperListener) -> a
    void a(android.os.Message) -> a
    void b() -> b
    void d() -> d
    void b(android.os.Message) -> b
    int MsgProcCallBack(char[],int,int,int,byte[]) -> MsgProcCallBack
    boolean a(boolean) -> a
    void f() -> f
    void b(boolean) -> b
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(boolean,byte[],int) -> a
    void h() -> h
    boolean i() -> i
    void g() -> g
    void c(android.os.Message) -> c
    void a(byte[],boolean) -> a
    void a(byte[],int,int) -> a
    void b(com.iflytek.cloud.SpeechError) -> b
    void e() -> e
    void c(boolean) -> c
    void k() -> k
com.iflytek.cloud.a.c.a -> com.iflytek.cloud.a.c.a:
    int p -> p
    int q -> q
    android.content.Context r -> r
    com.iflytek.cloud.b.a a -> a
    boolean s -> s
    com.iflytek.cloud.a.c.a$b b -> b
    long t -> t
    int u -> u
    android.os.HandlerThread c -> c
    void a(android.os.Message) -> a
    void m() -> m
    void a() -> a
    void handleMessage(android.os.Message) -> handleMessage
    boolean i() -> i
    java.lang.String n() -> n
    java.lang.String o() -> o
    java.lang.String p() -> p
    int q() -> q
    void b(boolean) -> b
    void c(com.iflytek.cloud.SpeechError) -> c
    boolean r() -> r
    void a(com.iflytek.cloud.a.c.a$b) -> a
    com.iflytek.cloud.a.c.a$b s() -> s
    void a(com.iflytek.cloud.b.a) -> a
    void h() -> h
    com.iflytek.cloud.b.a t() -> t
    void c() -> c
    void a(int) -> a
    void d(android.os.Message) -> d
    void a(int,com.iflytek.cloud.a.c.a$a,boolean,int) -> a
    void a(android.os.Message,com.iflytek.cloud.a.c.a$a,boolean,int) -> a
    void u() -> u
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String v() -> v
com.iflytek.cloud.a.c.a$a -> com.iflytek.cloud.a.c.a$a:
    com.iflytek.cloud.a.c.a$a a -> a
    com.iflytek.cloud.a.c.a$a b -> b
    com.iflytek.cloud.a.c.a$a c -> c
    com.iflytek.cloud.a.c.a$a[] d -> d
    com.iflytek.cloud.a.c.a$a[] values() -> values
    com.iflytek.cloud.a.c.a$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.a.c.a$b -> com.iflytek.cloud.a.c.a$b:
    com.iflytek.cloud.a.c.a$b a -> a
    com.iflytek.cloud.a.c.a$b b -> b
    com.iflytek.cloud.a.c.a$b c -> c
    com.iflytek.cloud.a.c.a$b d -> d
    com.iflytek.cloud.a.c.a$b e -> e
    com.iflytek.cloud.a.c.a$b f -> f
    com.iflytek.cloud.a.c.a$b[] g -> g
    com.iflytek.cloud.a.c.a$b[] values() -> values
    com.iflytek.cloud.a.c.a$b valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.a.c.b -> com.iflytek.cloud.a.c.b:
    char[] a -> a
    java.lang.String b -> b
com.iflytek.cloud.a.c.c -> com.iflytek.cloud.a.c.c:
    org.json.JSONObject a -> a
    long b -> b
    long c -> c
    void a(com.iflytek.cloud.b.a) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,long,boolean) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a() -> a
com.iflytek.cloud.a.c.d -> com.iflytek.cloud.a.c.d:
    com.iflytek.cloud.b.a b -> b
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    boolean setParameter(com.iflytek.cloud.b.a) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    com.iflytek.cloud.a.c.d$a a(java.lang.String,com.iflytek.speech.ISpeechModule) -> a
com.iflytek.cloud.a.c.d$a -> com.iflytek.cloud.a.c.d$a:
    com.iflytek.cloud.a.c.d$a a -> a
    com.iflytek.cloud.a.c.d$a b -> b
    com.iflytek.cloud.a.c.d$a c -> c
    com.iflytek.cloud.a.c.d$a[] d -> d
    com.iflytek.cloud.a.c.d$a[] values() -> values
    com.iflytek.cloud.a.c.d$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.a.c.e -> com.iflytek.cloud.a.c.e:
    android.content.Context a -> a
    java.lang.Object c -> c
    com.iflytek.cloud.a.c.a d -> d
    android.os.HandlerThread e -> e
    android.os.HandlerThread a(java.lang.String) -> a
    void b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    void cancel(boolean) -> cancel
    int getSampleRate() -> getSampleRate
    boolean destroy() -> destroy
    boolean a_() -> a_
    void finalize() -> finalize
com.iflytek.cloud.a.c.e$a -> com.iflytek.cloud.a.c.e$a:
    com.iflytek.cloud.SpeechListener b -> b
    android.os.Handler c -> c
    com.iflytek.cloud.a.c.e a -> a
    void onData(byte[]) -> onData
    void onEvent(int,android.os.Bundle) -> onEvent
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    com.iflytek.cloud.SpeechListener a(com.iflytek.cloud.a.c.e$a) -> a
com.iflytek.cloud.a.c.f -> com.iflytek.cloud.a.c.f:
    com.iflytek.cloud.a.c.e$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.a.d.a -> com.iflytek.cloud.a.d.a:
    java.lang.Object a -> a
    com.iflytek.msc.MSCSessionInfo b -> b
    void a(android.content.Context,java.lang.String,java.lang.String,com.iflytek.cloud.a.c.a) -> a
    boolean a() -> a
    byte[] a(android.content.Context,java.lang.String,byte[],com.iflytek.cloud.a.c.a) -> a
    byte[] a(android.content.Context,com.iflytek.cloud.a.c.a) -> a
    byte[] a(android.content.Context,com.iflytek.cloud.a.c.a,java.lang.String) -> a
com.iflytek.cloud.a.d.b -> com.iflytek.cloud.a.d.b:
    com.iflytek.cloud.SpeechListener a -> a
    com.iflytek.cloud.a.d.a b -> b
    void a(com.iflytek.cloud.SpeechListener) -> a
    void a(com.iflytek.cloud.SpeechListener,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechListener,java.lang.String,byte[]) -> a
    com.iflytek.cloud.SpeechError a(java.lang.String,java.lang.String) -> a
    void a(android.os.Message) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.a.d.b$a -> com.iflytek.cloud.a.d.b$a:
    byte[] b -> b
    java.lang.String c -> c
    com.iflytek.cloud.a.d.b a -> a
    byte[] a() -> a
    java.lang.String b() -> b
com.iflytek.cloud.a.e.a -> com.iflytek.cloud.a.e.a:
    java.lang.String c -> c
    com.iflytek.cloud.a.e.i d -> d
    com.iflytek.cloud.a.e.b e -> e
    java.util.ArrayList f -> f
    int g -> g
    int h -> h
    java.lang.StringBuilder i -> i
    boolean j -> j
    int k -> k
    int a -> a
    int b -> b
    int l -> l
    void h() -> h
    void a(java.lang.String,com.iflytek.cloud.a.e.b) -> a
    java.lang.String o() -> o
    void a(android.os.Message) -> a
    void a() -> a
    void b() -> b
    void d() -> d
    void b(boolean) -> b
    void a(com.iflytek.cloud.SpeechError) -> a
    java.lang.String e() -> e
    void f() -> f
com.iflytek.cloud.a.e.b -> com.iflytek.cloud.a.e.b:
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.a.e.c -> com.iflytek.cloud.a.e.c:
    com.iflytek.cloud.c.c i -> i
    com.iflytek.cloud.c.b j -> j
    com.iflytek.cloud.SynthesizerListener k -> k
    com.iflytek.cloud.SynthesizerListener l -> l
    com.iflytek.cloud.a.e.c$a m -> m
    int n -> n
    boolean o -> o
    boolean f -> f
    java.lang.String g -> g
    com.iflytek.cloud.SpeechError h -> h
    com.iflytek.cloud.a.e.b p -> p
    com.iflytek.cloud.c.c$b q -> q
    android.os.Handler r -> r
    void a(java.lang.String,com.iflytek.cloud.b.a) -> a
    void e() -> e
    void a(com.iflytek.cloud.a.e.c$a) -> a
    void a(java.lang.String,com.iflytek.cloud.b.a,com.iflytek.cloud.SynthesizerListener,boolean) -> a
    void a(com.iflytek.cloud.SynthesizerListener) -> a
    com.iflytek.cloud.c.c$a f() -> f
    void g() -> g
    boolean h() -> h
    void j() -> j
    void i() -> i
    void cancel(boolean) -> cancel
    boolean destroy() -> destroy
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.b.a,com.iflytek.cloud.SynthesizerListener) -> a
    boolean d() -> d
    com.iflytek.cloud.SynthesizerListener a(com.iflytek.cloud.a.e.c) -> a
    android.os.Handler b(com.iflytek.cloud.a.e.c) -> b
    com.iflytek.cloud.c.b c(com.iflytek.cloud.a.e.c) -> c
    void d(com.iflytek.cloud.a.e.c) -> d
    com.iflytek.cloud.a.e.c$a e(com.iflytek.cloud.a.e.c) -> e
    com.iflytek.cloud.c.c f(com.iflytek.cloud.a.e.c) -> f
    com.iflytek.cloud.SynthesizerListener g(com.iflytek.cloud.a.e.c) -> g
    com.iflytek.cloud.a.c.a h(com.iflytek.cloud.a.e.c) -> h
    com.iflytek.cloud.a.c.a i(com.iflytek.cloud.a.e.c) -> i
    com.iflytek.cloud.a.c.a j(com.iflytek.cloud.a.e.c) -> j
    com.iflytek.cloud.a.c.a k(com.iflytek.cloud.a.e.c) -> k
    com.iflytek.cloud.a.c.a l(com.iflytek.cloud.a.e.c) -> l
    com.iflytek.cloud.a.c.a m(com.iflytek.cloud.a.e.c) -> m
com.iflytek.cloud.a.e.c$a -> com.iflytek.cloud.a.e.c$a:
    void a() -> a
com.iflytek.cloud.a.e.d -> com.iflytek.cloud.a.e.d:
    com.iflytek.cloud.a.e.c a -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.a.e.e -> com.iflytek.cloud.a.e.e:
    com.iflytek.cloud.a.e.c a -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void a(com.iflytek.cloud.SpeechError) -> a
    void c() -> c
com.iflytek.cloud.a.e.f -> com.iflytek.cloud.a.e.f:
    com.iflytek.cloud.a.e.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.a.e.g -> com.iflytek.cloud.a.e.g:
    com.iflytek.cloud.a.e.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.a.e.h -> com.iflytek.cloud.a.e.h:
    android.os.Handler a -> a
    java.lang.String b -> b
    com.iflytek.cloud.a.e.c c -> c
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(java.util.ArrayList,int,int,int,java.lang.String) -> a
com.iflytek.cloud.a.e.i -> com.iflytek.cloud.a.e.i:
    com.iflytek.msc.MSCSessionInfo c -> c
    int a(android.content.Context,java.lang.String,com.iflytek.cloud.a.c.a) -> a
    void a(java.lang.String) -> a
    void a(byte[]) -> a
    byte[] a() -> a
    int b() -> b
    java.lang.String c() -> c
    int b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    boolean d() -> d
    java.lang.String e() -> e
com.iflytek.cloud.a.f.a -> com.iflytek.cloud.a.f.a:
    java.lang.String[][] a -> a
    java.lang.String[][] b -> b
    com.iflytek.cloud.b.a c -> c
    boolean d -> d
    com.iflytek.cloud.b.a a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(com.iflytek.cloud.b.a,android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.a.f.a.a -> com.iflytek.cloud.a.f.a.a:
    java.lang.String a -> a
    boolean b -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.iflytek.cloud.a.f.a.b -> com.iflytek.cloud.a.f.a.b:
    java.util.HashMap a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
com.iflytek.cloud.a.f.b -> com.iflytek.cloud.a.f.b:
    android.content.SharedPreferences b -> b
    android.content.Context c -> c
    com.iflytek.cloud.a.f.b a -> a
    boolean d -> d
    long e -> e
    com.iflytek.cloud.a.f.b c(android.content.Context) -> c
    com.iflytek.cloud.a.f.b a(android.content.Context) -> a
    void a(java.lang.String,long) -> a
    void a(android.location.Location) -> a
    float a(java.lang.String) -> a
    boolean b(android.content.Context) -> b
com.iflytek.cloud.a.f.c -> com.iflytek.cloud.a.f.c:
    android.util.DisplayMetrics a -> a
    java.lang.String a(long) -> a
com.iflytek.cloud.a.f.d -> com.iflytek.cloud.a.f.d:
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.a.f.e -> com.iflytek.cloud.a.f.e:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    void a(java.lang.String) -> a
    boolean a(android.os.MemoryFile,long,java.lang.String) -> a
    void a(java.util.concurrent.ConcurrentLinkedQueue,java.lang.String) -> a
    void b(java.lang.String) -> b
com.iflytek.cloud.a.f.f -> com.iflytek.cloud.a.f.f:
    int a -> a
    int b -> b
    boolean a(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,java.lang.Boolean,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.cloud.a.f.g -> com.iflytek.cloud.a.f.g:
    int a -> a
    boolean a(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> a
    boolean b(android.content.Context,android.media.AudioManager$OnAudioFocusChangeListener) -> b
    void a(android.view.View) -> a
com.iflytek.cloud.a.f.h -> com.iflytek.cloud.a.f.h:
    void a(android.content.Context) -> a
    java.lang.String a(android.net.NetworkInfo) -> a
    java.lang.String b(android.net.NetworkInfo) -> b
com.iflytek.cloud.b -> com.iflytek.cloud.b:
    com.iflytek.cloud.SpeechRecognizer a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.b.a -> com.iflytek.cloud.b.a:
    java.util.HashMap a -> a
    void a() -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.iflytek.cloud.b.a b() -> b
    void a(java.lang.String,java.lang.String) -> a
    void a(com.iflytek.cloud.b.a,java.lang.String) -> a
    java.util.HashMap c() -> c
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.Boolean c(java.lang.String) -> c
    java.lang.String d(java.lang.String) -> d
    java.lang.String toString() -> toString
    java.lang.String e(java.lang.String) -> e
    java.lang.String b(java.lang.String,java.lang.String) -> b
    int a(java.lang.String,int) -> a
    boolean a(java.lang.String,boolean) -> a
    void a(java.lang.String[][]) -> a
    void d() -> d
    java.lang.String f(java.lang.String) -> f
    boolean g(java.lang.String) -> g
    java.lang.Object clone() -> clone
com.iflytek.cloud.b.b -> com.iflytek.cloud.b.b:
    java.lang.String[][] a -> a
com.iflytek.cloud.b.c -> com.iflytek.cloud.b.c:
    java.lang.String a -> a
    java.lang.String a(android.content.Context,com.iflytek.cloud.a.c.a) -> a
    void a(com.iflytek.cloud.b.a) -> a
    void a(android.content.Context,com.iflytek.cloud.b.a) -> a
    java.lang.String a(android.content.Context,java.lang.String,com.iflytek.cloud.a.c.a) -> a
    java.lang.String b(android.content.Context,java.lang.String,com.iflytek.cloud.a.c.a) -> b
    java.lang.String b(android.content.Context,com.iflytek.cloud.a.c.a) -> b
    java.lang.String c(android.content.Context,com.iflytek.cloud.a.c.a) -> c
    java.lang.String a(android.content.Context) -> a
    boolean a(java.lang.String) -> a
com.iflytek.cloud.c -> com.iflytek.cloud.c:
    com.iflytek.cloud.GrammarListener a -> a
    com.iflytek.cloud.SpeechRecognizer b -> b
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.cloud.c.a -> com.iflytek.cloud.c.a:
    int a -> a
    int b -> b
    int c -> c
    boolean d -> d
    int e -> e
    short f -> f
    int g -> g
    int h -> h
    byte[] i -> i
    java.io.RandomAccessFile j -> j
    java.lang.String k -> k
    com.iflytek.cloud.c.f$a l -> l
    void a(short,int,int) -> a
    int b() -> b
    void a() -> a
    void a(com.iflytek.cloud.c.f$a) -> a
    void run() -> run
    void finalize() -> finalize
    void c() -> c
com.iflytek.cloud.c.b -> com.iflytek.cloud.c.b:
    int a -> a
    java.util.ArrayList b -> b
    android.content.Context c -> c
    int d -> d
    int e -> e
    android.os.MemoryFile f -> f
    long g -> g
    int h -> h
    com.iflytek.cloud.c.b$a i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    byte[] l -> l
    int m -> m
    int n -> n
    void a(java.lang.String) -> a
    int a() -> a
    void a(java.util.ArrayList,int,int,int) -> a
    boolean b() -> b
    boolean a(int) -> a
    void a(byte[]) -> a
    java.lang.String i() -> i
    void c() -> c
    int d() -> d
    com.iflytek.cloud.c.b$a e() -> e
    boolean f() -> f
    boolean g() -> g
    void a(android.media.AudioTrack,int) -> a
    void b(android.media.AudioTrack,int) -> b
    void h() -> h
    void finalize() -> finalize
    void b(int) -> b
com.iflytek.cloud.c.b$a -> com.iflytek.cloud.c.b$a:
    long a -> a
    long b -> b
    int c -> c
    int d -> d
    com.iflytek.cloud.c.b e -> e
com.iflytek.cloud.c.c -> com.iflytek.cloud.c.c:
    android.media.AudioTrack b -> b
    com.iflytek.cloud.c.b c -> c
    android.content.Context d -> d
    com.iflytek.cloud.c.c$c e -> e
    com.iflytek.cloud.c.c$b f -> f
    com.iflytek.cloud.c.c$a g -> g
    int h -> h
    boolean i -> i
    int j -> j
    boolean k -> k
    boolean l -> l
    java.lang.Object m -> m
    android.media.AudioManager$OnAudioFocusChangeListener a -> a
    int n -> n
    android.os.Handler o -> o
    com.iflytek.cloud.c.c$a a() -> a
    void f() -> f
    void b() -> b
    void g() -> g
    boolean c() -> c
    boolean a(com.iflytek.cloud.c.b,com.iflytek.cloud.c.c$b) -> a
    boolean d() -> d
    void e() -> e
    boolean a(com.iflytek.cloud.c.c,boolean) -> a
    com.iflytek.cloud.c.c$b a(com.iflytek.cloud.c.c) -> a
    boolean b(com.iflytek.cloud.c.c) -> b
    boolean c(com.iflytek.cloud.c.c) -> c
    android.content.Context d(com.iflytek.cloud.c.c) -> d
    boolean e(com.iflytek.cloud.c.c) -> e
    com.iflytek.cloud.c.b f(com.iflytek.cloud.c.c) -> f
    com.iflytek.cloud.c.c$a g(com.iflytek.cloud.c.c) -> g
    com.iflytek.cloud.c.c$a a(com.iflytek.cloud.c.c,com.iflytek.cloud.c.c$a) -> a
    void h(com.iflytek.cloud.c.c) -> h
    android.os.Handler i(com.iflytek.cloud.c.c) -> i
    int a(com.iflytek.cloud.c.c,int) -> a
    android.media.AudioTrack j(com.iflytek.cloud.c.c) -> j
    int k(com.iflytek.cloud.c.c) -> k
    android.media.AudioTrack a(com.iflytek.cloud.c.c,android.media.AudioTrack) -> a
    com.iflytek.cloud.c.c$c a(com.iflytek.cloud.c.c,com.iflytek.cloud.c.c$c) -> a
    com.iflytek.cloud.c.c$b a(com.iflytek.cloud.c.c,com.iflytek.cloud.c.c$b) -> a
    int l(com.iflytek.cloud.c.c) -> l
com.iflytek.cloud.c.c$a -> com.iflytek.cloud.c.c$a:
    com.iflytek.cloud.c.c$a a -> a
    com.iflytek.cloud.c.c$a b -> b
    com.iflytek.cloud.c.c$a c -> c
    com.iflytek.cloud.c.c$a d -> d
    com.iflytek.cloud.c.c$a e -> e
    com.iflytek.cloud.c.c$a[] f -> f
    com.iflytek.cloud.c.c$a[] values() -> values
    com.iflytek.cloud.c.c$a valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.c.c$b -> com.iflytek.cloud.c.c$b:
    void a(com.iflytek.cloud.SpeechError) -> a
    void a() -> a
    void b() -> b
    void a(int,int,int) -> a
    void c() -> c
com.iflytek.cloud.c.c$c -> com.iflytek.cloud.c.c$c:
    com.iflytek.cloud.c.c a -> a
    void run() -> run
com.iflytek.cloud.c.d -> com.iflytek.cloud.c.d:
    com.iflytek.cloud.c.c a -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.iflytek.cloud.c.e -> com.iflytek.cloud.c.e:
    com.iflytek.cloud.c.c a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.c.f -> com.iflytek.cloud.c.f:
    short a -> a
    byte[] b -> b
    android.media.AudioRecord c -> c
    com.iflytek.cloud.c.f$a d -> d
    com.iflytek.cloud.c.f$a e -> e
    boolean f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    void a(short,int,int) -> a
    int b() -> b
    void a() -> a
    void a(com.iflytek.cloud.c.f$a) -> a
    void run() -> run
    void finalize() -> finalize
    void c() -> c
com.iflytek.cloud.c.f$a -> com.iflytek.cloud.c.f$a:
    void a(byte[],int,int) -> a
    void b(com.iflytek.cloud.SpeechError) -> b
    void c(boolean) -> c
    void k() -> k
com.iflytek.cloud.d -> com.iflytek.cloud.d:
    com.iflytek.cloud.LexiconListener a -> a
    com.iflytek.cloud.SpeechRecognizer b -> b
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.cloud.d.a.a -> com.iflytek.cloud.d.a.a:
    boolean f -> f
    void b(java.lang.String) -> b
    int a(com.iflytek.cloud.RecognizerListener) -> a
    int a(byte[],int,int) -> a
    void e() -> e
    void cancel(boolean) -> cancel
    boolean f() -> f
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.GrammarListener) -> a
    int a(java.lang.String,java.lang.String,com.iflytek.cloud.LexiconListener) -> a
    com.iflytek.cloud.a.c.a a(com.iflytek.cloud.d.a.a) -> a
    com.iflytek.cloud.a.c.a b(com.iflytek.cloud.d.a.a) -> b
    android.content.Context c(com.iflytek.cloud.d.a.a) -> c
    boolean d(com.iflytek.cloud.d.a.a) -> d
com.iflytek.cloud.d.a.a$a -> com.iflytek.cloud.d.a.a$a:
    com.iflytek.cloud.RecognizerListener b -> b
    boolean c -> c
    android.os.Handler d -> d
    com.iflytek.cloud.d.a.a a -> a
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void a() -> a
    com.iflytek.cloud.RecognizerListener a(com.iflytek.cloud.d.a.a$a) -> a
    boolean b(com.iflytek.cloud.d.a.a$a) -> b
    boolean a(com.iflytek.cloud.d.a.a$a,boolean) -> a
com.iflytek.cloud.d.a.b -> com.iflytek.cloud.d.a.b:
    com.iflytek.cloud.GrammarListener a -> a
    com.iflytek.cloud.d.a.a b -> b
    void onEvent(int,android.os.Bundle) -> onEvent
    void onData(byte[]) -> onData
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.d.a.c -> com.iflytek.cloud.d.a.c:
    com.iflytek.cloud.LexiconListener a -> a
    com.iflytek.cloud.d.a.a b -> b
    void onEvent(int,android.os.Bundle) -> onEvent
    void onData(byte[]) -> onData
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
com.iflytek.cloud.d.a.d -> com.iflytek.cloud.d.a.d:
    com.iflytek.cloud.d.a.a$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.d.a.e -> com.iflytek.cloud.d.a.e:
    android.content.Context f -> f
    com.iflytek.cloud.a.e.c g -> g
    com.iflytek.cloud.a.e.c h -> h
    int a(java.lang.String,com.iflytek.cloud.SynthesizerListener) -> a
    void a(java.lang.String,com.iflytek.cloud.SynthesizerListener,java.lang.String) -> a
    void a() -> a
    void a(java.lang.String,java.lang.String,com.iflytek.cloud.SynthesizerListener) -> a
    void e() -> e
    void f() -> f
    boolean g() -> g
    void a(boolean) -> a
    boolean destroy() -> destroy
com.iflytek.cloud.d.a.f -> com.iflytek.cloud.d.a.f:
    com.iflytek.cloud.d.a.f a -> a
    com.iflytek.cloud.d.a.a b -> b
    int a(com.iflytek.cloud.SpeechUnderstanderListener) -> a
    boolean a() -> a
    int a(byte[],int,int) -> a
    void b() -> b
    void a(boolean) -> a
    boolean a(com.iflytek.cloud.b.a) -> a
    boolean c() -> c
com.iflytek.cloud.d.a.f$a -> com.iflytek.cloud.d.a.f$a:
    com.iflytek.cloud.SpeechUnderstanderListener b -> b
    com.iflytek.cloud.d.a.f a -> a
    void onEndOfSpeech() -> onEndOfSpeech
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
com.iflytek.cloud.d.a.g -> com.iflytek.cloud.d.a.g:
    int a(java.lang.String,com.iflytek.cloud.TextUnderstanderListener) -> a
    boolean e() -> e
    void cancel(boolean) -> cancel
    boolean setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destroy() -> destroy
com.iflytek.cloud.d.a.g$a -> com.iflytek.cloud.d.a.g$a:
    com.iflytek.cloud.TextUnderstanderListener b -> b
    com.iflytek.cloud.d.a.g a -> a
    void onData(byte[]) -> onData
    void onCompleted(com.iflytek.cloud.SpeechError) -> onCompleted
    void onEvent(int,android.os.Bundle) -> onEvent
com.iflytek.cloud.d.a.h -> com.iflytek.cloud.d.a.h:
    boolean f -> f
    void a(com.iflytek.cloud.WakeuperListener) -> a
    int a(byte[],int,int) -> a
    void e() -> e
    void cancel(boolean) -> cancel
    boolean f() -> f
    android.content.Context a(com.iflytek.cloud.d.a.h) -> a
    boolean b(com.iflytek.cloud.d.a.h) -> b
com.iflytek.cloud.d.a.h$a -> com.iflytek.cloud.d.a.h$a:
    com.iflytek.cloud.WakeuperListener b -> b
    android.os.Handler c -> c
    com.iflytek.cloud.d.a.h a -> a
    void onResult(com.iflytek.cloud.WakeuperResult) -> onResult
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void a() -> a
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
    com.iflytek.cloud.WakeuperListener a(com.iflytek.cloud.d.a.h$a) -> a
com.iflytek.cloud.d.a.i -> com.iflytek.cloud.d.a.i:
    com.iflytek.cloud.d.a.h$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.e -> com.iflytek.cloud.e:
    com.iflytek.cloud.SpeechRecognizer a -> a
    com.iflytek.cloud.SpeechRecognizer$a b -> b
    void onVolumeChanged(int) -> onVolumeChanged
    void onError(int) -> onError
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.f -> com.iflytek.cloud.f:
    com.iflytek.cloud.SpeechRecognizer$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.g -> com.iflytek.cloud.g:
    com.iflytek.cloud.SpeechSynthesizer a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.h -> com.iflytek.cloud.h:
    com.iflytek.cloud.SpeechSynthesizer a -> a
    com.iflytek.cloud.SpeechSynthesizer$a b -> b
    void onSpeakResumed() -> onSpeakResumed
    void onSpeakProgress(int) -> onSpeakProgress
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakBegin() -> onSpeakBegin
    void onCompleted(int) -> onCompleted
    void onBufferProgress(int) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.i -> com.iflytek.cloud.i:
    com.iflytek.cloud.SpeechSynthesizer$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.j -> com.iflytek.cloud.j:
    com.iflytek.cloud.SpeechUnderstander a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.k -> com.iflytek.cloud.k:
    com.iflytek.cloud.SpeechUnderstander a -> a
    com.iflytek.cloud.SpeechUnderstander$a b -> b
    void onVolumeChanged(int) -> onVolumeChanged
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEndOfSpeech() -> onEndOfSpeech
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.l -> com.iflytek.cloud.l:
    com.iflytek.cloud.SpeechUnderstander$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.m -> com.iflytek.cloud.m:
    com.iflytek.cloud.TextUnderstander a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.n -> com.iflytek.cloud.n:
    com.iflytek.cloud.TextUnderstander a -> a
    com.iflytek.cloud.TextUnderstander$a b -> b
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.cloud.o -> com.iflytek.cloud.o:
    com.iflytek.cloud.TextUnderstander$a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.iflytek.cloud.p -> com.iflytek.cloud.p:
    com.iflytek.cloud.UnderstanderResult a(android.os.Parcel) -> a
    com.iflytek.cloud.UnderstanderResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.q -> com.iflytek.cloud.q:
    com.iflytek.cloud.WakeuperResult a(android.os.Parcel) -> a
    com.iflytek.cloud.WakeuperResult[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.resource.Resource -> com.iflytek.cloud.resource.Resource:
    java.util.Locale a -> a
    int TEXT_POWER_LINK -> TEXT_POWER_LINK
    int TEXT_HELP_LINK -> TEXT_HELP_LINK
    int TEXT_KNOW -> TEXT_KNOW
    int TEXT_DETAIL -> TEXT_DETAIL
    int TEXT_CANCEL -> TEXT_CANCEL
    int TEXT_STOP -> TEXT_STOP
    int TEXT_SET -> TEXT_SET
    int TEXT_MORE -> TEXT_MORE
    int TEXT_RETRY -> TEXT_RETRY
    int TEXT_AGAIN -> TEXT_AGAIN
    int TEXT_PLAYBACK -> TEXT_PLAYBACK
    int TEXT_RETRIEVE -> TEXT_RETRIEVE
    int TEXT_HELP_SMS -> TEXT_HELP_SMS
    int TEXT_HELP_RECO -> TEXT_HELP_RECO
    int TITLE_HELP -> TITLE_HELP
    int TITLE_CONNECTING -> TITLE_CONNECTING
    int TITLE_RECORDING -> TITLE_RECORDING
    int TITLE_RECOGNIZE_WAITING -> TITLE_RECOGNIZE_WAITING
    int TITLE_AUDIO_REQUEST -> TITLE_AUDIO_REQUEST
    int TITLE_ERROR -> TITLE_ERROR
    int TITLE_AUDIO_PLAYING -> TITLE_AUDIO_PLAYING
    int TITLE_DATA_UPLOAD -> TITLE_DATA_UPLOAD
    int TAG_ERROR_CODE -> TAG_ERROR_CODE
    int TAG_ERROR_UNKNOWN -> TAG_ERROR_UNKNOWN
    void setUILanguage(java.util.Locale) -> setUILanguage
    java.lang.String getLanguage() -> getLanguage
    boolean matchLanguage(java.lang.String) -> matchLanguage
    boolean a(java.lang.String) -> a
    void setTitle(int,java.lang.String) -> setTitle
    java.lang.String getTitle(int) -> getTitle
    java.lang.String getText(int) -> getText
    void setText(int,java.lang.String) -> setText
    java.lang.String getErrorDescription(int) -> getErrorDescription
    void setErrorDescription(int,java.lang.String) -> setErrorDescription
    java.lang.String getErrorTag(int) -> getErrorTag
com.iflytek.cloud.resource.a -> com.iflytek.cloud.resource.a:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.b -> com.iflytek.cloud.resource.b:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.resource.c -> com.iflytek.cloud.resource.c:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String[] d -> d
com.iflytek.cloud.ui.RecognizerDialog -> com.iflytek.cloud.ui.RecognizerDialog:
    void setListener(com.iflytek.cloud.ui.RecognizerDialogListener) -> setListener
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void setUILanguage(java.util.Locale) -> setUILanguage
    void show() -> show
    void dismiss() -> dismiss
com.iflytek.cloud.ui.RecognizerDialogListener -> com.iflytek.cloud.ui.RecognizerDialogListener:
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
com.iflytek.cloud.ui.a -> com.iflytek.cloud.ui.a:
    android.widget.LinearLayout d -> d
    com.iflytek.cloud.ui.a.f e -> e
    android.view.animation.RotateAnimation f -> f
    com.iflytek.cloud.SpeechRecognizer g -> g
    com.iflytek.cloud.ui.RecognizerDialogListener h -> h
    long i -> i
    int a -> a
    com.iflytek.cloud.RecognizerListener j -> j
    int k -> k
    void a() -> a
    void a(com.iflytek.cloud.ui.RecognizerDialogListener) -> a
    void a(java.lang.String,java.lang.String) -> a
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void a(com.iflytek.cloud.SpeechError) -> a
    void a(android.widget.TextView,com.iflytek.cloud.SpeechError) -> a
    void k() -> k
    void onClick(android.view.View) -> onClick
    void b() -> b
    void c() -> c
    boolean d() -> d
    int a(com.iflytek.cloud.ui.a) -> a
    com.iflytek.cloud.ui.a.f b(com.iflytek.cloud.ui.a) -> b
    void c(com.iflytek.cloud.ui.a) -> c
    com.iflytek.cloud.ui.RecognizerDialogListener d(com.iflytek.cloud.ui.a) -> d
    boolean e(com.iflytek.cloud.ui.a) -> e
    void a(com.iflytek.cloud.ui.a,com.iflytek.cloud.SpeechError) -> a
com.iflytek.cloud.ui.a$a -> com.iflytek.cloud.ui.a$a:
    java.lang.String b -> b
    com.iflytek.cloud.ui.a a -> a
    void onClick(android.view.View) -> onClick
    void updateDrawState(android.text.TextPaint) -> updateDrawState
com.iflytek.cloud.ui.a.a -> com.iflytek.cloud.ui.a.a:
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int[] a() -> a
    int[] b() -> b
    java.io.InputStream b(android.content.Context,java.lang.String) -> b
    android.view.View a(android.content.Context,java.lang.String,android.view.ViewGroup) -> a
    android.graphics.drawable.Drawable a(android.content.Context,java.lang.String) -> a
    android.graphics.drawable.Drawable c(android.content.Context,java.lang.String) -> c
com.iflytek.cloud.ui.a.b -> com.iflytek.cloud.ui.a.b:
    int a -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    android.graphics.Bitmap a(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options) -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String) -> a
com.iflytek.cloud.ui.a.c -> com.iflytek.cloud.ui.a.c:
    com.iflytek.cloud.ui.a.e a -> a
    com.iflytek.cloud.ui.a.c$a b -> b
    void onCreate(android.os.Bundle) -> onCreate
    void show() -> show
    void dismiss() -> dismiss
    boolean destroy() -> destroy
com.iflytek.cloud.ui.a.c$a -> com.iflytek.cloud.ui.a.c$a:
    void a() -> a
com.iflytek.cloud.ui.a.d -> com.iflytek.cloud.ui.a.d:
    com.iflytek.cloud.ui.a.c a -> a
    void a() -> a
com.iflytek.cloud.ui.a.e -> com.iflytek.cloud.ui.a.e:
    com.iflytek.cloud.ui.a.c$a a -> a
    boolean b -> b
    boolean c -> c
    void e() -> e
    void a(com.iflytek.cloud.ui.a.c$a) -> a
    void f() -> f
    void b() -> b
    void c() -> c
    boolean a(android.view.ViewGroup) -> a
    boolean d() -> d
com.iflytek.cloud.ui.a.f -> com.iflytek.cloud.ui.a.f:
    android.graphics.drawable.Drawable b -> b
    android.graphics.drawable.Drawable c -> c
    android.graphics.Path a -> a
    void a(int) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void finalize() -> finalize
    void onMeasure(int,int) -> onMeasure
com.iflytek.cloud.ui.b -> com.iflytek.cloud.ui.b:
    com.iflytek.cloud.ui.a a -> a
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onVolumeChanged(int) -> onVolumeChanged
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.cloud.RecognizerResult,boolean) -> onResult
    void onError(com.iflytek.cloud.SpeechError) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.cloud.util.ContactManager -> com.iflytek.cloud.util.ContactManager:
    com.iflytek.cloud.util.ContactManager getManager() -> getManager
    com.iflytek.cloud.util.ContactManager createManager(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> createManager
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
com.iflytek.cloud.util.ContactManager$ContactListener -> com.iflytek.cloud.util.ContactManager$ContactListener:
    void onContactQueryFinish(java.lang.String,boolean) -> onContactQueryFinish
com.iflytek.cloud.util.ResourceUtil -> com.iflytek.cloud.util.ResourceUtil:
    java.lang.String ENGINE_START -> ENGINE_START
    java.lang.String ENGINE_DESTROY -> ENGINE_DESTROY
    java.lang.String ASR_RES_PATH -> ASR_RES_PATH
    java.lang.String GRM_BUILD_PATH -> GRM_BUILD_PATH
    java.lang.String TTS_RES_PATH -> TTS_RES_PATH
    java.lang.String IVW_RES_PATH -> IVW_RES_PATH
    java.lang.String generateResourcePath(android.content.Context,com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE,java.lang.String) -> generateResourcePath
    java.lang.String a(android.content.Context,com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE -> com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE:
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE assets -> assets
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE res -> res
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE path -> path
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE[] a -> a
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE[] values() -> values
    com.iflytek.cloud.util.ResourceUtil$RESOURCE_TYPE valueOf(java.lang.String) -> valueOf
com.iflytek.cloud.util.UserWords -> com.iflytek.cloud.util.UserWords:
    java.util.Hashtable a -> a
    boolean hasKey(java.lang.String) -> hasKey
    boolean putWord(java.lang.String) -> putWord
    boolean putWord(java.lang.String,java.lang.String) -> putWord
    boolean putWords(java.util.ArrayList) -> putWords
    boolean putWords(java.lang.String,java.util.ArrayList) -> putWords
    boolean a(java.util.ArrayList,java.lang.String) -> a
    boolean a(java.util.ArrayList,java.util.ArrayList) -> a
    java.util.ArrayList getWords() -> getWords
    java.util.ArrayList getKeys() -> getKeys
    java.util.ArrayList getWords(java.lang.String) -> getWords
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String toString() -> toString
com.iflytek.cloud.util.a.a -> com.iflytek.cloud.util.a.a:
    com.iflytek.cloud.util.a.c.a b -> b
    android.content.Context a -> a
    java.lang.String[] c -> c
    java.lang.String[] d -> d
    java.util.HashMap e -> e
    java.util.HashMap f -> f
    java.util.List g -> g
    java.util.HashMap h -> h
    java.util.HashMap i -> i
    java.lang.String[] a() -> a
    void a(int) -> a
    void b() -> b
com.iflytek.cloud.util.a.a.a -> com.iflytek.cloud.util.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String a(com.iflytek.cloud.util.a.a.a,java.lang.String) -> a
    java.lang.String b(com.iflytek.cloud.util.a.a.a,java.lang.String) -> b
    java.lang.String c(com.iflytek.cloud.util.a.a.a,java.lang.String) -> c
    java.lang.String d(com.iflytek.cloud.util.a.a.a,java.lang.String) -> d
    java.lang.String e(com.iflytek.cloud.util.a.a.a,java.lang.String) -> e
    java.lang.String f(com.iflytek.cloud.util.a.a.a,java.lang.String) -> f
    java.lang.String g(com.iflytek.cloud.util.a.a.a,java.lang.String) -> g
com.iflytek.cloud.util.a.a.b -> com.iflytek.cloud.util.a.a.b:
    com.iflytek.cloud.util.a.a.a a(android.os.Parcel) -> a
    com.iflytek.cloud.util.a.a.a[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.cloud.util.a.b -> com.iflytek.cloud.util.a.b:
    com.iflytek.cloud.util.a.b a -> a
    android.content.Context b -> b
    int c -> c
    com.iflytek.cloud.util.a.c.a d -> d
    com.iflytek.cloud.util.a.a e -> e
    com.iflytek.cloud.util.a.b$b f -> f
    com.iflytek.cloud.util.a.b$a g -> g
    android.os.HandlerThread h -> h
    com.iflytek.cloud.util.ContactManager$ContactListener i -> i
    android.os.Handler j -> j
    long k -> k
    long l -> l
    com.iflytek.cloud.util.a.b a() -> a
    com.iflytek.cloud.util.a.b a(android.content.Context,com.iflytek.cloud.util.ContactManager$ContactListener) -> a
    java.lang.String queryAllContactsName() -> queryAllContactsName
    void asyncQueryAllContactsName() -> asyncQueryAllContactsName
    void b() -> b
    void c() -> c
    void a(com.iflytek.cloud.util.a.b) -> a
    void b(com.iflytek.cloud.util.a.b) -> b
    long c(com.iflytek.cloud.util.a.b) -> c
    long a(com.iflytek.cloud.util.a.b,long) -> a
    long d(com.iflytek.cloud.util.a.b) -> d
    long b(com.iflytek.cloud.util.a.b,long) -> b
com.iflytek.cloud.util.a.b$a -> com.iflytek.cloud.util.a.b$a:
    com.iflytek.cloud.util.a.b a -> a
    void onChange(boolean) -> onChange
com.iflytek.cloud.util.a.b$b -> com.iflytek.cloud.util.a.b$b:
    com.iflytek.cloud.util.a.b a -> a
    void onChange(boolean) -> onChange
com.iflytek.cloud.util.a.b.a -> com.iflytek.cloud.util.a.b.a:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.cloud.util.a.b.b -> com.iflytek.cloud.util.a.b.b:
    java.lang.String[] d -> d
    java.lang.String[] e -> e
    java.lang.String[] f -> f
    java.lang.String[] g -> g
    java.lang.String[] h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    android.net.Uri a() -> a
    java.lang.String[] b() -> b
    java.lang.String c() -> c
com.iflytek.cloud.util.a.c -> com.iflytek.cloud.util.a.c:
    com.iflytek.cloud.util.a.b a -> a
    void run() -> run
com.iflytek.cloud.util.a.c.a -> com.iflytek.cloud.util.a.c.a:
    java.lang.String[] a -> a
    android.content.Context b -> b
    java.lang.String[] c -> c
    java.lang.String[] b() -> b
    java.lang.String c() -> c
    java.util.HashMap d() -> d
    java.util.List e() -> e
    android.net.Uri f() -> f
    android.net.Uri a() -> a
    java.util.HashMap a(int) -> a
    void a(android.content.Context) -> a
com.iflytek.cloud.util.a.d -> com.iflytek.cloud.util.a.d:
    java.lang.String a(java.lang.String) -> a
    int a(java.lang.String,java.lang.String,boolean) -> a
com.iflytek.cloud.util.a.e -> com.iflytek.cloud.util.a.e:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    java.lang.String[] c -> c
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String[],char) -> a
com.iflytek.msc.MSC -> com.iflytek.msc.MSC:
    boolean a -> a
    boolean isLoaded() -> isLoaded
    int DebugLog(boolean) -> DebugLog
    int QTTSInit(byte[]) -> QTTSInit
    char[] QTTSSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSSessionBegin
    int QTTSTextPut(char[],byte[]) -> QTTSTextPut
    byte[] QTTSAudioGet(char[],com.iflytek.msc.MSCSessionInfo) -> QTTSAudioGet
    int QTTSGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QTTSGetParam
    char[] QTTSAudioInfo(char[]) -> QTTSAudioInfo
    int QTTSSessionEnd(char[],byte[]) -> QTTSSessionEnd
    int QTTSFini() -> QTTSFini
    int QISRInit(byte[]) -> QISRInit
    char[] QISRSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRSessionBegin
    int QISRRegisterNotify(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> QISRRegisterNotify
    int QISRBuildGrammar(byte[],byte[],int,byte[],java.lang.String,java.lang.Object) -> QISRBuildGrammar
    int QISRUpdateLexicon(byte[],byte[],int,byte[],java.lang.String,java.lang.Object) -> QISRUpdateLexicon
    int QISRGrammarActivate(char[],byte[],byte[]) -> QISRGrammarActivate
    int QISRGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISRGetParam
    int QISRSetParam(char[],byte[],byte[]) -> QISRSetParam
    int QISRAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISRAudioWrite
    byte[] QISRUploadData(char[],byte[],byte[],int,byte[],com.iflytek.msc.MSCSessionInfo) -> QISRUploadData
    byte[] QISRGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QISRGetResult
    int QISRLogEvent(char[],byte[],byte[]) -> QISRLogEvent
    int QISRSessionEnd(char[],byte[]) -> QISRSessionEnd
    int QISRFini() -> QISRFini
    int QHCRInit(byte[]) -> QHCRInit
    char[] QHCRSessionBegin(byte[],com.iflytek.msc.MSCSessionInfo) -> QHCRSessionBegin
    int QHCRDataWrite(char[],byte[],byte[],int,int) -> QHCRDataWrite
    byte[] QHCRGetResult(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QHCRGetResult
    int QHCRLogEvent(char[],byte[],byte[]) -> QHCRLogEvent
    int QHCRSessionEnd(char[],byte[]) -> QHCRSessionEnd
    int QHCRFini() -> QHCRFini
    int QISVInit(byte[]) -> QISVInit
    char[] QISVSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVSessionBegin
    int QISVAudioWrite(char[],char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISVAudioWrite
    int QISVGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVGetParam
    byte[] QISVGetResult(char[],char[],com.iflytek.msc.MSCSessionInfo) -> QISVGetResult
    int QISVSessionEnd(char[],byte[]) -> QISVSessionEnd
    byte[] QISVQueDelModel(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISVQueDelModel
    int QISVFini() -> QISVFini
    int QMSPLogin(byte[],byte[],byte[]) -> QMSPLogin
    int UMSPLogin(byte[],byte[],byte[],java.lang.Object) -> UMSPLogin
    int QMSPSetParam(byte[],byte[]) -> QMSPSetParam
    int QMSPGetParam(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPGetParam
    byte[] QMSPUploadData(byte[],byte[],int,byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPUploadData
    byte[] QMSPDownloadData(byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPDownloadData
    int QMSPDownload(byte[],byte[],java.lang.Object) -> QMSPDownload
    byte[] QMSPSearch(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QMSPSearch
    int QMSPLogOut() -> QMSPLogOut
    int QMSPRegisterNotify(java.lang.String,java.lang.String) -> QMSPRegisterNotify
    int QISEInit(byte[]) -> QISEInit
    char[] QISESessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISESessionBegin
    int QISETextPut(char[],byte[],byte[]) -> QISETextPut
    int QISEAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QISEAudioWrite
    byte[] QISEGetResult(char[],com.iflytek.msc.MSCSessionInfo) -> QISEGetResult
    int QISEGetParam(char[],byte[],com.iflytek.msc.MSCSessionInfo) -> QISEGetParam
    int QISESessionEnd(char[],byte[]) -> QISESessionEnd
    int QISEFini() -> QISEFini
    char[] QIVWSessionBegin(byte[],byte[],com.iflytek.msc.MSCSessionInfo) -> QIVWSessionBegin
    int QIVWRegisterNotify(char[],java.lang.String,java.lang.Object) -> QIVWRegisterNotify
    int QIVWAudioWrite(char[],byte[],int,int,com.iflytek.msc.MSCSessionInfo) -> QIVWAudioWrite
    int QIVWSessionEnd(char[],byte[]) -> QIVWSessionEnd
    int getFileDescriptorFD(java.io.FileDescriptor) -> getFileDescriptorFD
com.iflytek.msc.MSCSessionInfo -> com.iflytek.msc.MSCSessionInfo:
    int errorcode -> errorcode
    int epstatues -> epstatues
    int rsltstatus -> rsltstatus
    int sesstatus -> sesstatus
    byte[] buffer -> buffer
    int buflen -> buflen
com.iflytek.speech.GrammarListener -> com.iflytek.speech.GrammarListener:
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.speech.GrammarListener$Stub -> com.iflytek.speech.GrammarListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onBuildFinish -> TRANSACTION_onBuildFinish
    com.iflytek.speech.GrammarListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.GrammarListener$Stub$Proxy -> com.iflytek.speech.GrammarListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onBuildFinish(java.lang.String,int) -> onBuildFinish
com.iflytek.speech.ISpeechModule -> com.iflytek.speech.ISpeechModule:
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    android.content.Intent getIntent() -> getIntent
    boolean destory() -> destory
    boolean isAvailable() -> isAvailable
com.iflytek.speech.LexiconListener -> com.iflytek.speech.LexiconListener:
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.speech.LexiconListener$Stub -> com.iflytek.speech.LexiconListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onLexiconUpdated -> TRANSACTION_onLexiconUpdated
    com.iflytek.speech.LexiconListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.LexiconListener$Stub$Proxy -> com.iflytek.speech.LexiconListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onLexiconUpdated(java.lang.String,int) -> onLexiconUpdated
com.iflytek.speech.RecognizerListener -> com.iflytek.speech.RecognizerListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.RecognizerListener$Stub -> com.iflytek.speech.RecognizerListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.RecognizerListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.RecognizerListener$Stub$Proxy -> com.iflytek.speech.RecognizerListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.RecognizerResult,boolean) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.RecognizerResult -> com.iflytek.speech.RecognizerResult:
    java.lang.String json -> json
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    java.lang.String getResultString() -> getResultString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.RecognizerResult$1 -> com.iflytek.speech.RecognizerResult$1:
    com.iflytek.speech.RecognizerResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.RecognizerResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.SpeakerVerifierAidl -> com.iflytek.speech.SpeakerVerifierAidl:
    java.lang.String TAG -> TAG
    java.lang.String USER_NAME -> USER_NAME
    java.lang.String IVP_SENTENCE_CNT -> IVP_SENTENCE_CNT
    java.lang.String VID -> VID
    java.lang.String IVP_PARAM_CONSISTTHRESHOLD -> IVP_PARAM_CONSISTTHRESHOLD
    java.lang.String IVP_PARAM_DTW_CHECK_THRESHOLD -> IVP_PARAM_DTW_CHECK_THRESHOLD
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int identify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> identify
    int getPasswordList(android.content.Context,com.iflytek.speech.SpeakerVerifierAidl$DownloadListener,java.lang.String) -> getPasswordList
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeakerVerifierAidl$DownloadListener -> com.iflytek.speech.SpeakerVerifierAidl$DownloadListener:
    void onData(java.util.ArrayList) -> onData
    void onError(int) -> onError
com.iflytek.speech.SpeakerVerifierAidl$PassWord -> com.iflytek.speech.SpeakerVerifierAidl$PassWord:
    java.lang.String pwdt -> pwdt
    java.lang.String pwid -> pwid
    java.lang.String pwtext -> pwtext
    com.iflytek.speech.SpeakerVerifierAidl this$0 -> this$0
com.iflytek.speech.SpeechComponent -> com.iflytek.speech.SpeechComponent:
    java.lang.String mPackageName -> mPackageName
    java.util.ArrayList mEngines -> mEngines
    java.lang.String getPackageName() -> getPackageName
    java.util.ArrayList getEngines() -> getEngines
    void addEngine(java.lang.String) -> addEngine
    boolean isEngineAvaible(java.lang.String) -> isEngineAvaible
com.iflytek.speech.SpeechModuleAidl -> com.iflytek.speech.SpeechModuleAidl:
    java.lang.Object mSynLock -> mSynLock
    android.os.IInterface mService -> mService
    android.content.Context mContext -> mContext
    android.content.ServiceConnection mConnection -> mConnection
    com.iflytek.cloud.InitListener mInitListener -> mInitListener
    java.lang.String mBindAction -> mBindAction
    java.util.HashMap mParams -> mParams
    boolean userDestroy -> userDestroy
    void bindService() -> bindService
    android.os.IInterface getService(android.os.IBinder) -> getService
    boolean isAvailable() -> isAvailable
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    android.content.Intent getIntent() -> getIntent
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    boolean destory() -> destory
    java.lang.String getTag() -> getTag
    android.os.IInterface access$000(com.iflytek.speech.SpeechModuleAidl,android.os.IBinder) -> access$000
    com.iflytek.cloud.InitListener access$100(com.iflytek.speech.SpeechModuleAidl) -> access$100
    boolean access$200(com.iflytek.speech.SpeechModuleAidl) -> access$200
    void access$300(com.iflytek.speech.SpeechModuleAidl) -> access$300
com.iflytek.speech.SpeechModuleAidl$1 -> com.iflytek.speech.SpeechModuleAidl$1:
    com.iflytek.speech.SpeechModuleAidl this$0 -> this$0
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.iflytek.speech.SpeechRecognizerAidl -> com.iflytek.speech.SpeechRecognizerAidl:
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    int startListening(com.iflytek.speech.RecognizerListener) -> startListening
    int stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    int cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean destory() -> destory
    boolean isListening() -> isListening
    int buildGrammar(java.lang.String,java.lang.String,com.iflytek.speech.GrammarListener) -> buildGrammar
    int updateLexicon(java.lang.String,java.lang.String,com.iflytek.speech.LexiconListener) -> updateLexicon
    int writeAudio(byte[],int,int) -> writeAudio
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechSynthesizerAidl -> com.iflytek.speech.SpeechSynthesizerAidl:
    int synthesizeToUrl(java.lang.String,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(java.lang.String,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechUnderstanderAidl -> com.iflytek.speech.SpeechUnderstanderAidl:
    int startUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    int stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    boolean isUnderstanding() -> isUnderstanding
    int cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    int writeAudio(byte[],int,int) -> writeAudio
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.SpeechUnderstanderListener -> com.iflytek.speech.SpeechUnderstanderListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SpeechUnderstanderListener$Stub -> com.iflytek.speech.SpeechUnderstanderListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.SpeechUnderstanderListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SpeechUnderstanderListener$Stub$Proxy -> com.iflytek.speech.SpeechUnderstanderListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SynthesizeToUrlListener -> com.iflytek.speech.SynthesizeToUrlListener:
    void onSynthesizeCompleted(java.lang.String,int) -> onSynthesizeCompleted
com.iflytek.speech.SynthesizeToUrlListener$Stub -> com.iflytek.speech.SynthesizeToUrlListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onSynthesizeCompleted -> TRANSACTION_onSynthesizeCompleted
    com.iflytek.speech.SynthesizeToUrlListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SynthesizeToUrlListener$Stub$Proxy -> com.iflytek.speech.SynthesizeToUrlListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onSynthesizeCompleted(java.lang.String,int) -> onSynthesizeCompleted
com.iflytek.speech.SynthesizerListener -> com.iflytek.speech.SynthesizerListener:
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onCompleted(int) -> onCompleted
    void onSpeakProgress(int) -> onSpeakProgress
    void onBufferProgress(int) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.SynthesizerListener$Stub -> com.iflytek.speech.SynthesizerListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onSpeakBegin -> TRANSACTION_onSpeakBegin
    int TRANSACTION_onSpeakPaused -> TRANSACTION_onSpeakPaused
    int TRANSACTION_onSpeakResumed -> TRANSACTION_onSpeakResumed
    int TRANSACTION_onCompleted -> TRANSACTION_onCompleted
    int TRANSACTION_onSpeakProgress -> TRANSACTION_onSpeakProgress
    int TRANSACTION_onBufferProgress -> TRANSACTION_onBufferProgress
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    com.iflytek.speech.SynthesizerListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.SynthesizerListener$Stub$Proxy -> com.iflytek.speech.SynthesizerListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onSpeakBegin() -> onSpeakBegin
    void onSpeakPaused() -> onSpeakPaused
    void onSpeakResumed() -> onSpeakResumed
    void onCompleted(int) -> onCompleted
    void onSpeakProgress(int) -> onSpeakProgress
    void onBufferProgress(int) -> onBufferProgress
    void onEvent(int,int,int,android.os.Bundle) -> onEvent
com.iflytek.speech.TextUnderstanderAidl -> com.iflytek.speech.TextUnderstanderAidl:
    java.lang.String SCENE -> SCENE
    java.lang.String TEXT -> TEXT
    boolean isUnderstanding() -> isUnderstanding
    int cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    int understandText(java.lang.String,com.iflytek.speech.TextUnderstanderListener) -> understandText
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.TextUnderstanderListener -> com.iflytek.speech.TextUnderstanderListener:
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.TextUnderstanderListener$Stub -> com.iflytek.speech.TextUnderstanderListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.TextUnderstanderListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.TextUnderstanderListener$Stub$Proxy -> com.iflytek.speech.TextUnderstanderListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onResult(com.iflytek.speech.UnderstanderResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.UnderstanderResult -> com.iflytek.speech.UnderstanderResult:
    java.lang.String mXml -> mXml
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.UnderstanderResult$1 -> com.iflytek.speech.UnderstanderResult$1:
    com.iflytek.speech.UnderstanderResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.UnderstanderResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.UtilityConfig -> com.iflytek.speech.UtilityConfig:
    java.lang.String COMPONENT_URL -> COMPONENT_URL
    java.lang.String COMPONENT_PKG -> COMPONENT_PKG
    java.lang.String CHANNEL_ID -> CHANNEL_ID
    java.lang.String CHANNEL_NAME -> CHANNEL_NAME
    java.lang.String SETTINGS_ACTION_MAIN -> SETTINGS_ACTION_MAIN
    java.lang.String SETTINGS_ACTION_ASR -> SETTINGS_ACTION_ASR
    java.lang.String SETTINGS_ACTION_TTS -> SETTINGS_ACTION_TTS
    java.lang.String ACTION_SPEECH_RECOGNIZER -> ACTION_SPEECH_RECOGNIZER
    java.lang.String ACTION_SPEECH_SYNTHESIZER -> ACTION_SPEECH_SYNTHESIZER
    java.lang.String ACTION_SPEECH_UNDERSTANDER -> ACTION_SPEECH_UNDERSTANDER
    java.lang.String ACTION_TEXT_UNDERSTANDER -> ACTION_TEXT_UNDERSTANDER
    java.lang.String ACTION_SPEECH_WAKEUP -> ACTION_SPEECH_WAKEUP
    java.lang.String ACTION_SPEAKER_VERIFIER -> ACTION_SPEAKER_VERIFIER
    java.lang.String KEY_CALLER_APPID -> KEY_CALLER_APPID
    java.lang.String KEY_CALLER_NAME -> KEY_CALLER_NAME
    java.lang.String KEY_CALLER_PKG_NAME -> KEY_CALLER_PKG_NAME
    java.lang.String KEY_CALLER_VER_NAME -> KEY_CALLER_VER_NAME
    java.lang.String KEY_CALLER_VER_CODE -> KEY_CALLER_VER_CODE
    java.lang.String SDK_VER_NAME -> SDK_VER_NAME
    java.lang.String METADATA_KEY_ENGINE_TYPE -> METADATA_KEY_ENGINE_TYPE
    java.util.HashMap callerHashMap -> callerHashMap
    java.lang.String KEY_REQUEST_PACKAGE -> KEY_REQUEST_PACKAGE
    java.lang.String KEY_CHANNEL_ID -> KEY_CHANNEL_ID
    java.lang.String KEY_CHANNEL_NAME -> KEY_CHANNEL_NAME
    java.lang.String getCallerInfo(android.content.Context,java.lang.String) -> getCallerInfo
    java.lang.String getComponentUrlParam(android.content.Context) -> getComponentUrlParam
    void appendHttpParam(java.lang.StringBuffer,java.lang.String,java.lang.String) -> appendHttpParam
com.iflytek.speech.VerifierListener -> com.iflytek.speech.VerifierListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onRegister(com.iflytek.speech.VerifierResult) -> onRegister
    void onEnd(com.iflytek.speech.VerifierResult,int) -> onEnd
    void onCancel() -> onCancel
    void onError(int) -> onError
com.iflytek.speech.VerifierListener$Stub -> com.iflytek.speech.VerifierListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onRegister -> TRANSACTION_onRegister
    int TRANSACTION_onEnd -> TRANSACTION_onEnd
    int TRANSACTION_onCancel -> TRANSACTION_onCancel
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.VerifierListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.VerifierListener$Stub$Proxy -> com.iflytek.speech.VerifierListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onRegister(com.iflytek.speech.VerifierResult) -> onRegister
    void onEnd(com.iflytek.speech.VerifierResult,int) -> onEnd
    void onCancel() -> onCancel
    void onError(int) -> onError
com.iflytek.speech.VerifierResult -> com.iflytek.speech.VerifierResult:
    java.lang.String json -> json
    java.lang.String sst -> sst
    boolean ret -> ret
    java.lang.String dcs -> dcs
    java.lang.String vid -> vid
    int suc -> suc
    int rgn -> rgn
    java.lang.String trs -> trs
    java.lang.String source -> source
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.VerifierResult$1 -> com.iflytek.speech.VerifierResult$1:
    com.iflytek.speech.VerifierResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.VerifierResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.Version -> com.iflytek.speech.Version:
    java.lang.String VERSION_NAME -> VERSION_NAME
    java.lang.String VERSION_CODE -> VERSION_CODE
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getVersionCode() -> getVersionCode
com.iflytek.speech.VoiceWakeuperAidl -> com.iflytek.speech.VoiceWakeuperAidl:
    java.lang.String IVW_THRESHOLD -> IVW_THRESHOLD
    java.lang.String IVW_WORD_ID -> IVW_WORD_ID
    java.lang.String IVW_FILES -> IVW_FILES
    java.lang.String PROVIDER_NAME -> PROVIDER_NAME
    java.lang.String ARG_RES_PROVIDER_AUTHORITY -> ARG_RES_PROVIDER_AUTHORITY
    java.lang.String PARAMS_SEPARATE -> PARAMS_SEPARATE
    java.lang.String IVP_USER_NAME -> IVP_USER_NAME
    java.lang.String IVP_RES_ID -> IVP_RES_ID
    java.lang.String IVW_AND_IVP -> IVW_AND_IVP
    java.lang.String WAKEUP_RESULT_ID -> WAKEUP_RESULT_ID
    java.lang.String WAKEUP_RESULT_SCORE -> WAKEUP_RESULT_SCORE
    java.lang.String ARG_RES_TYPE -> ARG_RES_TYPE
    int RES_FROM_ASSETS -> RES_FROM_ASSETS
    int RES_SPECIFIED -> RES_SPECIFIED
    int RES_FROM_CLIENT -> RES_FROM_CLIENT
    int startListening(com.iflytek.speech.WakeuperListener) -> startListening
    int cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean destroy() -> destroy
    boolean isListening() -> isListening
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    boolean destory() -> destory
    boolean isActionInstalled(android.content.Context,java.lang.String) -> isActionInstalled
    android.content.Intent getIntent() -> getIntent
    boolean isAvailable() -> isAvailable
com.iflytek.speech.WakeuperListener -> com.iflytek.speech.WakeuperListener:
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.WakeuperResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.WakeuperListener$Stub -> com.iflytek.speech.WakeuperListener$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onVolumeChanged -> TRANSACTION_onVolumeChanged
    int TRANSACTION_onBeginOfSpeech -> TRANSACTION_onBeginOfSpeech
    int TRANSACTION_onEndOfSpeech -> TRANSACTION_onEndOfSpeech
    int TRANSACTION_onResult -> TRANSACTION_onResult
    int TRANSACTION_onError -> TRANSACTION_onError
    com.iflytek.speech.WakeuperListener asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.WakeuperListener$Stub$Proxy -> com.iflytek.speech.WakeuperListener$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onVolumeChanged(int) -> onVolumeChanged
    void onBeginOfSpeech() -> onBeginOfSpeech
    void onEndOfSpeech() -> onEndOfSpeech
    void onResult(com.iflytek.speech.WakeuperResult) -> onResult
    void onError(int) -> onError
com.iflytek.speech.WakeuperResult -> com.iflytek.speech.WakeuperResult:
    java.lang.String json -> json
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getResultString() -> getResultString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.iflytek.speech.WakeuperResult$1 -> com.iflytek.speech.WakeuperResult$1:
    com.iflytek.speech.WakeuperResult createFromParcel(android.os.Parcel) -> createFromParcel
    com.iflytek.speech.WakeuperResult[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.iflytek.speech.aidl.ISpeakerVerifier -> com.iflytek.speech.aidl.ISpeakerVerifier:
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
com.iflytek.speech.aidl.ISpeakerVerifier$Stub -> com.iflytek.speech.aidl.ISpeakerVerifier$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_verify -> TRANSACTION_verify
    int TRANSACTION_register -> TRANSACTION_register
    int TRANSACTION_endSpeak -> TRANSACTION_endSpeak
    int TRANSACTION_stopSpeak -> TRANSACTION_stopSpeak
    int TRANSACTION_setParameter -> TRANSACTION_setParameter
    int TRANSACTION_getParameter -> TRANSACTION_getParameter
    com.iflytek.speech.aidl.ISpeakerVerifier asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeakerVerifier$Stub$Proxy -> com.iflytek.speech.aidl.ISpeakerVerifier$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int verify(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> verify
    int register(java.lang.String,java.lang.String,com.iflytek.speech.VerifierListener) -> register
    void endSpeak() -> endSpeak
    void stopSpeak() -> stopSpeak
    int setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
com.iflytek.speech.aidl.ISpeechRecognizer -> com.iflytek.speech.aidl.ISpeechRecognizer:
    void startListening(android.content.Intent,com.iflytek.speech.RecognizerListener) -> startListening
    void stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    void cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean isListening() -> isListening
    void buildGrammar(android.content.Intent,com.iflytek.speech.GrammarListener) -> buildGrammar
    void updateLexicon(android.content.Intent,com.iflytek.speech.LexiconListener) -> updateLexicon
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechRecognizer$Stub -> com.iflytek.speech.aidl.ISpeechRecognizer$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startListening -> TRANSACTION_startListening
    int TRANSACTION_stopListening -> TRANSACTION_stopListening
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isListening -> TRANSACTION_isListening
    int TRANSACTION_buildGrammar -> TRANSACTION_buildGrammar
    int TRANSACTION_updateLexicon -> TRANSACTION_updateLexicon
    int TRANSACTION_writeAudio -> TRANSACTION_writeAudio
    com.iflytek.speech.aidl.ISpeechRecognizer asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechRecognizer$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechRecognizer$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startListening(android.content.Intent,com.iflytek.speech.RecognizerListener) -> startListening
    void stopListening(com.iflytek.speech.RecognizerListener) -> stopListening
    void cancel(com.iflytek.speech.RecognizerListener) -> cancel
    boolean isListening() -> isListening
    void buildGrammar(android.content.Intent,com.iflytek.speech.GrammarListener) -> buildGrammar
    void updateLexicon(android.content.Intent,com.iflytek.speech.LexiconListener) -> updateLexicon
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechSynthesizer -> com.iflytek.speech.aidl.ISpeechSynthesizer:
    int synthesizeToUrl(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    java.lang.String getLocalSpeakerList() -> getLocalSpeakerList
com.iflytek.speech.aidl.ISpeechSynthesizer$Stub -> com.iflytek.speech.aidl.ISpeechSynthesizer$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_synthesizeToUrl -> TRANSACTION_synthesizeToUrl
    int TRANSACTION_startSpeaking -> TRANSACTION_startSpeaking
    int TRANSACTION_pauseSpeaking -> TRANSACTION_pauseSpeaking
    int TRANSACTION_resumeSpeaking -> TRANSACTION_resumeSpeaking
    int TRANSACTION_stopSpeaking -> TRANSACTION_stopSpeaking
    int TRANSACTION_isSpeaking -> TRANSACTION_isSpeaking
    int TRANSACTION_getLocalSpeakerList -> TRANSACTION_getLocalSpeakerList
    com.iflytek.speech.aidl.ISpeechSynthesizer asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechSynthesizer$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechSynthesizer$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    int synthesizeToUrl(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> synthesizeToUrl
    int startSpeaking(android.content.Intent,com.iflytek.speech.SynthesizerListener) -> startSpeaking
    int pauseSpeaking(com.iflytek.speech.SynthesizerListener) -> pauseSpeaking
    int resumeSpeaking(com.iflytek.speech.SynthesizerListener) -> resumeSpeaking
    int stopSpeaking(com.iflytek.speech.SynthesizerListener) -> stopSpeaking
    boolean isSpeaking() -> isSpeaking
    java.lang.String getLocalSpeakerList() -> getLocalSpeakerList
com.iflytek.speech.aidl.ISpeechUnderstander -> com.iflytek.speech.aidl.ISpeechUnderstander:
    void startUnderstanding(android.content.Intent,com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    void stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    void cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ISpeechUnderstander$Stub -> com.iflytek.speech.aidl.ISpeechUnderstander$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startUnderstanding -> TRANSACTION_startUnderstanding
    int TRANSACTION_stopUnderstanding -> TRANSACTION_stopUnderstanding
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isUnderstanding -> TRANSACTION_isUnderstanding
    int TRANSACTION_writeAudio -> TRANSACTION_writeAudio
    com.iflytek.speech.aidl.ISpeechUnderstander asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ISpeechUnderstander$Stub$Proxy -> com.iflytek.speech.aidl.ISpeechUnderstander$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startUnderstanding(android.content.Intent,com.iflytek.speech.SpeechUnderstanderListener) -> startUnderstanding
    void stopUnderstanding(com.iflytek.speech.SpeechUnderstanderListener) -> stopUnderstanding
    void cancel(com.iflytek.speech.SpeechUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
    void writeAudio(android.content.Intent,byte[],int,int) -> writeAudio
com.iflytek.speech.aidl.ITextUnderstander -> com.iflytek.speech.aidl.ITextUnderstander:
    void understandText(android.content.Intent,com.iflytek.speech.TextUnderstanderListener) -> understandText
    void cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
com.iflytek.speech.aidl.ITextUnderstander$Stub -> com.iflytek.speech.aidl.ITextUnderstander$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_understandText -> TRANSACTION_understandText
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isUnderstanding -> TRANSACTION_isUnderstanding
    com.iflytek.speech.aidl.ITextUnderstander asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.ITextUnderstander$Stub$Proxy -> com.iflytek.speech.aidl.ITextUnderstander$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void understandText(android.content.Intent,com.iflytek.speech.TextUnderstanderListener) -> understandText
    void cancel(com.iflytek.speech.TextUnderstanderListener) -> cancel
    boolean isUnderstanding() -> isUnderstanding
com.iflytek.speech.aidl.IWakeuper -> com.iflytek.speech.aidl.IWakeuper:
    void startListening(android.content.Intent,com.iflytek.speech.WakeuperListener) -> startListening
    void stopListening(com.iflytek.speech.WakeuperListener) -> stopListening
    void cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean isListening() -> isListening
    void destroy() -> destroy
com.iflytek.speech.aidl.IWakeuper$Stub -> com.iflytek.speech.aidl.IWakeuper$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_startListening -> TRANSACTION_startListening
    int TRANSACTION_stopListening -> TRANSACTION_stopListening
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_isListening -> TRANSACTION_isListening
    int TRANSACTION_destroy -> TRANSACTION_destroy
    com.iflytek.speech.aidl.IWakeuper asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.iflytek.speech.aidl.IWakeuper$Stub$Proxy -> com.iflytek.speech.aidl.IWakeuper$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void startListening(android.content.Intent,com.iflytek.speech.WakeuperListener) -> startListening
    void stopListening(com.iflytek.speech.WakeuperListener) -> stopListening
    void cancel(com.iflytek.speech.WakeuperListener) -> cancel
    boolean isListening() -> isListening
    void destroy() -> destroy
com.iflytek.sunflower.CollectorJs -> com.iflytek.sunflower.CollectorJs:
    android.content.Context a -> a
    android.content.Context access$000(com.iflytek.sunflower.CollectorJs) -> access$000
com.iflytek.sunflower.CollectorJs$a -> com.iflytek.sunflower.CollectorJs$a:
    android.webkit.WebChromeClient a -> a
    com.iflytek.sunflower.CollectorJs b -> b
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap) -> onReceivedIcon
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onRequestFocus(android.webkit.WebView) -> onRequestFocus
com.iflytek.sunflower.FlowerCollector -> com.iflytek.sunflower.FlowerCollector:
    void setAutoLocation(boolean) -> setAutoLocation
    void openPageMode(java.lang.Boolean) -> openPageMode
    void setDebugMode(boolean) -> setDebugMode
    void setGender(android.content.Context,com.iflytek.sunflower.FlowerCollector$Gender) -> setGender
    void setAge(android.content.Context,int) -> setAge
    void setUserID(android.content.Context,java.lang.String) -> setUserID
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setCaptureUncaughtException(java.lang.Boolean) -> setCaptureUncaughtException
    void setParameter(java.lang.String,java.lang.String) -> setParameter
    void onPageStart(java.lang.String) -> onPageStart
    void onPageEnd(java.lang.String) -> onPageEnd
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onError(android.content.Context,java.lang.String) -> onError
    void flush(android.content.Context) -> flush
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.HashMap) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.HashMap,long) -> onEventDuration
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventBegin(android.content.Context,java.lang.String,java.util.HashMap) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onLog(android.content.Context,org.json.JSONObject,java.lang.String,java.util.HashMap) -> onLog
    java.lang.String getOnlineParams(android.content.Context,java.lang.String) -> getOnlineParams
    void updateOnlineConfig(android.content.Context,com.iflytek.sunflower.OnlineConfigListener) -> updateOnlineConfig
com.iflytek.sunflower.FlowerCollector$1 -> com.iflytek.sunflower.FlowerCollector$1:
    int[] a -> a
com.iflytek.sunflower.FlowerCollector$Gender -> com.iflytek.sunflower.FlowerCollector$Gender:
    com.iflytek.sunflower.FlowerCollector$Gender Male -> Male
    com.iflytek.sunflower.FlowerCollector$Gender Female -> Female
    com.iflytek.sunflower.FlowerCollector$Gender Unknown -> Unknown
    com.iflytek.sunflower.FlowerCollector$Gender[] a -> a
    com.iflytek.sunflower.FlowerCollector$Gender[] a() -> a
com.iflytek.sunflower.OnlineConfigListener -> com.iflytek.sunflower.OnlineConfigListener:
    void onDataReceived(org.json.JSONObject) -> onDataReceived
com.iflytek.sunflower.a -> com.iflytek.sunflower.a:
    com.iflytek.sunflower.a b -> b
    android.content.Context c -> c
    android.os.Handler d -> d
    java.util.concurrent.ExecutorService a -> a
    com.iflytek.sunflower.a a(android.content.Context) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.util.HashMap,long) -> a
    boolean d() -> d
    void b(java.lang.String,java.lang.String,java.util.HashMap,long) -> b
    void c(java.lang.String,java.lang.String,java.util.HashMap,long) -> c
    void a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(org.json.JSONObject,java.lang.String,java.util.HashMap) -> a
    void c() -> c
    void a(com.iflytek.sunflower.OnlineConfigListener) -> a
com.iflytek.sunflower.a.a -> com.iflytek.sunflower.a.a:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.Long g -> g
    java.lang.String h -> h
    java.lang.Boolean i -> i
    java.lang.Boolean j -> j
    java.lang.Boolean k -> k
    int l -> l
    int m -> m
    java.lang.Boolean n -> n
    java.lang.String o -> o
    int p -> p
    int q -> q
    long r -> r
    long s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.lang.String w -> w
com.iflytek.sunflower.a.b -> com.iflytek.sunflower.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String p -> p
com.iflytek.sunflower.a.c -> com.iflytek.sunflower.a.c:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.iflytek.sunflower.b -> com.iflytek.sunflower.b:
    java.lang.String a -> a
    com.iflytek.sunflower.a b -> b
    void run() -> run
com.iflytek.sunflower.b.a -> com.iflytek.sunflower.b.a:
    java.lang.String a -> a
    long b -> b
com.iflytek.sunflower.b.b -> com.iflytek.sunflower.b.b:
    java.lang.String a -> a
    long b -> b
    long c -> c
    java.util.ArrayList d -> d
com.iflytek.sunflower.b.c -> com.iflytek.sunflower.b.c:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
com.iflytek.sunflower.b.d -> com.iflytek.sunflower.b.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.HashMap d -> d
    long e -> e
    long f -> f
com.iflytek.sunflower.b.e -> com.iflytek.sunflower.b.e:
    java.lang.String a -> a
    long b -> b
com.iflytek.sunflower.c -> com.iflytek.sunflower.c:
    java.lang.String a -> a
    com.iflytek.sunflower.a b -> b
    void run() -> run
com.iflytek.sunflower.c.a -> com.iflytek.sunflower.c.a:
    int a -> a
    com.iflytek.sunflower.c.a$a b -> b
    boolean c -> c
    java.net.URL d -> d
    java.util.ArrayList e -> e
    java.lang.Object f -> f
    int g -> g
    void a(int) -> a
    void a(java.lang.String,java.lang.String,byte[]) -> a
    void b(int) -> b
    void a(com.iflytek.sunflower.c.a$a) -> a
    void b(com.iflytek.sunflower.c.a$a) -> b
    java.net.URL a(java.lang.String,java.lang.String) -> a
    void run() -> run
    byte[] a(java.io.InputStream) -> a
    void b() -> b
    void b(byte[]) -> b
    void a(byte[]) -> a
    void a(java.lang.Exception) -> a
    int c() -> c
    void a() -> a
    boolean a(java.lang.String) -> a
com.iflytek.sunflower.c.a$a -> com.iflytek.sunflower.c.a$a:
    void a(com.iflytek.sunflower.c.a,byte[]) -> a
    void a(byte[]) -> a
    void a(java.lang.Exception) -> a
com.iflytek.sunflower.c.b -> com.iflytek.sunflower.c.b:
    android.content.Context b -> b
    java.lang.String a -> a
    int c -> c
    void a(org.json.JSONObject,int) -> a
    void a(org.json.JSONObject) -> a
    void a() -> a
    int a(com.iflytek.sunflower.c.b) -> a
    void a(com.iflytek.sunflower.c.b,org.json.JSONObject) -> a
    android.content.Context b(com.iflytek.sunflower.c.b) -> b
    void c(com.iflytek.sunflower.c.b) -> c
com.iflytek.sunflower.c.c -> com.iflytek.sunflower.c.c:
    org.json.JSONObject a -> a
    com.iflytek.sunflower.c.b b -> b
    void a(java.lang.Exception) -> a
    void a(com.iflytek.sunflower.c.a,byte[]) -> a
    void a(byte[]) -> a
com.iflytek.sunflower.d -> com.iflytek.sunflower.d:
    long a -> a
    android.content.SharedPreferences a(android.content.Context) -> a
    android.content.SharedPreferences b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    long a(android.content.Context,java.lang.String) -> a
    boolean a(java.io.File) -> a
    org.json.JSONObject e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    void a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    void g(android.content.Context) -> g
    void a(android.content.Context,java.lang.String,java.lang.Long) -> a
com.iflytek.sunflower.d.a -> com.iflytek.sunflower.d.a:
    long[] a -> a
    java.lang.String[][] b -> b
    java.lang.String[][] c -> c
    com.iflytek.sunflower.d.f d -> d
    boolean e -> e
    com.iflytek.sunflower.d.f a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.content.Context,com.iflytek.sunflower.d.f,java.lang.Boolean) -> a
    void a(com.iflytek.sunflower.d.f,android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.iflytek.sunflower.d.b -> com.iflytek.sunflower.d.b:
    boolean a(java.lang.String,int) -> a
com.iflytek.sunflower.d.c -> com.iflytek.sunflower.d.c:
    byte[] a(byte[]) -> a
    byte[] b(byte[]) -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
com.iflytek.sunflower.d.d -> com.iflytek.sunflower.d.d:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    android.content.Context b -> b
    com.iflytek.sunflower.d.d c -> c
    void a(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    java.lang.String a(java.lang.Throwable) -> a
com.iflytek.sunflower.d.e -> com.iflytek.sunflower.d.e:
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    android.location.Location d(android.content.Context) -> d
    long[] e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String a(java.lang.String) -> a
com.iflytek.sunflower.d.f -> com.iflytek.sunflower.d.f:
    java.util.HashMap a -> a
    void a() -> a
    com.iflytek.sunflower.d.f b() -> b
    void a(java.lang.String,java.lang.String) -> a
    java.util.HashMap c() -> c
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String toString() -> toString
    java.lang.String a(java.lang.String) -> a
    void d() -> d
    java.lang.Object clone() -> clone
com.iflytek.sunflower.d.g -> com.iflytek.sunflower.d.g:
    boolean a -> a
    boolean b -> b
    void a(boolean) -> a
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String,java.lang.String) -> b
    void b(java.lang.String,java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String,java.lang.String) -> c
    void c(java.lang.String,java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    void b(boolean) -> b
    void e(java.lang.String,java.lang.String) -> e
    void f(java.lang.String,java.lang.String) -> f
com.iflytek.sunflower.d.h -> com.iflytek.sunflower.d.h:
    java.lang.String a(android.net.NetworkInfo) -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.net.NetworkInfo) -> b
com.iflytek.sunflower.e -> com.iflytek.sunflower.e:
    org.json.JSONObject a(com.iflytek.sunflower.b.a,org.json.JSONObject) -> a
    org.json.JSONObject a(com.iflytek.sunflower.b.b,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONObject,org.json.JSONObject) -> a
    org.json.JSONObject a(android.content.Context) -> a
    org.json.JSONObject b(org.json.JSONObject,org.json.JSONObject) -> b
    org.json.JSONObject a(org.json.JSONArray,org.json.JSONObject) -> a
    org.json.JSONObject a(boolean,com.iflytek.sunflower.d.f,java.lang.String) -> a
    org.json.JSONObject a(com.iflytek.sunflower.b.d) -> a
    org.json.JSONObject a(java.util.ArrayList) -> a
    org.json.JSONArray b(java.util.ArrayList) -> b
    long[] b(android.content.Context) -> b
    int c(android.content.Context) -> c
    int d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
com.iflytek.sunflower.f -> com.iflytek.sunflower.f:
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.HashMap f -> f
    java.util.ArrayList g -> g
    java.util.ArrayList h -> h
    java.util.Stack a -> a
    java.util.ArrayList b -> b
    java.lang.Object c -> c
    void a(com.iflytek.sunflower.b.d) -> a
    void b(com.iflytek.sunflower.b.d) -> b
    void a(com.iflytek.sunflower.b.a) -> a
    void c(com.iflytek.sunflower.b.d) -> c
    void a(com.iflytek.sunflower.b.b) -> a
    void a(com.iflytek.sunflower.b.c) -> a
    void a(com.iflytek.sunflower.b.e) -> a
    java.util.ArrayList a() -> a
    java.util.ArrayList b() -> b
    java.util.ArrayList c() -> c
    java.util.ArrayList d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    int k() -> k
com.iflytek.sunflower.task.SendTask -> com.iflytek.sunflower.task.SendTask:
    com.iflytek.sunflower.c.b a -> a
    android.content.Context b -> b
    void run() -> run
    void send() -> send
    org.json.JSONObject a() -> a
com.iflytek.sunflower.task.a -> com.iflytek.sunflower.task.a:
    android.content.Context b -> b
    void a() -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONObject b() -> b
com.iflytek.sunflower.task.b -> com.iflytek.sunflower.task.b:
    com.iflytek.sunflower.b.c a -> a
    void run() -> run
    void a() -> a
com.iflytek.sunflower.task.c -> com.iflytek.sunflower.task.c:
    com.iflytek.sunflower.b.d a -> a
    int b -> b
    void run() -> run
    void a() -> a
    void b() -> b
    void c() -> c
    java.lang.Boolean a(java.lang.String,java.lang.String,java.util.HashMap,long) -> a
com.iflytek.sunflower.task.d -> com.iflytek.sunflower.task.d:
    com.iflytek.sunflower.c.b a -> a
    org.json.JSONObject b -> b
    android.content.Context c -> c
    java.lang.String d -> d
    java.util.HashMap e -> e
    void run() -> run
    void a(java.lang.String) -> a
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    org.json.JSONArray a() -> a
    org.json.JSONArray b() -> b
    org.json.JSONObject f() -> f
com.iflytek.sunflower.task.e -> com.iflytek.sunflower.task.e:
    com.iflytek.sunflower.c.a$a a -> a
    void run() -> run
    void a() -> a
    void a(org.json.JSONObject) -> a
com.iflytek.sunflower.task.f -> com.iflytek.sunflower.task.f:
    com.iflytek.sunflower.task.e a -> a
    void a(com.iflytek.sunflower.c.a,byte[]) -> a
    void a(java.lang.Exception) -> a
    void a(byte[]) -> a
com.iflytek.sunflower.task.g -> com.iflytek.sunflower.task.g:
    android.content.Context a -> a
    void run() -> run
    void a() -> a
    android.content.SharedPreferences$Editor a(android.content.SharedPreferences,java.util.ArrayList,long,long) -> a
com.iflytek.sunflower.task.h -> com.iflytek.sunflower.task.h:
    android.content.Context a -> a
    void run() -> run
    void a() -> a
    void a(android.content.SharedPreferences) -> a
    void b(android.content.SharedPreferences) -> b
    boolean c(android.content.SharedPreferences) -> c
    java.util.ArrayList d(android.content.SharedPreferences) -> d
    java.lang.String a(long) -> a
com.iflytek.sunflower.task.i -> com.iflytek.sunflower.task.i:
    android.content.Context b -> b
    com.iflytek.sunflower.OnlineConfigListener c -> c
    android.os.Handler d -> d
    void a() -> a
    void a(org.json.JSONObject) -> a
    org.json.JSONObject b() -> b
    com.iflytek.sunflower.OnlineConfigListener a(com.iflytek.sunflower.task.i) -> a
com.iflytek.sunflower.task.j -> com.iflytek.sunflower.task.j:
    com.iflytek.sunflower.task.i a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.Animator -> com.a.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    void cancel() -> b
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    com.nineoldandroids.animation.Animator clone() -> c
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.FloatEvaluator -> com.a.a.b:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.FloatKeyframeSet -> com.a.a.c:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> b
    float getFloatValue(float) -> b
    com.nineoldandroids.animation.KeyframeSet clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.a.a.d:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.IntKeyframeSet -> com.a.a.e:
    int firstValue -> g
    int lastValue -> h
    int deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.nineoldandroids.animation.IntKeyframeSet clone() -> b
    int getIntValue(float) -> b
    com.nineoldandroids.animation.KeyframeSet clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe -> com.a.a.f:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.nineoldandroids.animation.Keyframe ofInt(float,int) -> a
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    java.lang.Object getValue() -> a
    void setValue(java.lang.Object) -> a
    float getFraction() -> b
    android.view.animation.Interpolator getInterpolator() -> c
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.animation.Keyframe clone() -> d
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.a.a.g:
    float mValue -> d
    float getFloatValue() -> e
    java.lang.Object getValue() -> a
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> f
    com.nineoldandroids.animation.Keyframe clone() -> d
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$IntKeyframe -> com.a.a.h:
    int mValue -> d
    int getIntValue() -> e
    java.lang.Object getValue() -> a
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> f
    com.nineoldandroids.animation.Keyframe clone() -> d
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.a.a.i:
    int mNumKeyframes -> a
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.nineoldandroids.animation.KeyframeSet clone() -> a
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.a.a.j:
    java.util.Map PROXY_PROPERTIES -> h
    java.lang.Object mTarget -> i
    java.lang.String mPropertyName -> j
    com.nineoldandroids.util.Property mProperty -> k
    com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> a
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setIntValues(int[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> d
    void animateValue(float) -> a
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> e
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.a.a.k:
    com.nineoldandroids.util.Property ALPHA -> a
    com.nineoldandroids.util.Property PIVOT_X -> b
    com.nineoldandroids.util.Property PIVOT_Y -> c
    com.nineoldandroids.util.Property TRANSLATION_X -> d
    com.nineoldandroids.util.Property TRANSLATION_Y -> e
    com.nineoldandroids.util.Property ROTATION -> f
    com.nineoldandroids.util.Property ROTATION_X -> g
    com.nineoldandroids.util.Property ROTATION_Y -> h
    com.nineoldandroids.util.Property SCALE_X -> i
    com.nineoldandroids.util.Property SCALE_Y -> j
    com.nineoldandroids.util.Property SCROLL_X -> k
    com.nineoldandroids.util.Property SCROLL_Y -> l
    com.nineoldandroids.util.Property X -> m
    com.nineoldandroids.util.Property Y -> n
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.a.a.l:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.a.a.m:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.a.a.n:
    void setValue(java.lang.Object,int) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.a.a.o:
    void setValue(java.lang.Object,int) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.a.a.p:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.a.a.q:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.a.a.r:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.a.a.s:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.a.a.t:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.a.a.u:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.a.a.v:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.a.a.w:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.a.a.x:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.a.a.y:
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PropertyValuesHolder -> com.a.a.z:
    java.lang.String mPropertyName -> a
    com.nineoldandroids.util.Property mProperty -> b
    java.lang.reflect.Method mSetter -> c
    java.lang.reflect.Method mGetter -> h
    java.lang.Class mValueType -> d
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> e
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> i
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> j
    java.lang.Class[] FLOAT_VARIANTS -> k
    java.lang.Class[] INTEGER_VARIANTS -> l
    java.lang.Class[] DOUBLE_VARIANTS -> m
    java.util.HashMap sSetterPropertyMap -> n
    java.util.HashMap sGetterPropertyMap -> o
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> f
    java.lang.Object[] mTmpValueArray -> g
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> p
    java.lang.Object mAnimatedValue -> q
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofInt(com.nineoldandroids.util.Property,int[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> a
    void setIntValues(int[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupSetterAndGetter(java.lang.Object) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.a.a.aa:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> j
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> h
    float mFloatAnimatedValue -> i
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.a.a.ab:
    com.nineoldandroids.util.IntProperty mIntProperty -> j
    com.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> h
    int mIntAnimatedValue -> i
    void setIntValues(int[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TypeEvaluator -> com.a.a.ac:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.ValueAnimator -> com.a.a.ad:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> o
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> p
    boolean mPlayingBackwards -> q
    int mCurrentIteration -> r
    float mCurrentFraction -> s
    boolean mStartedDelay -> t
    long mDelayStartTime -> u
    int mPlayingState -> d
    boolean mRunning -> v
    boolean mStarted -> w
    boolean mInitialized -> e
    long mDuration -> x
    long mStartDelay -> y
    long sFrameDelay -> z
    int mRepeatCount -> A
    int mRepeatMode -> B
    android.view.animation.Interpolator mInterpolator -> C
    java.util.ArrayList mUpdateListeners -> D
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    void setIntValues(int[]) -> a
    void setFloatValues(float[]) -> a
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> d
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> b
    void setCurrentPlayTime(long) -> d
    void start() -> a
    void cancel() -> b
    void endAnimation() -> l
    boolean animationFrame(long) -> c
    void animateValue(float) -> a
    com.nineoldandroids.animation.ValueAnimator clone() -> e
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> f
    java.lang.ThreadLocal access$100() -> g
    java.lang.ThreadLocal access$200() -> h
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> a
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$500() -> i
    java.lang.ThreadLocal access$600() -> j
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> a
    boolean access$802$15bf748b(com.nineoldandroids.animation.ValueAnimator) -> c
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> d
    long access$1000() -> k
com.nineoldandroids.animation.ValueAnimator$1 -> com.a.a.ae:
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.a.a.af:
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.a.a.ag:
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.a.a.ah:
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.a.a.ai:
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.a.a.aj:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.util.FloatProperty -> com.a.b.a:
    void setValue(java.lang.Object,float) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.IntProperty -> com.a.b.b:
    void setValue(java.lang.Object,int) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.Property -> com.a.b.c:
    java.lang.String mName -> a
    java.lang.Class mType -> b
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.String getName() -> a
com.nineoldandroids.view.animation.AnimatorProxy -> com.a.c.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    android.view.View mView -> c
    android.view.ViewGroup mViewParent -> d
    android.graphics.Camera mCamera -> e
    boolean mHasPivot -> f
    float mAlpha -> g
    float mPivotX -> h
    float mPivotY -> i
    float mRotationX -> j
    float mRotationY -> k
    float mRotationZ -> l
    float mScaleX -> m
    float mScaleY -> n
    float mTranslationX -> o
    float mTranslationY -> p
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    float getPivotX() -> b
    void setPivotX(float) -> b
    float getPivotY() -> c
    void setPivotY(float) -> c
    float getRotation() -> d
    void setRotation(float) -> d
    float getRotationX() -> e
    void setRotationX(float) -> e
    float getRotationY() -> f
    void setRotationY(float) -> f
    float getScaleX() -> g
    void setScaleX(float) -> g
    float getScaleY() -> h
    void setScaleY(float) -> h
    int getScrollX() -> i
    void setScrollX(int) -> a
    int getScrollY() -> j
    void setScrollY(int) -> b
    float getTranslationX() -> k
    void setTranslationX(float) -> i
    float getTranslationY() -> l
    void setTranslationY(float) -> j
    float getX() -> m
    void setX(float) -> k
    float getY() -> n
    void setY(float) -> l
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.thoughtworks.xstream.InitializationException -> com.thoughtworks.xstream.InitializationException:
com.thoughtworks.xstream.MarshallingStrategy -> com.thoughtworks.xstream.MarshallingStrategy:
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.DefaultConverterLookup,com.thoughtworks.xstream.alias.ClassMapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.core.DefaultConverterLookup,com.thoughtworks.xstream.alias.ClassMapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
com.thoughtworks.xstream.XStream -> com.thoughtworks.xstream.XStream:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver -> hierarchicalStreamDriver
    com.thoughtworks.xstream.core.util.ClassLoaderReference classLoaderReference -> classLoaderReference
    com.thoughtworks.xstream.MarshallingStrategy marshallingStrategy -> marshallingStrategy
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.mapper.PackageAliasingMapper packageAliasingMapper -> packageAliasingMapper
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeAliasingMapper attributeAliasingMapper -> attributeAliasingMapper
    com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper systemAttributeAliasingMapper -> systemAttributeAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImmutableTypesMapper immutableTypesMapper -> immutableTypesMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    com.thoughtworks.xstream.mapper.AnnotationConfiguration annotationConfiguration -> annotationConfiguration
    com.thoughtworks.xstream.core.JVM jvm -> jvm
    int NO_REFERENCES -> NO_REFERENCES
    int ID_REFERENCES -> ID_REFERENCES
    int XPATH_RELATIVE_REFERENCES -> XPATH_RELATIVE_REFERENCES
    int XPATH_ABSOLUTE_REFERENCES -> XPATH_ABSOLUTE_REFERENCES
    int XPATH_REFERENCES -> XPATH_REFERENCES
    int PRIORITY_VERY_HIGH -> PRIORITY_VERY_HIGH
    int PRIORITY_NORMAL -> PRIORITY_NORMAL
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_VERY_LOW -> PRIORITY_VERY_LOW
    java.lang.String ANNOTATION_MAPPER_TYPE -> ANNOTATION_MAPPER_TYPE
    com.thoughtworks.xstream.mapper.Mapper buildMapper() -> buildMapper
    com.thoughtworks.xstream.mapper.Mapper buildMapperDynamically(java.lang.String,java.lang.Class[],java.lang.Object[]) -> buildMapperDynamically
    com.thoughtworks.xstream.mapper.MapperWrapper wrapMapper(com.thoughtworks.xstream.mapper.MapperWrapper) -> wrapMapper
    boolean useXStream11XmlFriendlyMapper() -> useXStream11XmlFriendlyMapper
    void setupMappers() -> setupMappers
    void setupAliases() -> setupAliases
    void setupDefaultImplementations() -> setupDefaultImplementations
    void setupConverters() -> setupConverters
    void dynamicallyRegisterConverter(java.lang.String,int,java.lang.Class[],java.lang.Object[]) -> dynamicallyRegisterConverter
    void setupImmutableTypes() -> setupImmutableTypes
    void setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy) -> setMarshallingStrategy
    java.lang.String toXML(java.lang.Object) -> toXML
    void toXML(java.lang.Object,java.io.Writer) -> toXML
    void toXML(java.lang.Object,java.io.OutputStream) -> toXML
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshal
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(java.io.InputStream) -> fromXML
    java.lang.Object fromXML(java.lang.String,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.Reader,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.InputStream,java.lang.Object) -> fromXML
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> unmarshal
    void alias(java.lang.String,java.lang.Class) -> alias
    void aliasType(java.lang.String,java.lang.Class) -> aliasType
    void alias(java.lang.String,java.lang.Class,java.lang.Class) -> alias
    void aliasPackage(java.lang.String,java.lang.String) -> aliasPackage
    void aliasField(java.lang.String,java.lang.Class,java.lang.String) -> aliasField
    void aliasAttribute(java.lang.String,java.lang.String) -> aliasAttribute
    void aliasSystemAttribute(java.lang.String,java.lang.String) -> aliasSystemAttribute
    void aliasAttribute(java.lang.Class,java.lang.String,java.lang.String) -> aliasAttribute
    void useAttributeFor(java.lang.String,java.lang.Class) -> useAttributeFor
    void useAttributeFor(java.lang.Class,java.lang.String) -> useAttributeFor
    void useAttributeFor(java.lang.Class) -> useAttributeFor
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    void addImmutableType(java.lang.Class) -> addImmutableType
    void registerConverter(com.thoughtworks.xstream.converters.Converter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int) -> registerConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.SingleValueConverter) -> registerLocalConverter
    com.thoughtworks.xstream.alias.ClassMapper getClassMapper() -> getClassMapper
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider getReflectionProvider() -> getReflectionProvider
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    void setMode(int) -> setMode
    void addImplicitCollection(java.lang.Class,java.lang.String) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.Class) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> addImplicitCollection
    com.thoughtworks.xstream.converters.DataHolder newDataHolder() -> newDataHolder
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String) -> createObjectOutputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.Reader) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.InputStream) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> createObjectInputStream
    void setClassLoader(java.lang.ClassLoader) -> setClassLoader
    java.lang.ClassLoader getClassLoader() -> getClassLoader
    void omitField(java.lang.Class,java.lang.String) -> omitField
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    java.lang.Object readResolve() -> readResolve
    com.thoughtworks.xstream.mapper.Mapper access$0(com.thoughtworks.xstream.XStream) -> access$0
com.thoughtworks.xstream.XStream$1 -> com.thoughtworks.xstream.a:
    com.thoughtworks.xstream.XStream this$0 -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.XStream$2 -> com.thoughtworks.xstream.b:
    com.thoughtworks.xstream.XStream this$0 -> a
    com.thoughtworks.xstream.io.StatefulWriter val$statefulWriter -> b
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.XStream$3 -> com.thoughtworks.xstream.c:
    com.thoughtworks.xstream.XStream this$0 -> a
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> b
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.XStream$InitializationException -> com.thoughtworks.xstream.XStream$InitializationException:
com.thoughtworks.xstream.XStreamException -> com.thoughtworks.xstream.XStreamException:
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.XStreamer -> com.thoughtworks.xstream.XStreamer:
    java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object) -> toXML
    void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer) -> toXML
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader) -> fromXML
com.thoughtworks.xstream.alias.CannotResolveClassException -> com.thoughtworks.xstream.alias.CannotResolveClassException:
com.thoughtworks.xstream.alias.ClassMapper -> com.thoughtworks.xstream.alias.ClassMapper:
com.thoughtworks.xstream.alias.ClassMapper$Null -> com.thoughtworks.xstream.alias.ClassMapper$Null:
com.thoughtworks.xstream.alias.NameMapper -> com.thoughtworks.xstream.alias.NameMapper:
    java.lang.String fromXML(java.lang.String) -> fromXML
    java.lang.String toXML(java.lang.String) -> toXML
com.thoughtworks.xstream.annotations.AnnotationProvider -> com.thoughtworks.xstream.annotations.AnnotationProvider:
    java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class) -> getAnnotation
com.thoughtworks.xstream.annotations.AnnotationReflectionConverter -> com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:
    com.thoughtworks.xstream.annotations.AnnotationProvider annotationProvider -> annotationProvider
    java.util.Map cachedConverters -> cachedConverters
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    void ensureCache(java.lang.Class) -> ensureCache
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    com.thoughtworks.xstream.converters.Converter newInstance(java.lang.Class) -> newInstance
com.thoughtworks.xstream.annotations.Annotations -> com.thoughtworks.xstream.annotations.Annotations:
    void configureAliases(com.thoughtworks.xstream.XStream,java.lang.Class[]) -> configureAliases
com.thoughtworks.xstream.annotations.XStreamAlias -> com.thoughtworks.xstream.annotations.XStreamAlias:
    java.lang.String value() -> value
    java.lang.Class impl() -> impl
com.thoughtworks.xstream.annotations.XStreamAsAttribute -> com.thoughtworks.xstream.annotations.XStreamAsAttribute:
com.thoughtworks.xstream.annotations.XStreamContainedType -> com.thoughtworks.xstream.annotations.XStreamContainedType:
com.thoughtworks.xstream.annotations.XStreamConverter -> com.thoughtworks.xstream.annotations.XStreamConverter:
    java.lang.Class value() -> value
com.thoughtworks.xstream.annotations.XStreamConverters -> com.thoughtworks.xstream.annotations.XStreamConverters:
    com.thoughtworks.xstream.annotations.XStreamConverter[] value() -> value
com.thoughtworks.xstream.annotations.XStreamImplicit -> com.thoughtworks.xstream.annotations.XStreamImplicit:
    java.lang.String itemFieldName() -> itemFieldName
com.thoughtworks.xstream.annotations.XStreamImplicitCollection -> com.thoughtworks.xstream.annotations.XStreamImplicitCollection:
    java.lang.String value() -> value
    java.lang.String item() -> item
com.thoughtworks.xstream.annotations.XStreamInclude -> com.thoughtworks.xstream.annotations.XStreamInclude:
    java.lang.Class[] value() -> value
com.thoughtworks.xstream.annotations.XStreamOmitField -> com.thoughtworks.xstream.annotations.XStreamOmitField:
com.thoughtworks.xstream.converters.ConversionException -> com.thoughtworks.xstream.converters.ConversionException:
    java.lang.String SEPARATOR -> SEPARATOR
    java.util.Map stuff -> stuff
    java.lang.String get(java.lang.String) -> get
    void add(java.lang.String,java.lang.String) -> add
    java.util.Iterator keys() -> keys
    java.lang.String getMessage() -> getMessage
    java.lang.String getShortMessage() -> getShortMessage
com.thoughtworks.xstream.converters.Converter -> com.thoughtworks.xstream.converters.Converter:
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.ConverterLookup -> com.thoughtworks.xstream.converters.ConverterLookup:
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
com.thoughtworks.xstream.converters.ConverterMatcher -> com.thoughtworks.xstream.converters.ConverterMatcher:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.ConverterRegistry -> com.thoughtworks.xstream.converters.ConverterRegistry:
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
com.thoughtworks.xstream.converters.DataHolder -> com.thoughtworks.xstream.converters.DataHolder:
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.ErrorWriter -> com.thoughtworks.xstream.converters.ErrorWriter:
    void add(java.lang.String,java.lang.String) -> add
    java.lang.String get(java.lang.String) -> get
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.MarshallingContext -> com.thoughtworks.xstream.converters.MarshallingContext:
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
com.thoughtworks.xstream.converters.SingleValueConverter -> com.thoughtworks.xstream.converters.SingleValueConverter:
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.SingleValueConverterWrapper -> com.thoughtworks.xstream.converters.SingleValueConverterWrapper:
    com.thoughtworks.xstream.converters.SingleValueConverter wrapped -> wrapped
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.UnmarshallingContext -> com.thoughtworks.xstream.converters.UnmarshallingContext:
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
com.thoughtworks.xstream.converters.basic.AbstractBasicConverter -> com.thoughtworks.xstream.converters.basic.AbstractBasicConverter:
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter -> com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigDecimalConverter -> com.thoughtworks.xstream.converters.basic.BigDecimalConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigIntegerConverter -> com.thoughtworks.xstream.converters.basic.BigIntegerConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BooleanConverter -> com.thoughtworks.xstream.converters.basic.BooleanConverter:
    com.thoughtworks.xstream.converters.basic.BooleanConverter TRUE_FALSE -> TRUE_FALSE
    com.thoughtworks.xstream.converters.basic.BooleanConverter YES_NO -> YES_NO
    com.thoughtworks.xstream.converters.basic.BooleanConverter BINARY -> BINARY
    java.lang.String positive -> positive
    java.lang.String negative -> negative
    boolean caseSensitive -> caseSensitive
    boolean shouldConvert(java.lang.Class,java.lang.Object) -> shouldConvert
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.ByteConverter -> com.thoughtworks.xstream.converters.basic.ByteConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.CharConverter -> com.thoughtworks.xstream.converters.basic.CharConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.DateConverter -> com.thoughtworks.xstream.converters.basic.DateConverter:
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat defaultFormat -> defaultFormat
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat[] acceptableFormats -> acceptableFormats
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.DoubleConverter -> com.thoughtworks.xstream.converters.basic.DoubleConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.FloatConverter -> com.thoughtworks.xstream.converters.basic.FloatConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.IntConverter -> com.thoughtworks.xstream.converters.basic.IntConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.LongConverter -> com.thoughtworks.xstream.converters.basic.LongConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.NullConverter -> com.thoughtworks.xstream.converters.basic.NullConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.basic.ShortConverter -> com.thoughtworks.xstream.converters.basic.ShortConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.StringBufferConverter -> com.thoughtworks.xstream.converters.basic.StringBufferConverter:
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringBuilderConverter -> com.thoughtworks.xstream.converters.basic.StringBuilderConverter:
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringConverter -> com.thoughtworks.xstream.converters.basic.StringConverter:
    java.util.Map cache -> cache
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.ThreadSafeSimpleDateFormat -> com.thoughtworks.xstream.converters.basic.ThreadSafeSimpleDateFormat:
    java.lang.String format(java.util.Date) -> format
    java.util.Date parse(java.lang.String) -> parse
com.thoughtworks.xstream.converters.basic.URLConverter -> com.thoughtworks.xstream.converters.basic.URLConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.UUIDConverter -> com.thoughtworks.xstream.converters.basic.UUIDConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter -> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    com.thoughtworks.xstream.mapper.Mapper mapper() -> mapper
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.ArrayConverter -> com.thoughtworks.xstream.converters.collections.ArrayConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.BitSetConverter -> com.thoughtworks.xstream.converters.collections.BitSetConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CharArrayConverter -> com.thoughtworks.xstream.converters.collections.CharArrayConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CollectionConverter -> com.thoughtworks.xstream.converters.collections.CollectionConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection) -> populateCollection
com.thoughtworks.xstream.converters.collections.MapConverter -> com.thoughtworks.xstream.converters.collections.MapConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map) -> populateMap
com.thoughtworks.xstream.converters.collections.PropertiesConverter -> com.thoughtworks.xstream.converters.collections.PropertiesConverter:
    java.lang.reflect.Field defaultsField -> defaultsField
    boolean sort -> sort
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.TreeMapConverter -> com.thoughtworks.xstream.converters.collections.TreeMapConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.TreeMapConverter$PresortedMap -> com.thoughtworks.xstream.converters.collections.a:
    com.thoughtworks.xstream.converters.collections.TreeMapConverter$PresortedMap$ArraySet set -> a
    java.util.Comparator comparator -> b
    java.util.Comparator comparator() -> comparator
    java.util.Set entrySet() -> entrySet
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.Set keySet() -> keySet
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
com.thoughtworks.xstream.converters.collections.TreeMapConverter$PresortedMap$1 -> com.thoughtworks.xstream.converters.collections.b:
    com.thoughtworks.xstream.converters.collections.TreeMapConverter$PresortedMap this$1 -> a
    java.lang.Object val$key -> b
    java.lang.Object val$value -> c
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.thoughtworks.xstream.converters.collections.TreeMapConverter$PresortedMap$ArraySet -> com.thoughtworks.xstream.converters.collections.c:
com.thoughtworks.xstream.converters.collections.TreeSetConverter -> com.thoughtworks.xstream.converters.collections.TreeSetConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.TreeSetConverter$PresortedSet -> com.thoughtworks.xstream.converters.collections.d:
    java.util.List list -> a
    java.util.Comparator comparator -> b
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.thoughtworks.xstream.converters.enums.EnumConverter -> com.thoughtworks.xstream.converters.enums.EnumConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumMapConverter -> com.thoughtworks.xstream.converters.enums.EnumMapConverter:
    java.lang.reflect.Field typeField -> typeField
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumSetConverter -> com.thoughtworks.xstream.converters.enums.EnumSetConverter:
    java.lang.reflect.Field typeField -> typeField
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.String joinEnumValues(java.util.EnumSet) -> joinEnumValues
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter -> com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter:
    java.lang.Class enumType -> enumType
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.CharsetConverter -> com.thoughtworks.xstream.converters.extended.CharsetConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.ColorConverter -> com.thoughtworks.xstream.converters.extended.ColorConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> write
com.thoughtworks.xstream.converters.extended.CurrencyConverter -> com.thoughtworks.xstream.converters.extended.CurrencyConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DurationConverter -> com.thoughtworks.xstream.converters.extended.DurationConverter:
    javax.xml.datatype.DatatypeFactory factory -> factory
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter -> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:
    java.lang.ClassLoader classLoader -> classLoader
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> addInterfacesToXml
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter -> com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:
    com.thoughtworks.xstream.core.util.Base64Encoder base64 -> base64
    com.thoughtworks.xstream.converters.basic.ByteConverter byteConverter -> byteConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalIndividualByteElements
com.thoughtworks.xstream.converters.extended.FileConverter -> com.thoughtworks.xstream.converters.extended.FileConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.FontConverter -> com.thoughtworks.xstream.converters.extended.FontConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ISO8601DateConverter -> com.thoughtworks.xstream.converters.extended.ISO8601DateConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter:
    org.joda.time.format.DateTimeFormatter[] formattersUTC -> formattersUTC
    org.joda.time.format.DateTimeFormatter[] formattersNoUTC -> formattersNoUTC
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter:
    java.lang.String PADDING -> PADDING
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.JavaClassConverter -> com.thoughtworks.xstream.converters.extended.JavaClassConverter:
    java.lang.ClassLoader classLoader -> classLoader
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.Class primitiveClassForName(java.lang.String) -> primitiveClassForName
com.thoughtworks.xstream.converters.extended.JavaMethodConverter -> com.thoughtworks.xstream.converters.extended.JavaMethodConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter javaClassConverter -> javaClassConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[]) -> marshalMethod
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.LocaleConverter -> com.thoughtworks.xstream.converters.extended.LocaleConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    int[] underscorePositions(java.lang.String) -> underscorePositions
com.thoughtworks.xstream.converters.extended.LookAndFeelConverter -> com.thoughtworks.xstream.converters.extended.LookAndFeelConverter:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter -> com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor editor -> editor
    java.lang.Class type -> type
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.RegexPatternConverter -> com.thoughtworks.xstream.converters.extended.RegexPatternConverter:
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.SqlDateConverter -> com.thoughtworks.xstream.converters.extended.SqlDateConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimeConverter -> com.thoughtworks.xstream.converters.extended.SqlTimeConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.StackTraceElementConverter -> com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:
    java.util.regex.Pattern PATTERN -> PATTERN
    com.thoughtworks.xstream.converters.extended.StackTraceElementFactory FACTORY -> FACTORY
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.StackTraceElementFactory -> com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:
    java.lang.StackTraceElement nativeMethodElement(java.lang.String,java.lang.String) -> nativeMethodElement
    java.lang.StackTraceElement unknownSourceElement(java.lang.String,java.lang.String) -> unknownSourceElement
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String) -> element
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String,int) -> element
    java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int) -> create
    void setField(java.lang.StackTraceElement,java.lang.String,java.lang.Object) -> setField
com.thoughtworks.xstream.converters.extended.SubjectConverter -> com.thoughtworks.xstream.converters.extended.SubjectConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrincipals
    void marshalPublicCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPublicCredentials
    void marshalPrivateCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrivateCredentials
    void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshalReadOnly
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.util.Set unmarshalPrincipals(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrincipals
    java.util.Set unmarshalPublicCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPublicCredentials
    java.util.Set unmarshalPrivateCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrivateCredentials
    boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshalReadOnly
    java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> populateSet
com.thoughtworks.xstream.converters.extended.TextAttributeConverter -> com.thoughtworks.xstream.converters.extended.TextAttributeConverter:
com.thoughtworks.xstream.converters.extended.ThrowableConverter -> com.thoughtworks.xstream.converters.extended.ThrowableConverter:
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ToStringConverter -> com.thoughtworks.xstream.converters.extended.ToStringConverter:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor ctor -> ctor
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.javabean.BeanProperty -> com.thoughtworks.xstream.converters.javabean.BeanProperty:
    java.lang.Class memberClass -> memberClass
    java.lang.String propertyName -> propertyName
    java.lang.Class type -> type
    java.lang.reflect.Method getter -> getter
    java.lang.reflect.Method setter -> setter
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    java.lang.Class getBeanClass() -> getBeanClass
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    boolean isReadable() -> isReadable
    boolean isWritable() -> isWritable
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object set(java.lang.Object,java.lang.Object) -> set
    void setGetterMethod(java.lang.reflect.Method) -> setGetterMethod
    void setSetterMethod(java.lang.reflect.Method) -> setSetterMethod
com.thoughtworks.xstream.converters.javabean.BeanProvider -> com.thoughtworks.xstream.converters.javabean.BeanProvider:
    java.lang.Object[] NO_PARAMS -> NO_PARAMS
    java.util.Comparator propertyNameComparator -> propertyNameComparator
    java.util.Map propertyNameCache -> propertyNameCache
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor) -> visitSerializableProperties
    void writeProperty(java.lang.Object,java.lang.String,java.lang.Object) -> writeProperty
    java.lang.Class getPropertyType(java.lang.Object,java.lang.String) -> getPropertyType
    boolean propertyDefinedInClass(java.lang.String,java.lang.Class) -> propertyDefinedInClass
    boolean canInstantiate(java.lang.Class) -> canInstantiate
    java.lang.reflect.Constructor getDefaultConstrutor(java.lang.Class) -> getDefaultConstrutor
    java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object) -> getSerializableProperties
    boolean canStreamProperty(java.beans.PropertyDescriptor) -> canStreamProperty
    boolean propertyWriteable(java.lang.String,java.lang.Class) -> propertyWriteable
    java.beans.PropertyDescriptor getProperty(java.lang.String,java.lang.Class) -> getProperty
    java.util.Map getNameMap(java.lang.Class) -> getNameMap
com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor -> com.thoughtworks.xstream.converters.javabean.a:
    boolean shouldVisit(java.lang.String,java.lang.Class) -> a
    void visit$7f8d7605(java.lang.String,java.lang.Class,java.lang.Object) -> a
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.javabean.BeanProvider beanProvider -> beanProvider
    java.lang.String classAttributeIdentifier -> classAttributeIdentifier
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String) -> determineType
    com.thoughtworks.xstream.mapper.Mapper access$0(com.thoughtworks.xstream.converters.javabean.JavaBeanConverter) -> access$0
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1 -> com.thoughtworks.xstream.converters.javabean.b:
    com.thoughtworks.xstream.converters.javabean.JavaBeanConverter this$0 -> a
    java.lang.Object val$source -> b
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> c
    java.lang.String val$classAttributeName -> d
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> e
    boolean shouldVisit(java.lang.String,java.lang.Class) -> a
    void visit$7f8d7605(java.lang.String,java.lang.Class,java.lang.Object) -> a
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException:
com.thoughtworks.xstream.converters.javabean.PropertyDictionary -> com.thoughtworks.xstream.converters.javabean.PropertyDictionary:
    java.util.Map keyedByPropertyNameCache -> keyedByPropertyNameCache
    java.util.Iterator serializablePropertiesFor(java.lang.Class) -> serializablePropertiesFor
    com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String) -> property
    java.util.Map buildMap(java.lang.Class) -> buildMap
    com.thoughtworks.xstream.converters.javabean.BeanProperty getBeanProperty(java.util.Map,java.lang.Class,java.lang.String,java.lang.Class) -> getBeanProperty
com.thoughtworks.xstream.converters.javabean.PropertyDictionary$BeanPropertyComparator -> com.thoughtworks.xstream.converters.javabean.c:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.javabean.PropertyDictionary$OrderRetainingMap -> com.thoughtworks.xstream.converters.javabean.d:
    java.util.List valueOrder -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.util.Collection values() -> values
com.thoughtworks.xstream.converters.javabean.PropertyDictionary$PropertyKey -> com.thoughtworks.xstream.converters.javabean.e:
    java.lang.String propertyName -> a
    java.lang.Class propertyType -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter -> com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:
    java.lang.reflect.Method getName -> getName
    java.lang.Class type -> type
    java.util.Map attributeMap -> attributeMap
    com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary -> fieldDictionary
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker serializationMethodInvoker -> serializationMethodInvoker
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider -> pureJavaReflectionProvider
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    boolean shouldUnmarshalTransientFields() -> shouldUnmarshalTransientFields
    java.util.Map writeValueToImplicitCollection(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.util.Map,java.lang.Object,java.lang.String) -> writeValueToImplicitCollection
    java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> determineWhichClassDefinesField
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,boolean,java.lang.Object,java.lang.String,java.lang.Class) -> determineType
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1 -> com.thoughtworks.xstream.converters.reflection.a:
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> a
    java.util.Map val$defaultFieldDefinition -> b
    java.lang.Object val$source -> c
    java.util.Set val$seenFields -> d
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> e
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2 -> com.thoughtworks.xstream.converters.reflection.b:
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> a
    java.util.Set val$seenFields -> b
    java.lang.Object val$source -> c
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> d
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> e
    java.util.Map val$defaultFieldDefinition -> f
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
    void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> a
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException:
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$SeenFields -> com.thoughtworks.xstream.converters.reflection.c:
    java.util.Set seen -> a
    void add(java.lang.Class,java.lang.String) -> a
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String CALLBACK_MARKER -> CALLBACK_MARKER
    java.util.Map fieldCache -> fieldCache
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object) -> getCallbacks
    java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory) -> createCallbackIndexMap
    java.lang.Object[] createNullArguments(java.lang.Class[]) -> createNullArguments
    net.sf.cglib.proxy.Callback createReverseEngineeredCallbackOfProperType(net.sf.cglib.proxy.Callback,int,java.util.Map) -> createReverseEngineeredCallbackOfProperType
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List) -> readCallback
    java.lang.Object create(net.sf.cglib.proxy.Enhancer,java.util.List,boolean) -> create
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider -> com.thoughtworks.xstream.converters.reflection.d:
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.e:
    com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider this$1 -> a
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> b
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter -> com.thoughtworks.xstream.converters.reflection.f:
    java.util.Map callbackIndexMap -> a
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler -> com.thoughtworks.xstream.converters.reflection.g:
    java.lang.Integer index -> a
    java.util.Map indexMap -> b
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    com.thoughtworks.xstream.mapper.Mapper access$0(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter) -> access$0
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1 -> com.thoughtworks.xstream.converters.reflection.h:
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> a
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> b
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> c
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2 -> com.thoughtworks.xstream.converters.reflection.i:
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> a
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> b
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> c
    java.io.Externalizable val$externalizable -> d
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.FieldDictionary -> com.thoughtworks.xstream.converters.reflection.FieldDictionary:
    java.util.Map keyedByFieldNameCache -> keyedByFieldNameCache
    java.util.Map keyedByFieldKeyCache -> keyedByFieldKeyCache
    com.thoughtworks.xstream.converters.reflection.FieldKeySorter sorter -> sorter
    void init() -> init
    java.util.Iterator serializableFieldsFor(java.lang.Class) -> serializableFieldsFor
    java.util.Iterator fieldsFor(java.lang.Class) -> fieldsFor
    java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class) -> field
    java.util.Map buildMap(java.lang.Class,boolean) -> buildMap
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.FieldKey -> com.thoughtworks.xstream.converters.reflection.FieldKey:
    java.lang.String fieldName -> fieldName
    java.lang.Class declaringClass -> declaringClass
    int depth -> depth
    int order -> order
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    int getDepth() -> getDepth
    int getOrder() -> getOrder
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.converters.reflection.FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.FieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.j:
    com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.ObjectAccessException -> com.thoughtworks.xstream.converters.reflection.ObjectAccessException:
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider -> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:
    java.util.Map serializedDataCache -> serializedDataCache
    com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary -> fieldDictionary
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.Object instantiateUsingSerialization(java.lang.Class) -> instantiateUsingSerialization
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    boolean fieldModifiersSupported(java.lang.reflect.Field) -> fieldModifiersSupported
    void validateFieldAccess(java.lang.reflect.Field) -> validateFieldAccess
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    void setFieldDictionary(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> setFieldDictionary
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.ReflectionConverter -> com.thoughtworks.xstream.converters.reflection.ReflectionConverter:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.reflection.ReflectionProvider -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor:
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper -> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped -> wrapped
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker -> com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker:
    java.lang.Object self -> self
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.reflection.SerializableConverter -> com.thoughtworks.xstream.converters.reflection.SerializableConverter:
    java.lang.String ELEMENT_NULL -> ELEMENT_NULL
    java.lang.String ELEMENT_DEFAULT -> ELEMENT_DEFAULT
    java.lang.String ELEMENT_UNSERIALIZABLE_PARENTS -> ELEMENT_UNSERIALIZABLE_PARENTS
    java.lang.String ATTRIBUTE_CLASS -> ATTRIBUTE_CLASS
    java.lang.String ATTRIBUTE_SERIALIZATION -> ATTRIBUTE_SERIALIZATION
    java.lang.String ATTRIBUTE_VALUE_CUSTOM -> ATTRIBUTE_VALUE_CUSTOM
    java.lang.String ELEMENT_FIELDS -> ELEMENT_FIELDS
    java.lang.String ELEMENT_FIELD -> ELEMENT_FIELD
    java.lang.String ATTRIBUTE_NAME -> ATTRIBUTE_NAME
    boolean canConvert(java.lang.Class) -> canConvert
    boolean isSerializable(java.lang.Class) -> isSerializable
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object) -> marshalUnserializableParent
    java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> readField
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshalConditionally
    java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshalConditionally
    java.lang.Object access$0(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> access$0
com.thoughtworks.xstream.converters.reflection.SerializableConverter$1 -> com.thoughtworks.xstream.converters.reflection.k:
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> a
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> b
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> c
    java.lang.Class[] val$currentType -> d
    java.lang.Object val$source -> e
    boolean[] val$writtenClassWrapper -> f
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 -> com.thoughtworks.xstream.converters.reflection.l:
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> a
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> b
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> c
    java.lang.Object val$result -> d
    java.lang.Class[] val$currentType -> e
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1 -> com.thoughtworks.xstream.converters.reflection.m:
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 this$1 -> a
    java.io.ObjectInputValidation val$validation -> b
    void run() -> run
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider -> com.thoughtworks.xstream.converters.reflection.n:
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.o:
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider this$1 -> a
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> b
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker -> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:
    java.util.Map cache -> cache
    java.lang.Object NO_METHOD -> NO_METHOD
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    java.lang.Object callReadResolve(java.lang.Object) -> callReadResolve
    java.lang.Object callWriteReplace(java.lang.Object) -> callWriteReplace
    boolean supportsReadObject(java.lang.Class,boolean) -> supportsReadObject
    void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream) -> callReadObject
    boolean supportsWriteObject(java.lang.Class,boolean) -> supportsWriteObject
    void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream) -> callWriteObject
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) -> getMethod
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:
    java.util.Map map -> map
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
    void registerFieldOrder(java.lang.Class,java.lang.String[]) -> registerFieldOrder
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator -> com.thoughtworks.xstream.converters.reflection.p:
    java.lang.String[] fieldOrder -> b
    com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.q:
    com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.AbstractReferenceMarshaller -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller:
    com.thoughtworks.xstream.core.util.ObjectIdDictionary references -> references
    com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements -> implicitElements
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    com.thoughtworks.xstream.io.path.Path lastPath -> lastPath
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException:
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller -> com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:
    java.util.Map values -> values
    com.thoughtworks.xstream.core.util.FastStack parentStack -> parentStack
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy -> com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.DefaultConverterLookup,com.thoughtworks.xstream.alias.ClassMapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.core.DefaultConverterLookup,com.thoughtworks.xstream.alias.ClassMapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
com.thoughtworks.xstream.core.BaseException -> com.thoughtworks.xstream.core.BaseException:
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.core.DefaultConverterLookup -> com.thoughtworks.xstream.core.DefaultConverterLookup:
    com.thoughtworks.xstream.core.util.PrioritizedList converters -> converters
    java.util.Map typeToConverterMap -> typeToConverterMap
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.JVM -> com.thoughtworks.xstream.core.JVM:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    java.util.Map loaderCache -> loaderCache
    boolean supportsAWT -> supportsAWT
    boolean supportsSwing -> supportsSwing
    boolean supportsSQL -> supportsSQL
    java.lang.String vendor -> vendor
    float majorJavaVersion -> majorJavaVersion
    boolean reverseFieldOrder -> reverseFieldOrder
    float DEFAULT_JAVA_VERSION -> DEFAULT_JAVA_VERSION
    float getMajorJavaVersion() -> getMajorJavaVersion
    boolean is14() -> is14
    boolean is15() -> is15
    boolean is16() -> is16
    boolean isSun() -> isSun
    boolean isApple() -> isApple
    boolean isHPUX() -> isHPUX
    boolean isIBM() -> isIBM
    boolean isBlackdown() -> isBlackdown
    boolean isDiablo() -> isDiablo
    boolean isHarmony() -> isHarmony
    boolean isBEAWithUnsafeSupport() -> isBEAWithUnsafeSupport
    boolean isHitachi() -> isHitachi
    boolean isSAP() -> isSAP
    java.lang.Class loadClass(java.lang.String) -> loadClass
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider() -> bestReflectionProvider
    boolean reverseFieldDefinition() -> reverseFieldDefinition
    boolean supportsAWT() -> supportsAWT
    boolean supportsSwing() -> supportsSwing
    boolean supportsSQL() -> supportsSQL
    java.lang.Object readResolve() -> readResolve
    void main(java.lang.String[]) -> main
com.thoughtworks.xstream.core.MapBackedDataHolder -> com.thoughtworks.xstream.core.MapBackedDataHolder:
    java.util.Map map -> map
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.core.ReferenceByIdMarshaller -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller:
    com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator idGenerator -> idGenerator
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator:
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy:
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.ReferenceByXPathMarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathMarshaller:
    int mode -> mode
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy:
    int RELATIVE -> RELATIVE
    int ABSOLUTE -> ABSOLUTE
    int mode -> mode
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isXmlFriendly -> isXmlFriendly
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.SequenceGenerator -> com.thoughtworks.xstream.core.SequenceGenerator:
    int counter -> counter
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.TreeMarshaller -> com.thoughtworks.xstream.core.TreeMarshaller:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter writer -> writer
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.alias.ClassMapper classMapper -> classMapper
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects -> parentObjects
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> start
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException -> com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException:
com.thoughtworks.xstream.core.TreeMarshallingStrategy -> com.thoughtworks.xstream.core.TreeMarshallingStrategy:
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.TreeUnmarshaller -> com.thoughtworks.xstream.core.TreeUnmarshaller:
    java.lang.Object root -> root
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.FastStack types -> types
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    com.thoughtworks.xstream.core.util.PrioritizedList validationList -> validationList
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class) -> addInformationTo
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder) -> start
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.util.Base64Encoder -> com.thoughtworks.xstream.core.util.Base64Encoder:
    char[] SIXTY_FOUR_CHARS -> SIXTY_FOUR_CHARS
    int[] REVERSE_MAPPING -> REVERSE_MAPPING
    java.lang.String encode(byte[]) -> encode
    byte[] decode(java.lang.String) -> decode
    int mapCharToInt(java.io.Reader) -> mapCharToInt
com.thoughtworks.xstream.core.util.ClassLoaderReference -> com.thoughtworks.xstream.core.util.ClassLoaderReference:
    java.lang.ClassLoader reference -> reference
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.ClassLoader getReference() -> getReference
    void setReference(java.lang.ClassLoader) -> setReference
    java.lang.Object writeReplace() -> writeReplace
com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement -> com.thoughtworks.xstream.core.util.a:
com.thoughtworks.xstream.core.util.CompositeClassLoader -> com.thoughtworks.xstream.core.util.CompositeClassLoader:
    java.util.List classLoaders -> classLoaders
    void add(java.lang.ClassLoader) -> add
    java.lang.Class loadClass(java.lang.String) -> loadClass
com.thoughtworks.xstream.core.util.CustomObjectInputStream -> com.thoughtworks.xstream.core.util.CustomObjectInputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback) -> getInstance
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback() -> peekCallback
    void defaultReadObject() -> defaultReadObject
    java.lang.Object readObjectOverride() -> readObjectOverride
    java.lang.Object readUnshared() -> readUnshared
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    int readInt() -> readInt
    char readChar() -> readChar
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    long readLong() -> readLong
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    java.lang.String readUTF() -> readUTF
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    java.io.ObjectInputStream$GetField readFields() -> readFields
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
    int available() -> available
    java.lang.String readLine() -> readLine
    int skipBytes(int) -> skipBytes
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField -> com.thoughtworks.xstream.core.util.b:
    java.util.Map fields -> b
    com.thoughtworks.xstream.core.util.CustomObjectInputStream this$0 -> a
    java.io.ObjectStreamClass getObjectStreamClass() -> getObjectStreamClass
    java.lang.Object get(java.lang.String) -> a
    boolean defaulted(java.lang.String) -> defaulted
    byte get(java.lang.String,byte) -> get
    char get(java.lang.String,char) -> get
    double get(java.lang.String,double) -> get
    float get(java.lang.String,float) -> get
    int get(java.lang.String,int) -> get
    long get(java.lang.String,long) -> get
    short get(java.lang.String,short) -> get
    boolean get(java.lang.String,boolean) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback:
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.core.util.CustomObjectOutputStream -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    com.thoughtworks.xstream.core.util.FastStack customFields -> customFields
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> getInstance
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback() -> peekCallback
    void defaultWriteObject() -> defaultWriteObject
    void writeObjectOverride(java.lang.Object) -> writeObjectOverride
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeInt(int) -> writeInt
    void writeChar(int) -> writeChar
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void write(byte[]) -> write
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.io.ObjectOutputStream$PutField putFields() -> putFields
    void writeFields() -> writeFields
    void reset() -> reset
    void useProtocolVersion(int) -> useProtocolVersion
    void writeBytes(java.lang.String) -> writeBytes
    void writeUnshared(java.lang.Object) -> writeUnshared
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField -> com.thoughtworks.xstream.core.util.c:
    java.util.Map fields -> b
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream this$0 -> a
    java.util.Map asMap() -> a
    void write(java.io.ObjectOutput) -> write
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,byte) -> put
    void put(java.lang.String,char) -> put
    void put(java.lang.String,double) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,short) -> put
    void put(java.lang.String,boolean) -> put
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback:
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.core.util.DependencyInjectionFactory -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory:
    java.lang.Object newInstance(java.lang.Class,java.lang.Object[]) -> newInstance
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$1 -> com.thoughtworks.xstream.core.util.d:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$TypedValue -> com.thoughtworks.xstream.core.util.e:
    java.lang.Class type -> a
    java.lang.Object value -> b
com.thoughtworks.xstream.core.util.FastField -> com.thoughtworks.xstream.core.util.FastField:
    java.lang.String name -> name
    java.lang.Class declaringClass -> declaringClass
    java.lang.String getName() -> getName
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.FastStack -> com.thoughtworks.xstream.core.util.FastStack:
    java.lang.Object[] stack -> stack
    int pointer -> pointer
    java.lang.Object push(java.lang.Object) -> push
    void popSilently() -> popSilently
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    int size() -> size
    boolean hasStuff() -> hasStuff
    java.lang.Object get(int) -> get
    void resizeStack(int) -> resizeStack
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.Fields -> com.thoughtworks.xstream.core.util.Fields:
    java.lang.reflect.Field find(java.lang.Class,java.lang.String) -> find
    void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> write
    java.lang.Object read(java.lang.reflect.Field,java.lang.Object) -> read
com.thoughtworks.xstream.core.util.HierarchicalStreams -> com.thoughtworks.xstream.core.util.HierarchicalStreams:
    java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassType
    java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassAttribute
com.thoughtworks.xstream.core.util.ObjectIdDictionary -> com.thoughtworks.xstream.core.util.ObjectIdDictionary:
    java.util.Map map -> map
    int counter -> counter
    void associateId(java.lang.Object,java.lang.Object) -> associateId
    java.lang.Object lookupId(java.lang.Object) -> lookupId
    boolean containsId(java.lang.Object) -> containsId
    void removeId(java.lang.Object) -> removeId
    int size() -> size
    void cleanup() -> cleanup
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper -> com.thoughtworks.xstream.core.util.f:
    java.lang.Object obj -> a
    int hashCode -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> a
com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper -> com.thoughtworks.xstream.core.util.g:
    int hashCode -> a
    java.lang.ref.WeakReference ref -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> a
com.thoughtworks.xstream.core.util.ObjectIdDictionary$Wrapper -> com.thoughtworks.xstream.core.util.h:
    java.lang.Object get() -> a
com.thoughtworks.xstream.core.util.OrderRetainingMap -> com.thoughtworks.xstream.core.util.OrderRetainingMap:
    com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet keyOrder -> keyOrder
    java.util.List valueOrder -> valueOrder
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet -> com.thoughtworks.xstream.core.util.i:
com.thoughtworks.xstream.core.util.Pool -> com.thoughtworks.xstream.core.util.Pool:
    int initialPoolSize -> initialPoolSize
    int maxPoolSize -> maxPoolSize
    com.thoughtworks.xstream.core.util.Pool$Factory factory -> factory
    java.lang.Object[] pool -> pool
    int nextAvailable -> nextAvailable
    java.lang.Object mutex -> mutex
    java.lang.Object fetchFromPool() -> fetchFromPool
    void putInPool(java.lang.Object) -> putInPool
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.util.Pool$Factory -> com.thoughtworks.xstream.core.util.Pool$Factory:
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.Primitives -> com.thoughtworks.xstream.core.util.Primitives:
    java.util.Map BOX -> BOX
    java.util.Map UNBOX -> UNBOX
    java.lang.Class box(java.lang.Class) -> box
    java.lang.Class unbox(java.lang.Class) -> unbox
com.thoughtworks.xstream.core.util.PrioritizedList -> com.thoughtworks.xstream.core.util.PrioritizedList:
    java.util.Set set -> set
    int lowestPriority -> lowestPriority
    int lastId -> lastId
    void add(java.lang.Object,int) -> add
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem -> com.thoughtworks.xstream.core.util.j:
    java.lang.Object value -> a
    int priority -> b
    int id -> c
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator -> com.thoughtworks.xstream.core.util.k:
    java.util.Iterator iterator -> a
    void remove() -> remove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.thoughtworks.xstream.core.util.QuickWriter -> com.thoughtworks.xstream.core.util.QuickWriter:
    java.io.Writer writer -> writer
    char[] buffer -> buffer
    int pointer -> pointer
    void write(java.lang.String) -> write
    void write(char) -> write
    void write(char[]) -> write
    void flush() -> flush
    void close() -> close
    void raw(char[]) -> raw
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor -> com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:
    java.lang.Class editorType -> editorType
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    java.lang.String getAsText(java.lang.Object) -> getAsText
    java.lang.Object setAsText(java.lang.String) -> setAsText
    java.beans.PropertyEditor fetchFromPool() -> fetchFromPool
    java.lang.Class access$0(com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor) -> access$0
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1 -> com.thoughtworks.xstream.core.util.l:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor this$0 -> a
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat -> com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:
    java.lang.String formatString -> formatString
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    java.lang.String format(java.util.Date) -> format
    java.util.Date parse(java.lang.String) -> parse
    java.text.DateFormat fetchFromPool() -> fetchFromPool
    java.lang.String access$0(com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat) -> access$0
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat$1 -> com.thoughtworks.xstream.core.util.m:
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat this$0 -> a
    boolean val$lenient -> b
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.TypedNull -> com.thoughtworks.xstream.core.util.TypedNull:
    java.lang.Class type -> type
    java.lang.Class getType() -> getType
com.thoughtworks.xstream.core.util.XmlHeaderAwareReader -> com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:
    java.io.InputStreamReader reader -> reader
    double version -> version
    java.lang.String KEY_ENCODING -> KEY_ENCODING
    java.lang.String KEY_VERSION -> KEY_VERSION
    java.lang.String XML_TOKEN -> XML_TOKEN
    int STATE_START -> STATE_START
    int STATE_AWAIT_XML_HEADER -> STATE_AWAIT_XML_HEADER
    int STATE_ATTR_NAME -> STATE_ATTR_NAME
    int STATE_ATTR_VALUE -> STATE_ATTR_VALUE
    java.util.Map getHeader(java.io.PushbackInputStream[]) -> getHeader
    java.lang.String getEncoding() -> getEncoding
    double getVersion() -> getVersion
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(char[],int,int) -> read
    int read(char[]) -> read
    boolean ready() -> ready
    void reset() -> reset
    long skip(long) -> skip
    void close() -> close
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.io.AttributeNameIterator -> com.thoughtworks.xstream.io.AttributeNameIterator:
    int current -> current
    int count -> count
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter:
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:
    void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.HierarchicalStreamDriver -> com.thoughtworks.xstream.io.HierarchicalStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.HierarchicalStreamReader -> com.thoughtworks.xstream.io.HierarchicalStreamReader:
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.HierarchicalStreamWriter -> com.thoughtworks.xstream.io.HierarchicalStreamWriter:
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.ReaderWrapper -> com.thoughtworks.xstream.io.ReaderWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped -> wrapped
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.StatefulWriter -> com.thoughtworks.xstream.io.StatefulWriter:
    int STATE_OPEN -> STATE_OPEN
    int STATE_NODE_START -> STATE_NODE_START
    int STATE_VALUE -> STATE_VALUE
    int STATE_NODE_END -> STATE_NODE_END
    int STATE_CLOSED -> STATE_CLOSED
    int state -> state
    int balance -> balance
    com.thoughtworks.xstream.core.util.FastStack attributes -> attributes
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void startNodeCommon() -> startNodeCommon
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void checkClosed() -> checkClosed
    int state() -> state
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.io.StreamException -> com.thoughtworks.xstream.io.StreamException:
com.thoughtworks.xstream.io.WriterWrapper -> com.thoughtworks.xstream.io.WriterWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped -> wrapped
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.binary.BinaryStreamReader -> com.thoughtworks.xstream.io.binary.BinaryStreamReader:
    java.io.DataInputStream in -> in
    com.thoughtworks.xstream.io.binary.ReaderDepthState depthState -> depthState
    com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry -> idRegistry
    com.thoughtworks.xstream.io.binary.Token pushback -> pushback
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    boolean hasMoreChildren() -> hasMoreChildren
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    com.thoughtworks.xstream.io.binary.Token readToken() -> readToken
    void pushBack(com.thoughtworks.xstream.io.binary.Token) -> pushBack
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry -> com.thoughtworks.xstream.io.binary.a:
    java.util.Map map -> a
    void put(long,java.lang.String) -> a
    java.lang.String get(long) -> a
com.thoughtworks.xstream.io.binary.BinaryStreamWriter -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter:
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry idRegistry -> idRegistry
    java.io.DataOutputStream out -> out
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    void write(com.thoughtworks.xstream.io.binary.Token) -> write
    void access$0(com.thoughtworks.xstream.io.binary.BinaryStreamWriter,com.thoughtworks.xstream.io.binary.Token) -> access$0
com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry -> com.thoughtworks.xstream.io.binary.b:
    long nextId -> b
    java.util.Map ids -> c
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter this$0 -> a
    long getId(java.lang.String) -> a
com.thoughtworks.xstream.io.binary.ReaderDepthState -> com.thoughtworks.xstream.io.binary.c:
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State current -> a
    void push() -> a
    void pop() -> b
    java.lang.String getName() -> c
    void setName(java.lang.String) -> a
    java.lang.String getValue() -> d
    void setValue(java.lang.String) -> b
    boolean hasMoreChildren() -> e
    void setHasMoreChildren(boolean) -> a
    void addAttribute(java.lang.String,java.lang.String) -> a
    java.lang.String getAttribute(java.lang.String) -> c
    java.lang.String getAttribute(int) -> a
    java.lang.String getAttributeName(int) -> b
    int getAttributeCount() -> f
    java.util.Iterator getAttributeNames() -> g
com.thoughtworks.xstream.io.binary.ReaderDepthState$1 -> com.thoughtworks.xstream.io.binary.d:
    com.thoughtworks.xstream.io.binary.ReaderDepthState this$0 -> a
    java.util.Iterator val$attributeIterator -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.binary.ReaderDepthState$Attribute -> com.thoughtworks.xstream.io.binary.e:
    java.lang.String name -> a
    java.lang.String value -> b
com.thoughtworks.xstream.io.binary.ReaderDepthState$State -> com.thoughtworks.xstream.io.binary.f:
    java.lang.String name -> a
    java.lang.String value -> b
    java.util.List attributes -> c
    boolean hasMoreChildren -> d
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State parent -> e
com.thoughtworks.xstream.io.binary.Token -> com.thoughtworks.xstream.io.binary.Token:
    byte TYPE_MASK -> TYPE_MASK
    byte TYPE_VERSION -> TYPE_VERSION
    byte TYPE_MAP_ID_TO_VALUE -> TYPE_MAP_ID_TO_VALUE
    byte TYPE_START_NODE -> TYPE_START_NODE
    byte TYPE_END_NODE -> TYPE_END_NODE
    byte TYPE_ATTRIBUTE -> TYPE_ATTRIBUTE
    byte TYPE_VALUE -> TYPE_VALUE
    byte ID_MASK -> ID_MASK
    byte ID_ONE_BYTE -> ID_ONE_BYTE
    byte ID_TWO_BYTES -> ID_TWO_BYTES
    byte ID_FOUR_BYTES -> ID_FOUR_BYTES
    byte ID_EIGHT_BYTES -> ID_EIGHT_BYTES
    byte type -> type
    long id -> id
    java.lang.String value -> value
    byte getType() -> getType
    long getId() -> getId
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
    void writeId(java.io.DataOutput,long,byte) -> writeId
    void writeString(java.io.DataOutput,java.lang.String) -> writeString
    long readId(java.io.DataInput,byte) -> readId
    java.lang.String readString(java.io.DataInput) -> readString
com.thoughtworks.xstream.io.binary.Token$Attribute -> com.thoughtworks.xstream.io.binary.Token$Attribute:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$EndNode -> com.thoughtworks.xstream.io.binary.Token$EndNode:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Formatter -> com.thoughtworks.xstream.io.binary.Token$Formatter:
    void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token) -> write
    com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput) -> read
    com.thoughtworks.xstream.io.binary.Token contructToken(byte) -> contructToken
com.thoughtworks.xstream.io.binary.Token$MapIdToValue -> com.thoughtworks.xstream.io.binary.Token$MapIdToValue:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$StartNode -> com.thoughtworks.xstream.io.binary.Token$StartNode:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Value -> com.thoughtworks.xstream.io.binary.Token$Value:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier -> com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:
    void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> copy
com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver -> com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:
    org.codehaus.jettison.mapped.MappedXMLOutputFactory mof -> mof
    org.codehaus.jettison.mapped.MappedXMLInputFactory mif -> mif
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JettisonStaxWriter -> com.thoughtworks.xstream.io.json.JettisonStaxWriter:
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:
com.thoughtworks.xstream.io.json.JsonWriter -> com.thoughtworks.xstream.io.json.JsonWriter:
    int DROP_ROOT_MODE -> DROP_ROOT_MODE
    int STRICT_MODE -> STRICT_MODE
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    char[] lineIndenter -> lineIndenter
    int depth -> depth
    boolean readyForNewLine -> readyForNewLine
    boolean tagIsEmpty -> tagIsEmpty
    java.lang.String newLine -> newLine
    int mode -> mode
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeAttributeValue
    void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeText
    void writeText(java.lang.String,java.lang.Class) -> writeText
    boolean isCollection(java.lang.Class) -> isCollection
    boolean needsQuotes(java.lang.Class) -> needsQuotes
    void endNode() -> endNode
    void finishTag() -> finishTag
    void endOfLine() -> endOfLine
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    boolean access$0(com.thoughtworks.xstream.io.json.JsonWriter,java.lang.Class) -> access$0
com.thoughtworks.xstream.io.json.JsonWriter$Node -> com.thoughtworks.xstream.io.json.JsonWriter$Node:
    java.lang.String name -> name
    java.lang.Class clazz -> clazz
    boolean fieldAlready -> fieldAlready
    boolean isCollection -> isCollection
    com.thoughtworks.xstream.io.json.JsonWriter this$0 -> this$0
com.thoughtworks.xstream.io.path.Path -> com.thoughtworks.xstream.io.path.Path:
    java.lang.String[] chunks -> chunks
    java.lang.String pathAsString -> pathAsString
    com.thoughtworks.xstream.io.path.Path DOT -> DOT
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.thoughtworks.xstream.io.path.Path relativeTo(com.thoughtworks.xstream.io.path.Path) -> relativeTo
    int depthOfPathDivergence(java.lang.String[],java.lang.String[]) -> depthOfPathDivergence
    com.thoughtworks.xstream.io.path.Path apply(com.thoughtworks.xstream.io.path.Path) -> apply
    boolean isAncestor(com.thoughtworks.xstream.io.path.Path) -> isAncestor
com.thoughtworks.xstream.io.path.PathTracker -> com.thoughtworks.xstream.io.path.PathTracker:
    int pointer -> pointer
    int capacity -> capacity
    java.lang.String[] pathStack -> pathStack
    java.util.Map[] indexMapStack -> indexMapStack
    com.thoughtworks.xstream.io.path.Path currentPath -> currentPath
    void pushElement(java.lang.String) -> pushElement
    void popElement() -> popElement
    java.lang.String getCurrentPath() -> getCurrentPath
    void resizeStacks(int) -> resizeStacks
    com.thoughtworks.xstream.io.path.Path getPath() -> getPath
com.thoughtworks.xstream.io.path.PathTrackingReader -> com.thoughtworks.xstream.io.path.PathTrackingReader:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.path.PathTrackingWriter -> com.thoughtworks.xstream.io.path.PathTrackingWriter:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isXmlFriendly -> isXmlFriendly
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
com.thoughtworks.xstream.io.xml.AbstractDocumentReader -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader:
    com.thoughtworks.xstream.core.util.FastStack pointers -> pointers
    java.lang.Object current -> current
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    boolean hasMoreChildren() -> hasMoreChildren
    void moveUp() -> moveUp
    void moveDown() -> moveDown
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    java.lang.Object peekUnderlyingNode() -> peekUnderlyingNode
    java.lang.Object getCurrent() -> getCurrent
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer -> com.thoughtworks.xstream.io.xml.a:
    int v -> a
com.thoughtworks.xstream.io.xml.AbstractDocumentWriter -> com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:
    java.util.List result -> result
    com.thoughtworks.xstream.core.util.FastStack nodeStack -> nodeStack
    void startNode(java.lang.String) -> startNode
    java.lang.Object createNode(java.lang.String) -> createNode
    void endNode() -> endNode
    void endNodeInternally() -> endNodeInternally
    java.lang.Object getCurrent() -> getCurrent
    java.util.List getTopLevelNodes() -> getTopLevelNodes
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.AbstractPullReader -> com.thoughtworks.xstream.io.xml.AbstractPullReader:
    int START_NODE -> START_NODE
    int END_NODE -> END_NODE
    int TEXT -> TEXT
    int COMMENT -> COMMENT
    int OTHER -> OTHER
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    com.thoughtworks.xstream.core.util.FastStack lookahead -> lookahead
    com.thoughtworks.xstream.core.util.FastStack lookback -> lookback
    boolean marked -> marked
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void move() -> move
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent() -> readEvent
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent() -> readRealEvent
    void mark() -> mark
    void reset() -> reset
    java.lang.String getValue() -> getValue
    java.util.Iterator getAttributeNames() -> getAttributeNames
    java.lang.String getNodeName() -> getNodeName
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.xml.AbstractPullReader$Event -> com.thoughtworks.xstream.io.xml.b:
    int type -> a
    java.lang.String value -> b
com.thoughtworks.xstream.io.xml.AbstractXmlDriver -> com.thoughtworks.xstream.io.xml.AbstractXmlDriver:
    com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer -> replacer
    com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer() -> xmlFriendlyReplacer
com.thoughtworks.xstream.io.xml.AbstractXmlReader -> com.thoughtworks.xstream.io.xml.AbstractXmlReader:
    com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer -> replacer
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.AbstractXmlWriter -> com.thoughtworks.xstream.io.xml.AbstractXmlWriter:
    com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer replacer -> replacer
    void startNode(java.lang.String,java.lang.Class) -> startNode
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.xml.CompactWriter -> com.thoughtworks.xstream.io.xml.CompactWriter:
    void endOfLine() -> endOfLine
com.thoughtworks.xstream.io.xml.DocumentReader -> com.thoughtworks.xstream.io.xml.DocumentReader:
    java.lang.Object getCurrent() -> getCurrent
com.thoughtworks.xstream.io.xml.DocumentWriter -> com.thoughtworks.xstream.io.xml.DocumentWriter:
    java.util.List getTopLevelNodes() -> getTopLevelNodes
com.thoughtworks.xstream.io.xml.Dom4JDriver -> com.thoughtworks.xstream.io.xml.Dom4JDriver:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    org.dom4j.io.OutputFormat outputFormat -> outputFormat
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.io.OutputFormat getOutputFormat() -> getOutputFormat
    void setOutputFormat(org.dom4j.io.OutputFormat) -> setOutputFormat
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.Dom4JDriver$1 -> com.thoughtworks.xstream.io.xml.c:
    com.thoughtworks.xstream.io.xml.Dom4JDriver this$0 -> a
    com.thoughtworks.xstream.io.HierarchicalStreamWriter[] val$writer -> b
    void close() -> close
com.thoughtworks.xstream.io.xml.Dom4JReader -> com.thoughtworks.xstream.io.xml.Dom4JReader:
    org.dom4j.Element currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.xml.Dom4JWriter -> com.thoughtworks.xstream.io.xml.Dom4JWriter:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.dom4j.Branch top() -> top
com.thoughtworks.xstream.io.xml.Dom4JXmlWriter -> com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:
    org.dom4j.io.XMLWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    org.xml.sax.helpers.AttributesImpl attributes -> attributes
    boolean started -> started
    boolean children -> children
    void startNode(java.lang.String) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void startElement() -> startElement
com.thoughtworks.xstream.io.xml.DomDriver -> com.thoughtworks.xstream.io.xml.DomDriver:
    java.lang.String encoding -> encoding
    javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory -> documentBuilderFactory
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(org.xml.sax.InputSource) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.DomReader -> com.thoughtworks.xstream.io.xml.DomReader:
    org.w3c.dom.Element currentElement -> currentElement
    java.lang.StringBuffer textBuffer -> textBuffer
    java.util.List childElements -> childElements
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
com.thoughtworks.xstream.io.xml.DomWriter -> com.thoughtworks.xstream.io.xml.DomWriter:
    org.w3c.dom.Document document -> document
    boolean hasRootElement -> hasRootElement
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    org.w3c.dom.Element top() -> top
com.thoughtworks.xstream.io.xml.JDomDriver -> com.thoughtworks.xstream.io.xml.JDomDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.JDomReader -> com.thoughtworks.xstream.io.xml.JDomReader:
    org.jdom.Element currentElement -> currentElement
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
com.thoughtworks.xstream.io.xml.JDomWriter -> com.thoughtworks.xstream.io.xml.JDomWriter:
    org.jdom.JDOMFactory documentFactory -> documentFactory
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.jdom.Element top() -> top
    java.util.List getResult() -> getResult
com.thoughtworks.xstream.io.xml.PrettyPrintWriter -> com.thoughtworks.xstream.io.xml.PrettyPrintWriter:
    int XML_QUIRKS -> XML_QUIRKS
    int XML_1_0 -> XML_1_0
    int XML_1_1 -> XML_1_1
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    char[] lineIndenter -> lineIndenter
    int mode -> mode
    boolean tagInProgress -> tagInProgress
    int depth -> depth
    boolean readyForNewLine -> readyForNewLine
    boolean tagIsEmpty -> tagIsEmpty
    java.lang.String newLine -> newLine
    char[] NULL -> NULL
    char[] AMP -> AMP
    char[] LT -> LT
    char[] GT -> GT
    char[] CR -> CR
    char[] QUOT -> QUOT
    char[] APOS -> APOS
    char[] CLOSE -> CLOSE
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeAttributeValue
    void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeText
    void writeText(java.lang.String) -> writeText
    void endNode() -> endNode
    void finishTag() -> finishTag
    void endOfLine() -> endOfLine
    void flush() -> flush
    void close() -> close
    java.lang.String getNewLine() -> getNewLine
com.thoughtworks.xstream.io.xml.QNameMap -> com.thoughtworks.xstream.io.xml.QNameMap:
    java.util.Map qnameToJava -> qnameToJava
    java.util.Map javaToQName -> javaToQName
    java.lang.String defaultPrefix -> defaultPrefix
    java.lang.String defaultNamespace -> defaultNamespace
    java.lang.String getJavaClassName(javax.xml.namespace.QName) -> getJavaClassName
    javax.xml.namespace.QName getQName(java.lang.String) -> getQName
    void registerMapping(javax.xml.namespace.QName,java.lang.String) -> registerMapping
    void registerMapping(javax.xml.namespace.QName,java.lang.Class) -> registerMapping
    java.lang.String getDefaultNamespace() -> getDefaultNamespace
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    java.lang.String getDefaultPrefix() -> getDefaultPrefix
    void setDefaultPrefix(java.lang.String) -> setDefaultPrefix
com.thoughtworks.xstream.io.xml.SaxWriter -> com.thoughtworks.xstream.io.xml.SaxWriter:
    java.lang.String CONFIGURED_XSTREAM_PROPERTY -> CONFIGURED_XSTREAM_PROPERTY
    java.lang.String SOURCE_OBJECT_LIST_PROPERTY -> SOURCE_OBJECT_LIST_PROPERTY
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.DTDHandler dtdHandler -> dtdHandler
    org.xml.sax.ContentHandler contentHandler -> contentHandler
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    java.util.Map features -> features
    java.util.Map properties -> properties
    boolean includeEnclosingDocument -> includeEnclosingDocument
    int depth -> depth
    java.util.List elementStack -> elementStack
    char[] buffer -> buffer
    boolean startTagInProgress -> startTagInProgress
    org.xml.sax.helpers.AttributesImpl attributeList -> attributeList
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void parse(java.lang.String) -> parse
    void parse(org.xml.sax.InputSource) -> parse
    void parse() -> parse
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void startDocument(boolean) -> startDocument
    void endDocument(boolean) -> endDocument
    void flushStartTag() -> flushStartTag
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxDriver -> com.thoughtworks.xstream.io.xml.StaxDriver:
    boolean libraryPresent -> libraryPresent
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLInputFactory inputFactory -> inputFactory
    javax.xml.stream.XMLOutputFactory outputFactory -> outputFactory
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    void loadLibrary() -> loadLibrary
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    com.thoughtworks.xstream.io.xml.AbstractPullReader createStaxReader(javax.xml.stream.XMLStreamReader) -> createStaxReader
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.QNameMap getQnameMap() -> getQnameMap
    void setQnameMap(com.thoughtworks.xstream.io.xml.QNameMap) -> setQnameMap
    javax.xml.stream.XMLInputFactory getInputFactory() -> getInputFactory
    javax.xml.stream.XMLOutputFactory getOutputFactory() -> getOutputFactory
    boolean isRepairingNamespace() -> isRepairingNamespace
    void setRepairingNamespace(boolean) -> setRepairingNamespace
    javax.xml.stream.XMLStreamReader createParser(java.io.Reader) -> createParser
    javax.xml.stream.XMLStreamReader createParser(java.io.InputStream) -> createParser
com.thoughtworks.xstream.io.xml.StaxReader -> com.thoughtworks.xstream.io.xml.StaxReader:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamReader in -> in
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxWriter -> com.thoughtworks.xstream.io.xml.StaxWriter:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamWriter out -> out
    boolean writeEnclosingDocument -> writeEnclosingDocument
    boolean namespaceRepairingMode -> namespaceRepairingMode
    int tagDepth -> tagDepth
    void flush() -> flush
    void close() -> close
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void setValue(java.lang.String) -> setValue
    void startNode(java.lang.String) -> startNode
    boolean isNamespaceRepairingMode() -> isNamespaceRepairingMode
    com.thoughtworks.xstream.io.xml.QNameMap getQNameMap() -> getQNameMap
    javax.xml.stream.XMLStreamWriter getXMLStreamWriter() -> getXMLStreamWriter
com.thoughtworks.xstream.io.xml.TraxSource -> com.thoughtworks.xstream.io.xml.TraxSource:
    java.lang.String XSTREAM_FEATURE -> XSTREAM_FEATURE
    org.xml.sax.XMLReader xmlReader -> xmlReader
    com.thoughtworks.xstream.XStream xstream -> xstream
    java.util.List source -> source
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setXStream(com.thoughtworks.xstream.XStream) -> setXStream
    void setSource(java.lang.Object) -> setSource
    void setSourceAsList(java.util.List) -> setSourceAsList
    void createXMLReader(org.xml.sax.XMLReader) -> createXMLReader
    void configureXMLReader() -> configureXMLReader
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer:
    char dollarReplacementInClass -> dollarReplacementInClass
    java.lang.String dollarReplacementInField -> dollarReplacementInField
    java.lang.String underscoreReplacementInField -> underscoreReplacementInField
    java.lang.String noPackagePrefix -> noPackagePrefix
    java.lang.String unescapeName(java.lang.String) -> unescapeName
    java.lang.String escapeClassName(java.lang.String) -> escapeClassName
    java.lang.String escapeFieldName(java.lang.String) -> escapeFieldName
    java.lang.String unescapeClassName(java.lang.String) -> unescapeClassName
    java.lang.String unescapeFieldName(java.lang.String) -> unescapeFieldName
    boolean stringFoundAt(java.lang.String,int,java.lang.String) -> stringFoundAt
com.thoughtworks.xstream.io.xml.XmlFriendlyReader -> com.thoughtworks.xstream.io.xml.XmlFriendlyReader:
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:
    java.lang.String dollarReplacement -> dollarReplacement
    java.lang.String underscoreReplacement -> underscoreReplacement
    java.util.Map escapeCache -> escapeCache
    java.util.Map unescapeCache -> unescapeCache
    java.lang.String escapeName(java.lang.String) -> escapeName
    java.lang.String unescapeName(java.lang.String) -> unescapeName
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.io.xml.XmlFriendlyWriter -> com.thoughtworks.xstream.io.xml.XmlFriendlyWriter:
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.XomDriver -> com.thoughtworks.xstream.io.xml.XomDriver:
    nu.xom.Builder builder -> builder
    nu.xom.Builder getBuilder() -> getBuilder
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.XomReader -> com.thoughtworks.xstream.io.xml.XomReader:
    nu.xom.Element currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    int getChildCount() -> getChildCount
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
com.thoughtworks.xstream.io.xml.XomWriter -> com.thoughtworks.xstream.io.xml.XomWriter:
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    nu.xom.Element top() -> top
com.thoughtworks.xstream.io.xml.XppDomDriver -> com.thoughtworks.xstream.io.xml.XppDomDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.XppDomReader -> com.thoughtworks.xstream.io.xml.XppDomReader:
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
com.thoughtworks.xstream.io.xml.XppDomWriter -> com.thoughtworks.xstream.io.xml.XppDomWriter:
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom getConfiguration() -> getConfiguration
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom top() -> top
com.thoughtworks.xstream.io.xml.XppDriver -> com.thoughtworks.xstream.io.xml.XppDriver:
    boolean xppLibraryPresent -> xppLibraryPresent
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    void loadLibrary() -> loadLibrary
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.XppReader -> com.thoughtworks.xstream.io.xml.XppReader:
    org.xmlpull.v1.XmlPullParser parser -> parser
    java.io.BufferedReader reader -> reader
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom:
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.Map attributes -> attributes
    java.util.List childList -> childList
    java.util.Map childMap -> childMap
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom parent -> parent
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String[] getAttributeNames() -> getAttributeNames
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom getChild(int) -> getChild
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom getChild(java.lang.String) -> getChild
    void addChild(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) -> addChild
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom[] getChildren() -> getChildren
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom[] getChildren(java.lang.String) -> getChildren
    int getChildCount() -> getChildCount
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom getParent() -> getParent
    void setParent(com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom) -> setParent
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder:
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader) -> build
com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:
    java.util.Map aliasToName -> aliasToName
    java.util.Map nameToAlias -> nameToAlias
    void addAliasFor(java.lang.String,java.lang.String) -> addAliasFor
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper -> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper:
    char dollarReplacementInClass -> dollarReplacementInClass
    java.lang.String dollarReplacementInField -> dollarReplacementInField
    java.lang.String underscoreReplacementInField -> underscoreReplacementInField
    java.lang.String noPackagePrefix -> noPackagePrefix
    java.lang.String escapeClassName(java.lang.String) -> escapeClassName
    java.lang.String unescapeClassName(java.lang.String) -> unescapeClassName
    java.lang.String escapeFieldName(java.lang.String) -> escapeFieldName
    java.lang.String unescapeFieldName(java.lang.String) -> unescapeFieldName
    boolean stringFoundAt(java.lang.String,int,java.lang.String) -> stringFoundAt
com.thoughtworks.xstream.mapper.AnnotationConfiguration -> com.thoughtworks.xstream.mapper.AnnotationConfiguration:
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
com.thoughtworks.xstream.mapper.AnnotationMapper -> com.thoughtworks.xstream.mapper.AnnotationMapper:
    boolean locked -> locked
    java.lang.Object[] arguments -> arguments
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    java.util.Map converterCache -> converterCache
    java.util.Set annotatedTypes -> annotatedTypes
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void processTypes(java.util.Set) -> processTypes
    void addParametrizedTypes(java.lang.reflect.Type,java.util.Set) -> addParametrizedTypes
    void processConverterAnnotations(java.lang.Class) -> processConverterAnnotations
    void processAliasAnnotation(java.lang.Class,java.util.Set) -> processAliasAnnotation
    void processImplicitCollectionAnnotation(java.lang.Class) -> processImplicitCollectionAnnotation
    void processFieldAliasAnnotation(java.lang.reflect.Field) -> processFieldAliasAnnotation
    void processAsAttributeAnnotation(java.lang.reflect.Field) -> processAsAttributeAnnotation
    void processImplicitAnnotation(java.lang.reflect.Field) -> processImplicitAnnotation
    void processOmitFieldAnnotation(java.lang.reflect.Field) -> processOmitFieldAnnotation
    void processLocalConverterAnnotation(java.lang.reflect.Field) -> processLocalConverterAnnotation
    com.thoughtworks.xstream.converters.Converter cacheConverter(java.lang.Class) -> cacheConverter
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
    java.util.Set access$0(com.thoughtworks.xstream.mapper.AnnotationMapper) -> access$0
com.thoughtworks.xstream.mapper.AnnotationMapper$1 -> com.thoughtworks.xstream.mapper.a:
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> a
    java.util.Set val$types -> b
    java.util.Set val$processedTypes -> c
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.mapper.AnnotationMapper$UnprocessedTypesSet -> com.thoughtworks.xstream.mapper.b:
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> a
    boolean add(java.lang.Class) -> a
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.mapper.AnnotationMapper$WeakHashSet -> com.thoughtworks.xstream.mapper.c:
    java.lang.Object NULL -> a
    java.util.WeakHashMap map -> b
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.thoughtworks.xstream.mapper.ArrayMapper -> com.thoughtworks.xstream.mapper.ArrayMapper:
    java.util.Collection BOXED_TYPES -> BOXED_TYPES
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String arrayType(int,java.lang.Class) -> arrayType
    java.lang.Class primitiveClassNamed(java.lang.String) -> primitiveClassNamed
    char charThatJavaUsesToRepresentPrimitiveArrayType(java.lang.Class) -> charThatJavaUsesToRepresentPrimitiveArrayType
    java.lang.String boxedTypeName(java.lang.Class) -> boxedTypeName
com.thoughtworks.xstream.mapper.AttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AttributeAliasingMapper:
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
com.thoughtworks.xstream.mapper.AttributeMapper -> com.thoughtworks.xstream.mapper.AttributeMapper:
    java.util.Map fieldNameToTypeMap -> fieldNameToTypeMap
    java.util.Set typeSet -> typeSet
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    java.util.Set fieldToUseAsAttribute -> fieldToUseAsAttribute
    void setConverterLookup(com.thoughtworks.xstream.converters.ConverterLookup) -> setConverterLookup
    void addAttributeFor(java.lang.String,java.lang.Class) -> addAttributeFor
    void addAttributeFor(java.lang.Class) -> addAttributeFor
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class) -> getLocalConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class) -> shouldLookForSingleValueConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    void addAttributeFor(java.lang.reflect.Field) -> addAttributeFor
    void addAttributeFor(java.lang.Class,java.lang.String) -> addAttributeFor
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
com.thoughtworks.xstream.mapper.CGLIBMapper -> com.thoughtworks.xstream.mapper.CGLIBMapper:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String alias -> alias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.CGLIBMapper$Marker -> com.thoughtworks.xstream.mapper.CGLIBMapper$Marker:
com.thoughtworks.xstream.mapper.CachingMapper -> com.thoughtworks.xstream.mapper.CachingMapper:
    java.util.Map realClassCache -> realClassCache
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.CannotResolveClassException -> com.thoughtworks.xstream.mapper.CannotResolveClassException:
com.thoughtworks.xstream.mapper.ClassAliasingMapper -> com.thoughtworks.xstream.mapper.ClassAliasingMapper:
    java.util.Map typeToName -> typeToName
    java.util.Map classToName -> classToName
    java.util.Map nameToType -> nameToType
    void addClassAlias(java.lang.String,java.lang.Class) -> addClassAlias
    void addClassAttributeAlias(java.lang.String,java.lang.Class) -> addClassAttributeAlias
    void addTypeAlias(java.lang.String,java.lang.Class) -> addTypeAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    boolean itemTypeAsAttribute(java.lang.Class) -> itemTypeAsAttribute
    boolean aliasIsAttribute(java.lang.String) -> aliasIsAttribute
    java.lang.Object readResolve() -> readResolve
    java.lang.Class primitiveClassNamed(java.lang.String) -> primitiveClassNamed
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper -> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:
    java.util.Map typeToImpl -> typeToImpl
    java.util.Map implToType -> implToType
    void addDefaults() -> addDefaults
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.DefaultMapper -> com.thoughtworks.xstream.mapper.DefaultMapper:
    java.lang.ClassLoader classLoader -> classLoader
    java.lang.String classAttributeIdentifier -> classAttributeIdentifier
    java.lang.Object readResolve() -> readResolve
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String attributeForClassDefiningField() -> attributeForClassDefiningField
    java.lang.String attributeForReadResolveField() -> attributeForReadResolveField
    java.lang.String attributeForEnumType() -> attributeForEnumType
    java.lang.String attributeForImplementationClass() -> attributeForImplementationClass
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    java.lang.String lookupName(java.lang.Class) -> lookupName
    java.lang.Class lookupType(java.lang.String) -> lookupType
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.DynamicProxyMapper -> com.thoughtworks.xstream.mapper.DynamicProxyMapper:
    java.lang.String alias -> alias
    java.lang.String getAlias() -> getAlias
    void setAlias(java.lang.String) -> setAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy -> com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy:
com.thoughtworks.xstream.mapper.EnumMapper -> com.thoughtworks.xstream.mapper.EnumMapper:
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    java.util.Map enumConverterMap -> enumConverterMap
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class) -> getLocalConverter
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.FieldAliasingMapper -> com.thoughtworks.xstream.mapper.FieldAliasingMapper:
    java.util.Map fieldToAliasMap -> fieldToAliasMap
    java.util.Map aliasToFieldMap -> aliasToFieldMap
    java.util.Set fieldsToOmit -> fieldsToOmit
    void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String) -> addFieldAlias
    java.lang.Object key(java.lang.Class,java.lang.String) -> key
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map) -> getMember
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    void omitField(java.lang.Class,java.lang.String) -> omitField
com.thoughtworks.xstream.mapper.ImmutableTypesMapper -> com.thoughtworks.xstream.mapper.ImmutableTypesMapper:
    java.util.Set immutableTypes -> immutableTypes
    void addImmutableType(java.lang.Class) -> addImmutableType
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:
    java.util.Map classNameToMapper -> classNameToMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class) -> getMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class) -> getOrCreateMapper
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    void add(java.lang.Class,java.lang.String,java.lang.Class) -> add
    void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> add
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass -> com.thoughtworks.xstream.mapper.d:
    java.util.Map namedItemTypeToDef -> a
    java.util.Map itemFieldNameToDef -> b
    java.util.Map fieldNameToDef -> c
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String) -> a
    java.lang.Class getItemTypeForItemFieldName(java.lang.String) -> a
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String) -> b
    void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl) -> a
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl -> com.thoughtworks.xstream.mapper.e:
    java.lang.String fieldName -> a
    java.lang.String itemFieldName -> b
    java.lang.Class itemType -> c
    boolean equals(java.lang.Object) -> equals
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType createNamedItemType() -> a
    int hashCode() -> hashCode
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType -> com.thoughtworks.xstream.mapper.f:
    java.lang.Class itemType -> a
    java.lang.String itemFieldName -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.thoughtworks.xstream.mapper.LocalConversionMapper -> com.thoughtworks.xstream.mapper.LocalConversionMapper:
    java.util.Map localConverters -> localConverters
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class) -> getLocalSingleValueConverter
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.Mapper -> com.thoughtworks.xstream.mapper.Mapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String attributeForImplementationClass() -> attributeForImplementationClass
    java.lang.String attributeForClassDefiningField() -> attributeForClassDefiningField
    java.lang.String attributeForReadResolveField() -> attributeForReadResolveField
    java.lang.String attributeForEnumType() -> attributeForEnumType
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping -> com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping:
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
com.thoughtworks.xstream.mapper.Mapper$Null -> com.thoughtworks.xstream.mapper.Mapper$Null:
com.thoughtworks.xstream.mapper.MapperWrapper -> com.thoughtworks.xstream.mapper.MapperWrapper:
    com.thoughtworks.xstream.mapper.Mapper wrapped -> wrapped
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String attributeForClassDefiningField() -> attributeForClassDefiningField
    java.lang.String attributeForImplementationClass() -> attributeForImplementationClass
    java.lang.String attributeForReadResolveField() -> attributeForReadResolveField
    java.lang.String attributeForEnumType() -> attributeForEnumType
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.OuterClassMapper -> com.thoughtworks.xstream.mapper.OuterClassMapper:
    java.lang.String alias -> alias
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
com.thoughtworks.xstream.mapper.PackageAliasingMapper -> com.thoughtworks.xstream.mapper.PackageAliasingMapper:
    java.util.Comparator REVERSE -> REVERSE
    java.util.Map packageToName -> packageToName
    java.util.Map nameToPackage -> nameToPackage
    void addPackageAlias(java.lang.String,java.lang.String) -> addPackageAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.thoughtworks.xstream.mapper.PackageAliasingMapper$1 -> com.thoughtworks.xstream.mapper.g:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.mapper.XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XmlFriendlyMapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameToXML(java.lang.String) -> mapNameToXML
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:
    java.io.FilenameFilter filter -> filter
    java.io.File baseDirectory -> baseDirectory
    java.lang.String encoding -> encoding
    com.thoughtworks.xstream.XStream xstream -> xstream
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String getName(java.lang.Object) -> getName
    void writeFile(java.io.File,java.lang.Object) -> writeFile
    java.io.File getFile(java.lang.String) -> getFile
    java.lang.Object readFile(java.io.File) -> readFile
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.io.File access$0(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$0
    java.io.FilenameFilter access$1(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$1
    java.lang.Object access$2(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File) -> access$2
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter:
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator:
    java.io.File[] files -> files
    int position -> position
    java.io.File current -> current
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
    java.io.File[] access$0(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$0
    int access$1(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$1
    void access$2(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator,int) -> access$2
    void access$3(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator,java.io.File) -> access$3
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy access$4(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$4
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1 -> com.thoughtworks.xstream.persistence.a:
    java.io.File file -> b
    java.lang.Object key -> c
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator this$1 -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.persistence.FilePersistenceStrategy -> com.thoughtworks.xstream.persistence.FilePersistenceStrategy:
    java.lang.String illegalChars -> illegalChars
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.FileStreamStrategy -> com.thoughtworks.xstream.persistence.FileStreamStrategy:
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.PersistenceStrategy -> com.thoughtworks.xstream.persistence.PersistenceStrategy:
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
com.thoughtworks.xstream.persistence.StreamStrategy -> com.thoughtworks.xstream.persistence.StreamStrategy:
com.thoughtworks.xstream.persistence.XmlArrayList -> com.thoughtworks.xstream.persistence.XmlArrayList:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    int size() -> size
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    void rangeCheck(int) -> rangeCheck
    java.lang.Object get(int) -> get
    java.lang.Object remove(int) -> remove
com.thoughtworks.xstream.persistence.XmlMap -> com.thoughtworks.xstream.persistence.XmlMap:
    com.thoughtworks.xstream.persistence.PersistenceStrategy persistenceStrategy -> persistenceStrategy
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set entrySet() -> entrySet
    com.thoughtworks.xstream.persistence.PersistenceStrategy access$0(com.thoughtworks.xstream.persistence.XmlMap) -> access$0
com.thoughtworks.xstream.persistence.XmlMap$XmlMapEntries -> com.thoughtworks.xstream.persistence.b:
    com.thoughtworks.xstream.persistence.XmlMap this$0 -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.persistence.XmlSet -> com.thoughtworks.xstream.persistence.XmlSet:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean add(java.lang.Object) -> add
    java.lang.Long findEmptyKey() -> findEmptyKey
demo.Pinyin4jAppletDemo -> demo.Pinyin4jAppletDemo:
    java.awt.Dimension APP_SIZE -> APP_SIZE
    long serialVersionUID -> serialVersionUID
    javax.swing.JPanel jContentPane -> jContentPane
    javax.swing.JTabbedPane jTabbedPane -> jTabbedPane
    javax.swing.JPanel formattedCharPanel -> formattedCharPanel
    javax.swing.JPanel optionPanel -> optionPanel
    javax.swing.JButton convertButton -> convertButton
    javax.swing.JPanel buttonPanel -> buttonPanel
    javax.swing.JTextArea formattedOutputField -> formattedOutputField
    javax.swing.JComboBox toneTypesComboBox -> toneTypesComboBox
    javax.swing.JComboBox vCharTypesComboBox -> vCharTypesComboBox
    javax.swing.JComboBox caseTypesComboBox -> caseTypesComboBox
    java.lang.String appName -> appName
    java.lang.String[] caseTypes -> caseTypes
    java.lang.String[] vCharTypes -> vCharTypes
    java.lang.String[] toneTypes -> toneTypes
    javax.swing.JLabel toneLabel -> toneLabel
    javax.swing.JLabel charLabel -> charLabel
    javax.swing.JTextField charTextField -> charTextField
    javax.swing.JPanel unformattedCharPanel -> unformattedCharPanel
    javax.swing.JLabel unformattedHanyuPinyinLabel -> unformattedHanyuPinyinLabel
    javax.swing.JTextArea unformattedHanyuPinyinTextArea -> unformattedHanyuPinyinTextArea
    javax.swing.JPanel unformattedHanyuPinyinPanel -> unformattedHanyuPinyinPanel
    javax.swing.JPanel unformattedTongyongPinyinPanel -> unformattedTongyongPinyinPanel
    javax.swing.JLabel unformattedTongyongPinyinLabel -> unformattedTongyongPinyinLabel
    javax.swing.JTextArea unformattedTongyongPinyinTextArea -> unformattedTongyongPinyinTextArea
    javax.swing.JPanel unformattedWadePinyinPanel -> unformattedWadePinyinPanel
    javax.swing.JLabel unformattedWadePinyinLabel -> unformattedWadePinyinLabel
    javax.swing.JTextArea unformattedWadePinyinTextArea -> unformattedWadePinyinTextArea
    javax.swing.JPanel unformattedMPS2PinyinPanel -> unformattedMPS2PinyinPanel
    javax.swing.JLabel unformattedMPS2PinyinLabel -> unformattedMPS2PinyinLabel
    javax.swing.JTextArea unformattedMPS2PinyinTextArea -> unformattedMPS2PinyinTextArea
    javax.swing.JPanel unformattedYalePinyinPanel -> unformattedYalePinyinPanel
    javax.swing.JLabel unformattedYalePinyinLabel -> unformattedYalePinyinLabel
    javax.swing.JTextArea unformattedYalePinyinTextArea -> unformattedYalePinyinTextArea
    javax.swing.JPanel unformattedGwoyeuRomatzyhPanel -> unformattedGwoyeuRomatzyhPanel
    javax.swing.JLabel unformattedGwoyeuRomatzyhLabel -> unformattedGwoyeuRomatzyhLabel
    javax.swing.JTextArea unformattedGwoyeuRomatzyhTextArea -> unformattedGwoyeuRomatzyhTextArea
    javax.swing.JScrollPane unformattedMPS2PinyinScrollPane -> unformattedMPS2PinyinScrollPane
    javax.swing.JScrollPane unformattedHanyuPinyinScrollPane -> unformattedHanyuPinyinScrollPane
    javax.swing.JScrollPane unformattedTongyongPinyinScrollPane -> unformattedTongyongPinyinScrollPane
    javax.swing.JScrollPane unformattedWadePinyinScrollPane -> unformattedWadePinyinScrollPane
    javax.swing.JScrollPane unformattedYalePinyinScrollPane -> unformattedYalePinyinScrollPane
    javax.swing.JScrollPane unformattedGwoyeuRomatzyhScrollPane -> unformattedGwoyeuRomatzyhScrollPane
    javax.swing.JTextField getCharTextField() -> getCharTextField
    javax.swing.JPanel getUnformattedCharPanel() -> getUnformattedCharPanel
    javax.swing.JTextArea getUnformattedHanyuPinyinTextArea() -> getUnformattedHanyuPinyinTextArea
    javax.swing.JPanel getUnformattedHanyuPinyinPanel() -> getUnformattedHanyuPinyinPanel
    javax.swing.JPanel getUnformattedTongyongPinyinPanel() -> getUnformattedTongyongPinyinPanel
    javax.swing.JTextArea getUnformattedTongyongPinyinTextArea() -> getUnformattedTongyongPinyinTextArea
    javax.swing.JPanel getUnformattedWadePinyinPanel() -> getUnformattedWadePinyinPanel
    javax.swing.JTextArea getUnformattedWadePinyinTextArea() -> getUnformattedWadePinyinTextArea
    javax.swing.JPanel getUnformattedMPS2PinyinPanel() -> getUnformattedMPS2PinyinPanel
    javax.swing.JTextArea getUnformattedMPS2PinyinTextArea() -> getUnformattedMPS2PinyinTextArea
    javax.swing.JPanel getUnformattedYalePinyinPanel() -> getUnformattedYalePinyinPanel
    javax.swing.JTextArea getUnformattedYalePinyinTextArea() -> getUnformattedYalePinyinTextArea
    javax.swing.JPanel getUnformattedGwoyeuRomatzyhPanel() -> getUnformattedGwoyeuRomatzyhPanel
    javax.swing.JTextArea getUnformattedGwoyeuRomatzyhTextArea() -> getUnformattedGwoyeuRomatzyhTextArea
    javax.swing.JScrollPane getUnformattedMPS2PinyinScrollPane() -> getUnformattedMPS2PinyinScrollPane
    javax.swing.JScrollPane getUnformattedHanyuPinyinScrollPane() -> getUnformattedHanyuPinyinScrollPane
    javax.swing.JScrollPane getUnformattedTongyongPinyinScrollPane() -> getUnformattedTongyongPinyinScrollPane
    javax.swing.JScrollPane getUnformattedWadePinyinScrollPane() -> getUnformattedWadePinyinScrollPane
    javax.swing.JScrollPane getUnformattedYalePinyinScrollPane() -> getUnformattedYalePinyinScrollPane
    javax.swing.JScrollPane getUnformattedGwoyeuRomatzyhScrollPane() -> getUnformattedGwoyeuRomatzyhScrollPane
    void main(java.lang.String[]) -> main
    void init() -> init
    javax.swing.JPanel getJContentPane() -> getJContentPane
    javax.swing.JTabbedPane getJTabbedPane() -> getJTabbedPane
    javax.swing.JPanel getFormattedCharPanel() -> getFormattedCharPanel
    javax.swing.JPanel getOptionPanel() -> getOptionPanel
    javax.swing.JButton getConvertButton() -> getConvertButton
    javax.swing.JPanel getButtonPanel() -> getButtonPanel
    javax.swing.JTextArea getFormattedOutputField() -> getFormattedOutputField
    javax.swing.JComboBox getToneTypesComboBox() -> getToneTypesComboBox
    javax.swing.JComboBox getVCharTypesComboBox() -> getVCharTypesComboBox
    javax.swing.JComboBox getCaseTypesComboBox() -> getCaseTypesComboBox
    java.lang.String getChineseCharText() -> getChineseCharText
    java.lang.String access$000(demo.Pinyin4jAppletDemo) -> access$000
    javax.swing.JComboBox access$100(demo.Pinyin4jAppletDemo) -> access$100
    javax.swing.JComboBox access$200(demo.Pinyin4jAppletDemo) -> access$200
    javax.swing.JComboBox access$300(demo.Pinyin4jAppletDemo) -> access$300
    javax.swing.JTextArea access$400(demo.Pinyin4jAppletDemo) -> access$400
    javax.swing.JTextArea access$500(demo.Pinyin4jAppletDemo) -> access$500
    javax.swing.JTextArea access$600(demo.Pinyin4jAppletDemo) -> access$600
    javax.swing.JTextArea access$700(demo.Pinyin4jAppletDemo) -> access$700
    javax.swing.JTextArea access$800(demo.Pinyin4jAppletDemo) -> access$800
    javax.swing.JTextArea access$900(demo.Pinyin4jAppletDemo) -> access$900
    javax.swing.JTextArea access$1000(demo.Pinyin4jAppletDemo) -> access$1000
demo.Pinyin4jAppletDemo$1 -> demo.a:
    demo.Pinyin4jAppletDemo val$appletDemo -> a
demo.Pinyin4jAppletDemo$2 -> demo.b:
    demo.Pinyin4jAppletDemo this$0 -> a
demo.Pinyin4jAppletDemo$3 -> demo.c:
    demo.Pinyin4jAppletDemo this$0 -> a
net.sourceforge.pinyin4j.ChineseToPinyinResource -> a.a.a.a:
    java.util.Properties unicodeToHanyuPinyinTable -> a
    java.lang.String[] getHanyuPinyinStringArray(char) -> a
net.sourceforge.pinyin4j.ChineseToPinyinResource$ChineseToPinyinResourceHolder -> a.a.a.b:
    net.sourceforge.pinyin4j.ChineseToPinyinResource theInstance -> a
net.sourceforge.pinyin4j.PinyinHelper -> a.a.a.c:
    java.lang.String[] toHanyuPinyinStringArray(char) -> a
net.sourceforge.pinyin4j.ResourceHelper -> a.a.a.d:
    java.lang.Class class$net$sourceforge$pinyin4j$ResourceHelper -> a
    java.io.BufferedInputStream getResourceInputStream(java.lang.String) -> a
    java.lang.Class class$(java.lang.String) -> b
org.achartengine.ChartFactory -> org.achartengine.ChartFactory:
    java.lang.String CHART -> CHART
    java.lang.String TITLE -> TITLE
    org.achartengine.GraphicalView getLineChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getLineChartView
    org.achartengine.GraphicalView getCubeLineChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,float) -> getCubeLineChartView
    org.achartengine.GraphicalView getScatterChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getScatterChartView
    org.achartengine.GraphicalView getBubbleChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getBubbleChartView
    org.achartengine.GraphicalView getTimeChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getTimeChartView
    org.achartengine.GraphicalView getBarChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> getBarChartView
    org.achartengine.GraphicalView getRangeBarChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> getRangeBarChartView
    org.achartengine.GraphicalView getCombinedXYChartView(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[]) -> getCombinedXYChartView
    org.achartengine.GraphicalView getPieChartView(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer) -> getPieChartView
    org.achartengine.GraphicalView getDialChartView(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DialRenderer) -> getDialChartView
    org.achartengine.GraphicalView getDoughnutChartView(android.content.Context,org.achartengine.model.MultipleCategorySeries,org.achartengine.renderer.DefaultRenderer) -> getDoughnutChartView
    android.content.Intent getLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getLineChartIntent
    android.content.Intent getCubicLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,float) -> getCubicLineChartIntent
    android.content.Intent getScatterChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getScatterChartIntent
    android.content.Intent getBubbleChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> getBubbleChartIntent
    android.content.Intent getTimeChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getTimeChartIntent
    android.content.Intent getBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type) -> getBarChartIntent
    android.content.Intent getLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getLineChartIntent
    android.content.Intent getCubicLineChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,float,java.lang.String) -> getCubicLineChartIntent
    android.content.Intent getScatterChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getScatterChartIntent
    android.content.Intent getBubbleChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String) -> getBubbleChartIntent
    android.content.Intent getTimeChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String,java.lang.String) -> getTimeChartIntent
    android.content.Intent getBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type,java.lang.String) -> getBarChartIntent
    android.content.Intent getRangeBarChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,org.achartengine.chart.BarChart$Type,java.lang.String) -> getRangeBarChartIntent
    android.content.Intent getCombinedXYChartIntent(android.content.Context,org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer,java.lang.String[],java.lang.String) -> getCombinedXYChartIntent
    android.content.Intent getPieChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer,java.lang.String) -> getPieChartIntent
    android.content.Intent getDoughnutChartIntent(android.content.Context,org.achartengine.model.MultipleCategorySeries,org.achartengine.renderer.DefaultRenderer,java.lang.String) -> getDoughnutChartIntent
    android.content.Intent getDialChartIntent(android.content.Context,org.achartengine.model.CategorySeries,org.achartengine.renderer.DialRenderer,java.lang.String) -> getDialChartIntent
    void checkParameters(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> checkParameters
    void checkParameters(org.achartengine.model.CategorySeries,org.achartengine.renderer.DefaultRenderer) -> checkParameters
    void checkParameters(org.achartengine.model.MultipleCategorySeries,org.achartengine.renderer.DefaultRenderer) -> checkParameters
    boolean checkMultipleSeriesItems(org.achartengine.model.MultipleCategorySeries,int) -> checkMultipleSeriesItems
org.achartengine.GraphicalActivity -> org.achartengine.GraphicalActivity:
    org.achartengine.GraphicalView mView -> mView
    org.achartengine.chart.AbstractChart mChart -> mChart
    void onCreate(android.os.Bundle) -> onCreate
org.achartengine.GraphicalView -> org.achartengine.GraphicalView:
    org.achartengine.chart.AbstractChart mChart -> mChart
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    android.graphics.Rect mRect -> mRect
    android.os.Handler mHandler -> mHandler
    android.graphics.RectF mZoomR -> mZoomR
    android.graphics.Bitmap zoomInImage -> zoomInImage
    android.graphics.Bitmap zoomOutImage -> zoomOutImage
    android.graphics.Bitmap fitZoomImage -> fitZoomImage
    int zoomSize -> zoomSize
    int ZOOM_BUTTONS_COLOR -> ZOOM_BUTTONS_COLOR
    org.achartengine.tools.Zoom mZoomIn -> mZoomIn
    org.achartengine.tools.Zoom mZoomOut -> mZoomOut
    org.achartengine.tools.FitZoom mFitZoom -> mFitZoom
    android.graphics.Paint mPaint -> mPaint
    org.achartengine.ITouchHandler mTouchHandler -> mTouchHandler
    float oldX -> oldX
    float oldY -> oldY
    boolean mDrawn -> mDrawn
    org.achartengine.model.SeriesSelection getCurrentSeriesAndPoint() -> getCurrentSeriesAndPoint
    double[] toRealPoint(int) -> toRealPoint
    void onDraw(android.graphics.Canvas) -> onDraw
    void setZoomRate(float) -> setZoomRate
    void zoomIn() -> zoomIn
    void zoomOut() -> zoomOut
    void zoomReset() -> zoomReset
    void addZoomListener(org.achartengine.tools.ZoomListener,boolean,boolean) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
    android.graphics.RectF getZoomRectangle() -> getZoomRectangle
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void repaint() -> repaint
    void repaint(int,int,int,int) -> repaint
    android.graphics.Bitmap toBitmap() -> toBitmap
org.achartengine.GraphicalView$1 -> org.achartengine.a:
    org.achartengine.GraphicalView this$0 -> a
    void run() -> run
org.achartengine.GraphicalView$2 -> org.achartengine.b:
    int val$left -> a
    int val$top -> b
    int val$right -> c
    int val$bottom -> d
    org.achartengine.GraphicalView this$0 -> e
    void run() -> run
org.achartengine.ITouchHandler -> org.achartengine.ITouchHandler:
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.TouchHandler -> org.achartengine.TouchHandler:
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    float oldX -> oldX
    float oldY -> oldY
    float oldX2 -> oldX2
    float oldY2 -> oldY2
    android.graphics.RectF zoomR -> zoomR
    org.achartengine.tools.Pan mPan -> mPan
    org.achartengine.tools.Zoom mPinchZoom -> mPinchZoom
    org.achartengine.GraphicalView graphicalView -> graphicalView
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    void applyZoom(float,int) -> applyZoom
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.TouchHandlerOld -> org.achartengine.TouchHandlerOld:
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    float oldX -> oldX
    float oldY -> oldY
    android.graphics.RectF zoomR -> zoomR
    org.achartengine.tools.Pan mPan -> mPan
    org.achartengine.GraphicalView graphicalView -> graphicalView
    boolean handleTouch(android.view.MotionEvent) -> handleTouch
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.chart.AbstractChart -> org.achartengine.chart.AbstractChart:
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    void drawBackground(org.achartengine.renderer.DefaultRenderer,android.graphics.Canvas,int,int,int,int,android.graphics.Paint,boolean,int) -> drawBackground
    int drawLegend(android.graphics.Canvas,org.achartengine.renderer.DefaultRenderer,java.lang.String[],int,int,int,int,int,int,android.graphics.Paint,boolean) -> drawLegend
    void drawString(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint) -> drawString
    boolean getExceed(float,org.achartengine.renderer.DefaultRenderer,int,int) -> getExceed
    boolean isVertical(org.achartengine.renderer.DefaultRenderer) -> isVertical
    java.lang.String getLabel(java.text.NumberFormat,double) -> getLabel
    float[] calculateDrawPoints(float,float,float,float,int,int) -> calculateDrawPoints
    void drawPath(android.graphics.Canvas,java.util.List,android.graphics.Paint,boolean) -> drawPath
    void drawPath(android.graphics.Canvas,float[],android.graphics.Paint,boolean) -> drawPath
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    java.lang.String getFitText(java.lang.String,float,android.graphics.Paint) -> getFitText
    int getLegendSize(org.achartengine.renderer.DefaultRenderer,int,float) -> getLegendSize
    void drawLabel(android.graphics.Canvas,java.lang.String,org.achartengine.renderer.DefaultRenderer,java.util.List,int,int,float,float,float,float,int,int,int,android.graphics.Paint,boolean,boolean) -> drawLabel
    boolean isNullValue(double) -> isNullValue
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
org.achartengine.chart.BarChart -> org.achartengine.chart.BarChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    org.achartengine.chart.BarChart$Type mType -> mType
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    void drawBar(android.graphics.Canvas,float,float,float,float,float,int,int,android.graphics.Paint) -> drawBar
    void drawBar(android.graphics.Canvas,float,float,float,float,int,int,android.graphics.Paint) -> drawBar
    int getGradientPartialColor(int,int,float) -> getGradientPartialColor
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> drawChartValuesText
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    float getHalfDiffX(java.util.List,int,int) -> getHalfDiffX
    float getCoeficient() -> getCoeficient
    boolean isRenderNullValues() -> isRenderNullValues
    double getDefaultMinimum() -> getDefaultMinimum
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.BarChart$Type -> org.achartengine.chart.BarChart$Type:
    org.achartengine.chart.BarChart$Type DEFAULT -> DEFAULT
    org.achartengine.chart.BarChart$Type STACKED -> STACKED
    org.achartengine.chart.BarChart$Type[] $VALUES -> $VALUES
    org.achartengine.chart.BarChart$Type[] values() -> values
    org.achartengine.chart.BarChart$Type valueOf(java.lang.String) -> valueOf
org.achartengine.chart.BubbleChart -> org.achartengine.chart.BubbleChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    int MIN_BUBBLE_SIZE -> MIN_BUBBLE_SIZE
    int MAX_BUBBLE_SIZE -> MAX_BUBBLE_SIZE
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> drawCircle
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.ClickableArea -> org.achartengine.chart.ClickableArea:
    android.graphics.RectF rect -> rect
    double x -> x
    double y -> y
    android.graphics.RectF getRect() -> getRect
    double getX() -> getX
    double getY() -> getY
org.achartengine.chart.CombinedXYChart -> org.achartengine.chart.CombinedXYChart:
    org.achartengine.chart.XYChart[] mCharts -> mCharts
    java.lang.Class[] xyChartTypes -> xyChartTypes
    org.achartengine.chart.XYChart getXYChart(java.lang.String) -> getXYChart
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> drawSeries
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.CubicLineChart -> org.achartengine.chart.CubicLineChart:
    java.lang.String TYPE -> TYPE
    float firstMultiplier -> firstMultiplier
    float secondMultiplier -> secondMultiplier
    org.achartengine.model.Point p1 -> p1
    org.achartengine.model.Point p2 -> p2
    org.achartengine.model.Point p3 -> p3
    void drawPath(android.graphics.Canvas,java.util.List,android.graphics.Paint,boolean) -> drawPath
    void calc(java.util.List,org.achartengine.model.Point,int,int,float) -> calc
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.DialChart -> org.achartengine.chart.DialChart:
    int NEEDLE_RADIUS -> NEEDLE_RADIUS
    org.achartengine.renderer.DialRenderer mRenderer -> mRenderer
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    double getAngleForValue(double,double,double,double,double) -> getAngleForValue
    void drawTicks(android.graphics.Canvas,double,double,double,double,int,int,double,double,double,android.graphics.Paint,boolean) -> drawTicks
    void drawNeedle(android.graphics.Canvas,double,int,int,double,boolean,android.graphics.Paint) -> drawNeedle
org.achartengine.chart.DoughnutChart -> org.achartengine.chart.DoughnutChart:
    org.achartengine.model.MultipleCategorySeries mDataset -> mDataset
    int mStep -> mStep
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
org.achartengine.chart.LineChart -> org.achartengine.chart.LineChart:
    java.lang.String TYPE -> TYPE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    org.achartengine.chart.ScatterChart pointsChart -> pointsChart
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> isRenderPoints
    org.achartengine.chart.ScatterChart getPointsChart() -> getPointsChart
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.LineChart$1 -> org.achartengine.chart.a:
    int[] $SwitchMap$org$achartengine$renderer$XYSeriesRenderer$FillOutsideLine$Type -> a
org.achartengine.chart.PieChart -> org.achartengine.chart.PieChart:
    org.achartengine.chart.PieMapper mPieMapper -> mPieMapper
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
org.achartengine.chart.PieMapper -> org.achartengine.chart.PieMapper:
    java.util.List mPieSegmentList -> mPieSegmentList
    int mPieChartRadius -> mPieChartRadius
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    void setDimensions(int,int,int) -> setDimensions
    boolean areAllSegmentPresent(int) -> areAllSegmentPresent
    void addPieSegment(int,float,float,float) -> addPieSegment
    void clearPieSegments() -> clearPieSegments
    double getAngle(org.achartengine.model.Point) -> getAngle
    boolean isOnPieChart(org.achartengine.model.Point) -> isOnPieChart
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
org.achartengine.chart.PieSegment -> org.achartengine.chart.PieSegment:
    float mStartAngle -> mStartAngle
    float mEndAngle -> mEndAngle
    int mDataIndex -> mDataIndex
    float mValue -> mValue
    boolean isInSegment(double) -> isInSegment
    float getStartAngle() -> getStartAngle
    float getEndAngle() -> getEndAngle
    int getDataIndex() -> getDataIndex
    float getValue() -> getValue
    java.lang.String toString() -> toString
org.achartengine.chart.PointStyle -> org.achartengine.chart.PointStyle:
    org.achartengine.chart.PointStyle X -> X
    org.achartengine.chart.PointStyle CIRCLE -> CIRCLE
    org.achartengine.chart.PointStyle TRIANGLE -> TRIANGLE
    org.achartengine.chart.PointStyle SQUARE -> SQUARE
    org.achartengine.chart.PointStyle DIAMOND -> DIAMOND
    org.achartengine.chart.PointStyle POINT -> POINT
    java.lang.String mName -> mName
    org.achartengine.chart.PointStyle[] $VALUES -> $VALUES
    org.achartengine.chart.PointStyle[] values() -> values
    org.achartengine.chart.PointStyle valueOf(java.lang.String) -> valueOf
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    org.achartengine.chart.PointStyle getPointStyleForName(java.lang.String) -> getPointStyleForName
    int getIndexForName(java.lang.String) -> getIndexForName
org.achartengine.chart.RangeBarChart -> org.achartengine.chart.RangeBarChart:
    java.lang.String TYPE -> TYPE
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> drawChartValuesText
    float getCoeficient() -> getCoeficient
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.RangeStackedBarChart -> org.achartengine.chart.RangeStackedBarChart:
    java.lang.String TYPE -> TYPE
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.RoundChart -> org.achartengine.chart.RoundChart:
    int SHAPE_WIDTH -> SHAPE_WIDTH
    org.achartengine.model.CategorySeries mDataset -> mDataset
    org.achartengine.renderer.DefaultRenderer mRenderer -> mRenderer
    int NO_VALUE -> NO_VALUE
    int mCenterX -> mCenterX
    int mCenterY -> mCenterY
    void drawTitle(android.graphics.Canvas,int,int,int,android.graphics.Paint) -> drawTitle
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    org.achartengine.renderer.DefaultRenderer getRenderer() -> getRenderer
    int getCenterX() -> getCenterX
    int getCenterY() -> getCenterY
    void setCenterX(int) -> setCenterX
    void setCenterY(int) -> setCenterY
org.achartengine.chart.ScatterChart -> org.achartengine.chart.ScatterChart:
    java.lang.String TYPE -> TYPE
    float SIZE -> SIZE
    int SHAPE_WIDTH -> SHAPE_WIDTH
    float size -> size
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    int getLegendShapeWidth(int) -> getLegendShapeWidth
    void drawLegendShape(android.graphics.Canvas,org.achartengine.renderer.SimpleSeriesRenderer,float,float,int,android.graphics.Paint) -> drawLegendShape
    void drawX(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawX
    void drawCircle(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawCircle
    void drawTriangle(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> drawTriangle
    void drawSquare(android.graphics.Canvas,android.graphics.Paint,float,float) -> drawSquare
    void drawDiamond(android.graphics.Canvas,android.graphics.Paint,float[],float,float) -> drawDiamond
    java.lang.String getChartType() -> getChartType
org.achartengine.chart.ScatterChart$1 -> org.achartengine.chart.b:
    int[] $SwitchMap$org$achartengine$chart$PointStyle -> a
org.achartengine.chart.TimeChart -> org.achartengine.chart.TimeChart:
    java.lang.String TYPE -> TYPE
    long DAY -> DAY
    java.lang.String mDateFormat -> mDateFormat
    java.lang.Double mStartPoint -> mStartPoint
    java.lang.String getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> drawXLabels
    java.text.DateFormat getDateFormat(double,double) -> getDateFormat
    java.lang.String getChartType() -> getChartType
    java.util.List getXLabels(double,double,int) -> getXLabels
org.achartengine.chart.XYChart -> org.achartengine.chart.XYChart:
    org.achartengine.model.XYMultipleSeriesDataset mDataset -> mDataset
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> mRenderer
    float mScale -> mScale
    float mTranslate -> mTranslate
    org.achartengine.model.Point mCenter -> mCenter
    android.graphics.Rect mScreenR -> mScreenR
    java.util.Map mCalcRange -> mCalcRange
    java.util.Map clickableAreas -> clickableAreas
    void setDatasetRenderer(org.achartengine.model.XYMultipleSeriesDataset,org.achartengine.renderer.XYMultipleSeriesRenderer) -> setDatasetRenderer
    void draw(android.graphics.Canvas,int,int,int,int,android.graphics.Paint) -> draw
    java.util.List getXLabels(double,double,int) -> getXLabels
    java.util.Map getYLabels(double[],double[],int) -> getYLabels
    android.graphics.Rect getScreenR() -> getScreenR
    void setScreenR(android.graphics.Rect) -> setScreenR
    java.util.List getValidLabels(java.util.List) -> getValidLabels
    void drawSeries(org.achartengine.model.XYSeries,android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation,int) -> drawSeries
    void setStroke(android.graphics.Paint$Cap,android.graphics.Paint$Join,float,android.graphics.Paint$Style,android.graphics.PathEffect,android.graphics.Paint) -> setStroke
    void drawChartValuesText(android.graphics.Canvas,org.achartengine.model.XYSeries,org.achartengine.renderer.SimpleSeriesRenderer,android.graphics.Paint,java.util.List,int,int) -> drawChartValuesText
    void drawText(android.graphics.Canvas,java.lang.String,float,float,android.graphics.Paint,float) -> drawText
    void transform(android.graphics.Canvas,float,boolean) -> transform
    void drawXLabels(java.util.List,java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,int,int,int,double,double,double) -> drawXLabels
    void drawYLabels(java.util.Map,android.graphics.Canvas,android.graphics.Paint,int,int,int,int,double[],double[]) -> drawYLabels
    void drawXTextLabels(java.lang.Double[],android.graphics.Canvas,android.graphics.Paint,boolean,int,int,int,double,double,double) -> drawXTextLabels
    org.achartengine.renderer.XYMultipleSeriesRenderer getRenderer() -> getRenderer
    org.achartengine.model.XYMultipleSeriesDataset getDataset() -> getDataset
    double[] getCalcRange(int) -> getCalcRange
    void setCalcRange(double[],int) -> setCalcRange
    double[] toRealPoint(float,float) -> toRealPoint
    double[] toScreenPoint(double[]) -> toScreenPoint
    int getLabelLinePos(android.graphics.Paint$Align) -> getLabelLinePos
    double[] toRealPoint(float,float,int) -> toRealPoint
    double[] toScreenPoint(double[],int) -> toScreenPoint
    org.achartengine.model.SeriesSelection getSeriesAndPointForScreenCoordinate(org.achartengine.model.Point) -> getSeriesAndPointForScreenCoordinate
    void drawSeries(android.graphics.Canvas,android.graphics.Paint,java.util.List,org.achartengine.renderer.SimpleSeriesRenderer,float,int,int) -> drawSeries
    org.achartengine.chart.ClickableArea[] clickableAreasForPoints(java.util.List,java.util.List,float,int,int) -> clickableAreasForPoints
    boolean isRenderNullValues() -> isRenderNullValues
    boolean isRenderPoints(org.achartengine.renderer.SimpleSeriesRenderer) -> isRenderPoints
    double getDefaultMinimum() -> getDefaultMinimum
    org.achartengine.chart.ScatterChart getPointsChart() -> getPointsChart
    java.lang.String getChartType() -> getChartType
org.achartengine.model.CategorySeries -> org.achartengine.model.CategorySeries:
    java.lang.String mTitle -> mTitle
    java.util.List mCategories -> mCategories
    java.util.List mValues -> mValues
    java.lang.String getTitle() -> getTitle
    void add(double) -> add
    void add(java.lang.String,double) -> add
    void set(int,java.lang.String,double) -> set
    void remove(int) -> remove
    void clear() -> clear
    double getValue(int) -> getValue
    java.lang.String getCategory(int) -> getCategory
    int getItemCount() -> getItemCount
    org.achartengine.model.XYSeries toXYSeries() -> toXYSeries
org.achartengine.model.MultipleCategorySeries -> org.achartengine.model.MultipleCategorySeries:
    java.lang.String mTitle -> mTitle
    java.util.List mCategories -> mCategories
    java.util.List mTitles -> mTitles
    java.util.List mValues -> mValues
    void add(java.lang.String[],double[]) -> add
    void add(java.lang.String,java.lang.String[],double[]) -> add
    void remove(int) -> remove
    void clear() -> clear
    double[] getValues(int) -> getValues
    java.lang.String getCategory(int) -> getCategory
    int getCategoriesCount() -> getCategoriesCount
    int getItemCount(int) -> getItemCount
    java.lang.String[] getTitles(int) -> getTitles
    org.achartengine.model.XYSeries toXYSeries() -> toXYSeries
org.achartengine.model.Point -> org.achartengine.model.Point:
    float mX -> mX
    float mY -> mY
    float getX() -> getX
    float getY() -> getY
    void setX(float) -> setX
    void setY(float) -> setY
org.achartengine.model.RangeCategorySeries -> org.achartengine.model.RangeCategorySeries:
    java.util.List mMaxValues -> mMaxValues
    void add(double,double) -> add
    void add(java.lang.String,double,double) -> add
    void remove(int) -> remove
    void clear() -> clear
    double getMinimumValue(int) -> getMinimumValue
    double getMaximumValue(int) -> getMaximumValue
    org.achartengine.model.XYSeries toXYSeries() -> toXYSeries
org.achartengine.model.SeriesSelection -> org.achartengine.model.SeriesSelection:
    int mSeriesIndex -> mSeriesIndex
    int mPointIndex -> mPointIndex
    double mXValue -> mXValue
    double mValue -> mValue
    int getSeriesIndex() -> getSeriesIndex
    int getPointIndex() -> getPointIndex
    double getXValue() -> getXValue
    double getValue() -> getValue
org.achartengine.model.TimeSeries -> org.achartengine.model.TimeSeries:
    void add(java.util.Date,double) -> add
    double getPadding() -> getPadding
org.achartengine.model.XYMultipleSeriesDataset -> org.achartengine.model.XYMultipleSeriesDataset:
    java.util.List mSeries -> mSeries
    void addSeries(org.achartengine.model.XYSeries) -> addSeries
    void addSeries(int,org.achartengine.model.XYSeries) -> addSeries
    void addAllSeries(java.util.List) -> addAllSeries
    void removeSeries(int) -> removeSeries
    void removeSeries(org.achartengine.model.XYSeries) -> removeSeries
    void clear() -> clear
    org.achartengine.model.XYSeries getSeriesAt(int) -> getSeriesAt
    int getSeriesCount() -> getSeriesCount
    org.achartengine.model.XYSeries[] getSeries() -> getSeries
org.achartengine.model.XYSeries -> org.achartengine.model.XYSeries:
    java.lang.String mTitle -> mTitle
    org.achartengine.util.IndexXYMap mXY -> mXY
    double mMinX -> mMinX
    double mMaxX -> mMaxX
    double mMinY -> mMinY
    double mMaxY -> mMaxY
    int mScaleNumber -> mScaleNumber
    double PADDING -> PADDING
    java.util.List mAnnotations -> mAnnotations
    org.achartengine.util.IndexXYMap mStringXY -> mStringXY
    int getScaleNumber() -> getScaleNumber
    void initRange() -> initRange
    void updateRange(double,double) -> updateRange
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    void add(double,double) -> add
    void add(int,double,double) -> add
    double getPadding() -> getPadding
    void remove(int) -> remove
    void clear() -> clear
    double getX(int) -> getX
    double getY(int) -> getY
    void addAnnotation(java.lang.String,double,double) -> addAnnotation
    void removeAnnotation(int) -> removeAnnotation
    double getAnnotationX(int) -> getAnnotationX
    double getAnnotationY(int) -> getAnnotationY
    int getAnnotationCount() -> getAnnotationCount
    java.lang.String getAnnotationAt(int) -> getAnnotationAt
    java.util.SortedMap getRange(double,double,boolean) -> getRange
    int getIndexForKey(double) -> getIndexForKey
    int getItemCount() -> getItemCount
    double getMinX() -> getMinX
    double getMinY() -> getMinY
    double getMaxX() -> getMaxX
    double getMaxY() -> getMaxY
org.achartengine.model.XYValueSeries -> org.achartengine.model.XYValueSeries:
    java.util.List mValue -> mValue
    double mMinValue -> mMinValue
    double mMaxValue -> mMaxValue
    void add(double,double,double) -> add
    void initRange() -> initRange
    void updateRange(double) -> updateRange
    void add(double,double) -> add
    void remove(int) -> remove
    void clear() -> clear
    double getValue(int) -> getValue
    double getMinValue() -> getMinValue
    double getMaxValue() -> getMaxValue
org.achartengine.renderer.BasicStroke -> org.achartengine.renderer.BasicStroke:
    org.achartengine.renderer.BasicStroke SOLID -> SOLID
    org.achartengine.renderer.BasicStroke DASHED -> DASHED
    org.achartengine.renderer.BasicStroke DOTTED -> DOTTED
    android.graphics.Paint$Cap mCap -> mCap
    android.graphics.Paint$Join mJoin -> mJoin
    float mMiter -> mMiter
    float[] mIntervals -> mIntervals
    float mPhase -> mPhase
    android.graphics.Paint$Cap getCap() -> getCap
    android.graphics.Paint$Join getJoin() -> getJoin
    float getMiter() -> getMiter
    float[] getIntervals() -> getIntervals
    float getPhase() -> getPhase
org.achartengine.renderer.DefaultRenderer -> org.achartengine.renderer.DefaultRenderer:
    java.lang.String mChartTitle -> mChartTitle
    float mChartTitleTextSize -> mChartTitleTextSize
    int NO_COLOR -> NO_COLOR
    int BACKGROUND_COLOR -> BACKGROUND_COLOR
    int TEXT_COLOR -> TEXT_COLOR
    android.graphics.Typeface REGULAR_TEXT_FONT -> REGULAR_TEXT_FONT
    java.lang.String mTextTypefaceName -> mTextTypefaceName
    int mTextTypefaceStyle -> mTextTypefaceStyle
    android.graphics.Typeface mTextTypeface -> mTextTypeface
    int mBackgroundColor -> mBackgroundColor
    boolean mApplyBackgroundColor -> mApplyBackgroundColor
    boolean mShowAxes -> mShowAxes
    int mAxesColor -> mAxesColor
    boolean mShowLabels -> mShowLabels
    int mLabelsColor -> mLabelsColor
    float mLabelsTextSize -> mLabelsTextSize
    boolean mShowLegend -> mShowLegend
    float mLegendTextSize -> mLegendTextSize
    boolean mFitLegend -> mFitLegend
    boolean mShowGridX -> mShowGridX
    boolean mShowGridY -> mShowGridY
    boolean mShowCustomTextGrid -> mShowCustomTextGrid
    java.util.List mRenderers -> mRenderers
    boolean mAntialiasing -> mAntialiasing
    int mLegendHeight -> mLegendHeight
    int[] mMargins -> mMargins
    float mScale -> mScale
    boolean mPanEnabled -> mPanEnabled
    boolean mZoomEnabled -> mZoomEnabled
    boolean mZoomButtonsVisible -> mZoomButtonsVisible
    float mZoomRate -> mZoomRate
    boolean mExternalZoomEnabled -> mExternalZoomEnabled
    float mOriginalScale -> mOriginalScale
    boolean mClickEnabled -> mClickEnabled
    int selectableBuffer -> selectableBuffer
    boolean mDisplayValues -> mDisplayValues
    boolean mInScroll -> mInScroll
    float mStartAngle -> mStartAngle
    java.lang.String getChartTitle() -> getChartTitle
    void setChartTitle(java.lang.String) -> setChartTitle
    float getChartTitleTextSize() -> getChartTitleTextSize
    void setChartTitleTextSize(float) -> setChartTitleTextSize
    void addSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> addSeriesRenderer
    void addSeriesRenderer(int,org.achartengine.renderer.SimpleSeriesRenderer) -> addSeriesRenderer
    void removeSeriesRenderer(org.achartengine.renderer.SimpleSeriesRenderer) -> removeSeriesRenderer
    void removeAllRenderers() -> removeAllRenderers
    org.achartengine.renderer.SimpleSeriesRenderer getSeriesRendererAt(int) -> getSeriesRendererAt
    int getSeriesRendererCount() -> getSeriesRendererCount
    org.achartengine.renderer.SimpleSeriesRenderer[] getSeriesRenderers() -> getSeriesRenderers
    int getBackgroundColor() -> getBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    boolean isApplyBackgroundColor() -> isApplyBackgroundColor
    void setApplyBackgroundColor(boolean) -> setApplyBackgroundColor
    int getAxesColor() -> getAxesColor
    void setAxesColor(int) -> setAxesColor
    int getLabelsColor() -> getLabelsColor
    void setLabelsColor(int) -> setLabelsColor
    float getLabelsTextSize() -> getLabelsTextSize
    void setLabelsTextSize(float) -> setLabelsTextSize
    boolean isShowAxes() -> isShowAxes
    void setShowAxes(boolean) -> setShowAxes
    boolean isShowLabels() -> isShowLabels
    void setShowLabels(boolean) -> setShowLabels
    boolean isShowGridX() -> isShowGridX
    boolean isShowGridY() -> isShowGridY
    void setShowGridX(boolean) -> setShowGridX
    void setShowGridY(boolean) -> setShowGridY
    void setShowGrid(boolean) -> setShowGrid
    boolean isShowCustomTextGrid() -> isShowCustomTextGrid
    void setShowCustomTextGrid(boolean) -> setShowCustomTextGrid
    boolean isShowLegend() -> isShowLegend
    void setShowLegend(boolean) -> setShowLegend
    boolean isFitLegend() -> isFitLegend
    void setFitLegend(boolean) -> setFitLegend
    java.lang.String getTextTypefaceName() -> getTextTypefaceName
    int getTextTypefaceStyle() -> getTextTypefaceStyle
    android.graphics.Typeface getTextTypeface() -> getTextTypeface
    float getLegendTextSize() -> getLegendTextSize
    void setLegendTextSize(float) -> setLegendTextSize
    void setTextTypeface(java.lang.String,int) -> setTextTypeface
    void setTextTypeface(android.graphics.Typeface) -> setTextTypeface
    boolean isAntialiasing() -> isAntialiasing
    void setAntialiasing(boolean) -> setAntialiasing
    float getScale() -> getScale
    float getOriginalScale() -> getOriginalScale
    void setScale(float) -> setScale
    boolean isZoomEnabled() -> isZoomEnabled
    void setZoomEnabled(boolean) -> setZoomEnabled
    boolean isZoomButtonsVisible() -> isZoomButtonsVisible
    void setZoomButtonsVisible(boolean) -> setZoomButtonsVisible
    boolean isExternalZoomEnabled() -> isExternalZoomEnabled
    void setExternalZoomEnabled(boolean) -> setExternalZoomEnabled
    float getZoomRate() -> getZoomRate
    boolean isPanEnabled() -> isPanEnabled
    void setPanEnabled(boolean) -> setPanEnabled
    void setZoomRate(float) -> setZoomRate
    boolean isClickEnabled() -> isClickEnabled
    void setClickEnabled(boolean) -> setClickEnabled
    int getSelectableBuffer() -> getSelectableBuffer
    void setSelectableBuffer(int) -> setSelectableBuffer
    int getLegendHeight() -> getLegendHeight
    void setLegendHeight(int) -> setLegendHeight
    int[] getMargins() -> getMargins
    void setMargins(int[]) -> setMargins
    boolean isInScroll() -> isInScroll
    void setInScroll(boolean) -> setInScroll
    float getStartAngle() -> getStartAngle
    void setStartAngle(float) -> setStartAngle
    boolean isDisplayValues() -> isDisplayValues
    void setDisplayValues(boolean) -> setDisplayValues
org.achartengine.renderer.DialRenderer -> org.achartengine.renderer.DialRenderer:
    double mAngleMin -> mAngleMin
    double mAngleMax -> mAngleMax
    double mMinValue -> mMinValue
    double mMaxValue -> mMaxValue
    double mMinorTickSpacing -> mMinorTickSpacing
    double mMajorTickSpacing -> mMajorTickSpacing
    java.util.List mVisualTypes -> mVisualTypes
    double getAngleMin() -> getAngleMin
    void setAngleMin(double) -> setAngleMin
    double getAngleMax() -> getAngleMax
    void setAngleMax(double) -> setAngleMax
    double getMinValue() -> getMinValue
    void setMinValue(double) -> setMinValue
    boolean isMinValueSet() -> isMinValueSet
    double getMaxValue() -> getMaxValue
    void setMaxValue(double) -> setMaxValue
    boolean isMaxValueSet() -> isMaxValueSet
    double getMinorTicksSpacing() -> getMinorTicksSpacing
    void setMinorTicksSpacing(double) -> setMinorTicksSpacing
    double getMajorTicksSpacing() -> getMajorTicksSpacing
    void setMajorTicksSpacing(double) -> setMajorTicksSpacing
    org.achartengine.renderer.DialRenderer$Type getVisualTypeForIndex(int) -> getVisualTypeForIndex
    void setVisualTypes(org.achartengine.renderer.DialRenderer$Type[]) -> setVisualTypes
org.achartengine.renderer.DialRenderer$Type -> org.achartengine.renderer.DialRenderer$Type:
    org.achartengine.renderer.DialRenderer$Type NEEDLE -> NEEDLE
    org.achartengine.renderer.DialRenderer$Type ARROW -> ARROW
    org.achartengine.renderer.DialRenderer$Type[] $VALUES -> $VALUES
    org.achartengine.renderer.DialRenderer$Type[] values() -> values
    org.achartengine.renderer.DialRenderer$Type valueOf(java.lang.String) -> valueOf
org.achartengine.renderer.SimpleSeriesRenderer -> org.achartengine.renderer.SimpleSeriesRenderer:
    int mColor -> mColor
    boolean mDisplayChartValues -> mDisplayChartValues
    int mDisplayChartValuesDistance -> mDisplayChartValuesDistance
    float mChartValuesTextSize -> mChartValuesTextSize
    android.graphics.Paint$Align mChartValuesTextAlign -> mChartValuesTextAlign
    float mChartValuesSpacing -> mChartValuesSpacing
    org.achartengine.renderer.BasicStroke mStroke -> mStroke
    boolean mGradientEnabled -> mGradientEnabled
    double mGradientStartValue -> mGradientStartValue
    int mGradientStartColor -> mGradientStartColor
    double mGradientStopValue -> mGradientStopValue
    int mGradientStopColor -> mGradientStopColor
    boolean mShowLegendItem -> mShowLegendItem
    java.text.NumberFormat mChartValuesFormat -> mChartValuesFormat
    boolean mHighlighted -> mHighlighted
    boolean mDisplayBoundingPoints -> mDisplayBoundingPoints
    int getColor() -> getColor
    void setColor(int) -> setColor
    boolean isDisplayChartValues() -> isDisplayChartValues
    void setDisplayChartValues(boolean) -> setDisplayChartValues
    int getDisplayChartValuesDistance() -> getDisplayChartValuesDistance
    void setDisplayChartValuesDistance(int) -> setDisplayChartValuesDistance
    float getChartValuesTextSize() -> getChartValuesTextSize
    void setChartValuesTextSize(float) -> setChartValuesTextSize
    android.graphics.Paint$Align getChartValuesTextAlign() -> getChartValuesTextAlign
    void setChartValuesTextAlign(android.graphics.Paint$Align) -> setChartValuesTextAlign
    float getChartValuesSpacing() -> getChartValuesSpacing
    void setChartValuesSpacing(float) -> setChartValuesSpacing
    org.achartengine.renderer.BasicStroke getStroke() -> getStroke
    void setStroke(org.achartengine.renderer.BasicStroke) -> setStroke
    boolean isGradientEnabled() -> isGradientEnabled
    void setGradientEnabled(boolean) -> setGradientEnabled
    double getGradientStartValue() -> getGradientStartValue
    int getGradientStartColor() -> getGradientStartColor
    void setGradientStart(double,int) -> setGradientStart
    double getGradientStopValue() -> getGradientStopValue
    int getGradientStopColor() -> getGradientStopColor
    void setGradientStop(double,int) -> setGradientStop
    boolean isShowLegendItem() -> isShowLegendItem
    void setShowLegendItem(boolean) -> setShowLegendItem
    boolean isHighlighted() -> isHighlighted
    void setHighlighted(boolean) -> setHighlighted
    boolean isDisplayBoundingPoints() -> isDisplayBoundingPoints
    void setDisplayBoundingPoints(boolean) -> setDisplayBoundingPoints
    java.text.NumberFormat getChartValuesFormat() -> getChartValuesFormat
    void setChartValuesFormat(java.text.NumberFormat) -> setChartValuesFormat
org.achartengine.renderer.XYMultipleSeriesRenderer -> org.achartengine.renderer.XYMultipleSeriesRenderer:
    java.lang.String mXTitle -> mXTitle
    java.lang.String[] mYTitle -> mYTitle
    float mAxisTitleTextSize -> mAxisTitleTextSize
    double[] mMinX -> mMinX
    double[] mMaxX -> mMaxX
    double[] mMinY -> mMinY
    double[] mMaxY -> mMaxY
    int mXLabels -> mXLabels
    int mYLabels -> mYLabels
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation mOrientation -> mOrientation
    java.util.Map mXTextLabels -> mXTextLabels
    java.util.Map mYTextLabels -> mYTextLabels
    boolean mPanXEnabled -> mPanXEnabled
    boolean mPanYEnabled -> mPanYEnabled
    boolean mZoomXEnabled -> mZoomXEnabled
    boolean mZoomYEnabled -> mZoomYEnabled
    double mBarSpacing -> mBarSpacing
    int mMarginsColor -> mMarginsColor
    double[] mPanLimits -> mPanLimits
    double[] mZoomLimits -> mZoomLimits
    float mXLabelsAngle -> mXLabelsAngle
    float mYLabelsAngle -> mYLabelsAngle
    java.util.Map initialRange -> initialRange
    float mPointSize -> mPointSize
    int mGridColor -> mGridColor
    int scalesCount -> scalesCount
    android.graphics.Paint$Align xLabelsAlign -> xLabelsAlign
    android.graphics.Paint$Align[] yLabelsAlign -> yLabelsAlign
    float mXLabelsPadding -> mXLabelsPadding
    float mYLabelsPadding -> mYLabelsPadding
    float mYLabelsVerticalPadding -> mYLabelsVerticalPadding
    android.graphics.Paint$Align[] yAxisAlign -> yAxisAlign
    int mXLabelsColor -> mXLabelsColor
    int[] mYLabelsColor -> mYLabelsColor
    boolean mXRoundedLabels -> mXRoundedLabels
    java.text.NumberFormat mLabelFormat -> mLabelFormat
    float mBarWidth -> mBarWidth
    double mZoomInLimitX -> mZoomInLimitX
    double mZoomInLimitY -> mZoomInLimitY
    void initAxesRange(int) -> initAxesRange
    void initAxesRangeForScale(int) -> initAxesRangeForScale
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation getOrientation() -> getOrientation
    void setOrientation(org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation) -> setOrientation
    java.lang.String getXTitle() -> getXTitle
    void setXTitle(java.lang.String) -> setXTitle
    java.lang.String getYTitle() -> getYTitle
    java.lang.String getYTitle(int) -> getYTitle
    void setYTitle(java.lang.String) -> setYTitle
    void setYTitle(java.lang.String,int) -> setYTitle
    float getAxisTitleTextSize() -> getAxisTitleTextSize
    void setAxisTitleTextSize(float) -> setAxisTitleTextSize
    double getXAxisMin() -> getXAxisMin
    void setXAxisMin(double) -> setXAxisMin
    boolean isMinXSet() -> isMinXSet
    double getXAxisMax() -> getXAxisMax
    void setXAxisMax(double) -> setXAxisMax
    boolean isMaxXSet() -> isMaxXSet
    double getYAxisMin() -> getYAxisMin
    void setYAxisMin(double) -> setYAxisMin
    boolean isMinYSet() -> isMinYSet
    double getYAxisMax() -> getYAxisMax
    void setYAxisMax(double) -> setYAxisMax
    boolean isMaxYSet() -> isMaxYSet
    double getXAxisMin(int) -> getXAxisMin
    void setXAxisMin(double,int) -> setXAxisMin
    boolean isMinXSet(int) -> isMinXSet
    double getXAxisMax(int) -> getXAxisMax
    void setXAxisMax(double,int) -> setXAxisMax
    boolean isMaxXSet(int) -> isMaxXSet
    double getYAxisMin(int) -> getYAxisMin
    void setYAxisMin(double,int) -> setYAxisMin
    boolean isMinYSet(int) -> isMinYSet
    double getYAxisMax(int) -> getYAxisMax
    void setYAxisMax(double,int) -> setYAxisMax
    boolean isMaxYSet(int) -> isMaxYSet
    int getXLabels() -> getXLabels
    void setXLabels(int) -> setXLabels
    void addTextLabel(double,java.lang.String) -> addTextLabel
    void addXTextLabel(double,java.lang.String) -> addXTextLabel
    void removeXTextLabel(double) -> removeXTextLabel
    java.lang.String getXTextLabel(java.lang.Double) -> getXTextLabel
    java.lang.Double[] getXTextLabelLocations() -> getXTextLabelLocations
    void clearTextLabels() -> clearTextLabels
    void clearXTextLabels() -> clearXTextLabels
    boolean isXRoundedLabels() -> isXRoundedLabels
    void setXRoundedLabels(boolean) -> setXRoundedLabels
    void addYTextLabel(double,java.lang.String) -> addYTextLabel
    void removeYTextLabel(double) -> removeYTextLabel
    void addYTextLabel(double,java.lang.String,int) -> addYTextLabel
    void removeYTextLabel(double,int) -> removeYTextLabel
    java.lang.String getYTextLabel(java.lang.Double) -> getYTextLabel
    java.lang.String getYTextLabel(java.lang.Double,int) -> getYTextLabel
    java.lang.Double[] getYTextLabelLocations() -> getYTextLabelLocations
    java.lang.Double[] getYTextLabelLocations(int) -> getYTextLabelLocations
    void clearYTextLabels() -> clearYTextLabels
    void clearYTextLabels(int) -> clearYTextLabels
    int getYLabels() -> getYLabels
    void setYLabels(int) -> setYLabels
    void setDisplayChartValues(boolean) -> setDisplayChartValues
    void setChartValuesTextSize(float) -> setChartValuesTextSize
    float getBarWidth() -> getBarWidth
    void setBarWidth(float) -> setBarWidth
    boolean isPanEnabled() -> isPanEnabled
    boolean isPanXEnabled() -> isPanXEnabled
    boolean isPanYEnabled() -> isPanYEnabled
    void setPanEnabled(boolean,boolean) -> setPanEnabled
    void setPanEnabled(boolean) -> setPanEnabled
    boolean isZoomEnabled() -> isZoomEnabled
    boolean isZoomXEnabled() -> isZoomXEnabled
    boolean isZoomYEnabled() -> isZoomYEnabled
    void setZoomEnabled(boolean,boolean) -> setZoomEnabled
    double getBarsSpacing() -> getBarsSpacing
    double getBarSpacing() -> getBarSpacing
    void setBarSpacing(double) -> setBarSpacing
    int getMarginsColor() -> getMarginsColor
    void setMarginsColor(int) -> setMarginsColor
    int getGridColor() -> getGridColor
    void setGridColor(int) -> setGridColor
    double[] getPanLimits() -> getPanLimits
    void setPanLimits(double[]) -> setPanLimits
    double[] getZoomLimits() -> getZoomLimits
    void setZoomLimits(double[]) -> setZoomLimits
    float getXLabelsAngle() -> getXLabelsAngle
    void setXLabelsAngle(float) -> setXLabelsAngle
    float getYLabelsAngle() -> getYLabelsAngle
    void setYLabelsAngle(float) -> setYLabelsAngle
    float getPointSize() -> getPointSize
    void setPointSize(float) -> setPointSize
    void setRange(double[]) -> setRange
    void setRange(double[],int) -> setRange
    boolean isInitialRangeSet() -> isInitialRangeSet
    boolean isInitialRangeSet(int) -> isInitialRangeSet
    double[] getInitialRange() -> getInitialRange
    double[] getInitialRange(int) -> getInitialRange
    void setInitialRange(double[]) -> setInitialRange
    void setInitialRange(double[],int) -> setInitialRange
    int getXLabelsColor() -> getXLabelsColor
    int getYLabelsColor(int) -> getYLabelsColor
    void setXLabelsColor(int) -> setXLabelsColor
    void setYLabelsColor(int,int) -> setYLabelsColor
    android.graphics.Paint$Align getXLabelsAlign() -> getXLabelsAlign
    void setXLabelsAlign(android.graphics.Paint$Align) -> setXLabelsAlign
    android.graphics.Paint$Align getYLabelsAlign(int) -> getYLabelsAlign
    void setYLabelsAlign(android.graphics.Paint$Align) -> setYLabelsAlign
    android.graphics.Paint$Align getYAxisAlign(int) -> getYAxisAlign
    void setYAxisAlign(android.graphics.Paint$Align,int) -> setYAxisAlign
    void setYLabelsAlign(android.graphics.Paint$Align,int) -> setYLabelsAlign
    float getXLabelsPadding() -> getXLabelsPadding
    void setXLabelsPadding(float) -> setXLabelsPadding
    float getYLabelsPadding() -> getYLabelsPadding
    void setYLabelsVerticalPadding(float) -> setYLabelsVerticalPadding
    float getYLabelsVerticalPadding() -> getYLabelsVerticalPadding
    void setYLabelsPadding(float) -> setYLabelsPadding
    java.text.NumberFormat getLabelFormat() -> getLabelFormat
    void setLabelFormat(java.text.NumberFormat) -> setLabelFormat
    double getZoomInLimitX() -> getZoomInLimitX
    void setZoomInLimitX(double) -> setZoomInLimitX
    double getZoomInLimitY() -> getZoomInLimitY
    void setZoomInLimitY(double) -> setZoomInLimitY
    int getScalesCount() -> getScalesCount
org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation -> org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation:
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation HORIZONTAL -> HORIZONTAL
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation VERTICAL -> VERTICAL
    int mAngle -> mAngle
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] $VALUES -> $VALUES
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation[] values() -> values
    org.achartengine.renderer.XYMultipleSeriesRenderer$Orientation valueOf(java.lang.String) -> valueOf
    int getAngle() -> getAngle
org.achartengine.renderer.XYSeriesRenderer -> org.achartengine.renderer.XYSeriesRenderer:
    boolean mFillPoints -> mFillPoints
    java.util.List mFillBelowLine -> mFillBelowLine
    org.achartengine.chart.PointStyle mPointStyle -> mPointStyle
    float mPointStrokeWidth -> mPointStrokeWidth
    float mLineWidth -> mLineWidth
    boolean isFillBelowLine() -> isFillBelowLine
    void setFillBelowLine(boolean) -> setFillBelowLine
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine[] getFillOutsideLine() -> getFillOutsideLine
    void addFillOutsideLine(org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine) -> addFillOutsideLine
    boolean isFillPoints() -> isFillPoints
    void setFillPoints(boolean) -> setFillPoints
    void setFillBelowLineColor(int) -> setFillBelowLineColor
    org.achartengine.chart.PointStyle getPointStyle() -> getPointStyle
    void setPointStyle(org.achartengine.chart.PointStyle) -> setPointStyle
    float getPointStrokeWidth() -> getPointStrokeWidth
    void setPointStrokeWidth(float) -> setPointStrokeWidth
    float getLineWidth() -> getLineWidth
    void setLineWidth(float) -> setLineWidth
org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine -> org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine:
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type mType -> mType
    int mColor -> mColor
    int[] mFillRange -> mFillRange
    int getColor() -> getColor
    void setColor(int) -> setColor
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type getType() -> getType
    int[] getFillRange() -> getFillRange
    void setFillRange(int[]) -> setFillRange
org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type -> org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type:
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type NONE -> NONE
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_ALL -> BOUNDS_ALL
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_BELOW -> BOUNDS_BELOW
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BOUNDS_ABOVE -> BOUNDS_ABOVE
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type BELOW -> BELOW
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type ABOVE -> ABOVE
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type[] $VALUES -> $VALUES
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type[] values() -> values
    org.achartengine.renderer.XYSeriesRenderer$FillOutsideLine$Type valueOf(java.lang.String) -> valueOf
org.achartengine.tools.AbstractTool -> org.achartengine.tools.AbstractTool:
    org.achartengine.chart.AbstractChart mChart -> mChart
    org.achartengine.renderer.XYMultipleSeriesRenderer mRenderer -> mRenderer
    double[] getRange(int) -> getRange
    void checkRange(double[],int) -> checkRange
    void setXRange(double,double,int) -> setXRange
    void setYRange(double,double,int) -> setYRange
org.achartengine.tools.FitZoom -> org.achartengine.tools.FitZoom:
    void apply() -> apply
org.achartengine.tools.Pan -> org.achartengine.tools.Pan:
    java.util.List mPanListeners -> mPanListeners
    boolean limitsReachedX -> limitsReachedX
    boolean limitsReachedY -> limitsReachedY
    void apply(float,float,float,float) -> apply
    double getAxisRatio(double[]) -> getAxisRatio
    void notifyPanListeners() -> notifyPanListeners
    void addPanListener(org.achartengine.tools.PanListener) -> addPanListener
    void removePanListener(org.achartengine.tools.PanListener) -> removePanListener
org.achartengine.tools.PanListener -> org.achartengine.tools.PanListener:
    void panApplied() -> panApplied
org.achartengine.tools.Zoom -> org.achartengine.tools.Zoom:
    boolean mZoomIn -> mZoomIn
    float mZoomRate -> mZoomRate
    java.util.List mZoomListeners -> mZoomListeners
    boolean limitsReachedX -> limitsReachedX
    boolean limitsReachedY -> limitsReachedY
    int ZOOM_AXIS_XY -> ZOOM_AXIS_XY
    int ZOOM_AXIS_X -> ZOOM_AXIS_X
    int ZOOM_AXIS_Y -> ZOOM_AXIS_Y
    void setZoomRate(float) -> setZoomRate
    void apply(int) -> apply
    void notifyZoomListeners(org.achartengine.tools.ZoomEvent) -> notifyZoomListeners
    void notifyZoomResetListeners() -> notifyZoomResetListeners
    void addZoomListener(org.achartengine.tools.ZoomListener) -> addZoomListener
    void removeZoomListener(org.achartengine.tools.ZoomListener) -> removeZoomListener
org.achartengine.tools.ZoomEvent -> org.achartengine.tools.ZoomEvent:
    boolean mZoomIn -> mZoomIn
    float mZoomRate -> mZoomRate
    boolean isZoomIn() -> isZoomIn
    float getZoomRate() -> getZoomRate
org.achartengine.tools.ZoomListener -> org.achartengine.tools.ZoomListener:
    void zoomApplied(org.achartengine.tools.ZoomEvent) -> zoomApplied
    void zoomReset() -> zoomReset
org.achartengine.util.IndexXYMap -> org.achartengine.util.IndexXYMap:
    java.util.List indexList -> indexList
    double maxXDifference -> maxXDifference
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put(int,java.lang.Object,java.lang.Object) -> put
    void updateMaxXDifference() -> updateMaxXDifference
    double getMaxXDifference() -> getMaxXDifference
    void clear() -> clear
    java.lang.Object getXByIndex(int) -> getXByIndex
    java.lang.Object getYByIndex(int) -> getYByIndex
    org.achartengine.util.XYEntry getByIndex(int) -> getByIndex
    org.achartengine.util.XYEntry removeByIndex(int) -> removeByIndex
    int getIndexForKey(java.lang.Object) -> getIndexForKey
org.achartengine.util.MathHelper -> org.achartengine.util.MathHelper:
    double NULL_VALUE -> NULL_VALUE
    java.text.NumberFormat FORMAT -> FORMAT
    double[] minmax(java.util.List) -> minmax
    java.util.List getLabels(double,double,int) -> getLabels
    double[] computeLabels(double,double,int) -> computeLabels
    double roundUp(double) -> roundUp
org.achartengine.util.XYEntry -> org.achartengine.util.XYEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.a:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> a
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream,int) -> writeTo
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.dom4j.Attribute -> org.dom4j.Attribute:
    org.dom4j.QName getQName() -> getQName
    org.dom4j.Namespace getNamespace() -> getNamespace
    void setNamespace(org.dom4j.Namespace) -> setNamespace
    java.lang.String getNamespacePrefix() -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getQualifiedName() -> getQualifiedName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
org.dom4j.Branch -> org.dom4j.Branch:
    org.dom4j.Node node(int) -> node
    int indexOf(org.dom4j.Node) -> indexOf
    int nodeCount() -> nodeCount
    org.dom4j.Element elementByID(java.lang.String) -> elementByID
    java.util.List content() -> content
    java.util.Iterator nodeIterator() -> nodeIterator
    void setContent(java.util.List) -> setContent
    void appendContent(org.dom4j.Branch) -> appendContent
    void clearContent() -> clearContent
    java.util.List processingInstructions() -> processingInstructions
    java.util.List processingInstructions(java.lang.String) -> processingInstructions
    org.dom4j.ProcessingInstruction processingInstruction(java.lang.String) -> processingInstruction
    void setProcessingInstructions(java.util.List) -> setProcessingInstructions
    org.dom4j.Element addElement(java.lang.String) -> addElement
    org.dom4j.Element addElement(org.dom4j.QName) -> addElement
    org.dom4j.Element addElement(java.lang.String,java.lang.String) -> addElement
    boolean removeProcessingInstruction(java.lang.String) -> removeProcessingInstruction
    void add(org.dom4j.Node) -> add
    void add(org.dom4j.Comment) -> add
    void add(org.dom4j.Element) -> add
    void add(org.dom4j.ProcessingInstruction) -> add
    boolean remove(org.dom4j.Node) -> remove
    boolean remove(org.dom4j.Comment) -> remove
    boolean remove(org.dom4j.Element) -> remove
    boolean remove(org.dom4j.ProcessingInstruction) -> remove
    void normalize() -> normalize
org.dom4j.CDATA -> org.dom4j.CDATA:
org.dom4j.CharacterData -> org.dom4j.CharacterData:
    void appendText(java.lang.String) -> appendText
org.dom4j.Comment -> org.dom4j.Comment:
org.dom4j.Document -> org.dom4j.Document:
    org.dom4j.Element getRootElement() -> getRootElement
    void setRootElement(org.dom4j.Element) -> setRootElement
    org.dom4j.Document addComment(java.lang.String) -> addComment
    org.dom4j.Document addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    org.dom4j.Document addProcessingInstruction(java.lang.String,java.util.Map) -> addProcessingInstruction
    org.dom4j.Document addDocType(java.lang.String,java.lang.String,java.lang.String) -> addDocType
    org.dom4j.DocumentType getDocType() -> getDocType
    void setDocType(org.dom4j.DocumentType) -> setDocType
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    java.lang.String getXMLEncoding() -> getXMLEncoding
    void setXMLEncoding(java.lang.String) -> setXMLEncoding
org.dom4j.DocumentException -> org.dom4j.DocumentException:
    java.lang.Throwable nestedException -> nestedException
    java.lang.Throwable getNestedException() -> getNestedException
    java.lang.String getMessage() -> getMessage
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
org.dom4j.DocumentFactory -> org.dom4j.DocumentFactory:
    org.dom4j.util.SingletonStrategy singleton -> singleton
    org.dom4j.tree.QNameCache cache -> cache
    java.util.Map xpathNamespaceURIs -> xpathNamespaceURIs
    java.lang.Class class$org$dom4j$DocumentFactory -> class$org$dom4j$DocumentFactory
    org.dom4j.util.SingletonStrategy createSingleton() -> createSingleton
    org.dom4j.DocumentFactory getInstance() -> getInstance
    org.dom4j.Document createDocument() -> createDocument
    org.dom4j.Document createDocument(java.lang.String) -> createDocument
    org.dom4j.Document createDocument(org.dom4j.Element) -> createDocument
    org.dom4j.DocumentType createDocType(java.lang.String,java.lang.String,java.lang.String) -> createDocType
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Element createElement(java.lang.String) -> createElement
    org.dom4j.Element createElement(java.lang.String,java.lang.String) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
    org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String) -> createAttribute
    org.dom4j.CDATA createCDATA(java.lang.String) -> createCDATA
    org.dom4j.Comment createComment(java.lang.String) -> createComment
    org.dom4j.Text createText(java.lang.String) -> createText
    org.dom4j.Entity createEntity(java.lang.String,java.lang.String) -> createEntity
    org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String) -> createProcessingInstruction
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map) -> createProcessingInstruction
    org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace) -> createQName
    org.dom4j.QName createQName(java.lang.String) -> createQName
    org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String) -> createQName
    org.dom4j.QName createQName(java.lang.String,java.lang.String) -> createQName
    org.dom4j.XPath createXPath(java.lang.String) -> createXPath
    org.dom4j.XPath createXPath(java.lang.String,org.jaxen.VariableContext) -> createXPath
    org.dom4j.NodeFilter createXPathFilter(java.lang.String,org.jaxen.VariableContext) -> createXPathFilter
    org.dom4j.NodeFilter createXPathFilter(java.lang.String) -> createXPathFilter
    org.dom4j.rule.Pattern createPattern(java.lang.String) -> createPattern
    java.util.List getQNames() -> getQNames
    java.util.Map getXPathNamespaceURIs() -> getXPathNamespaceURIs
    void setXPathNamespaceURIs(java.util.Map) -> setXPathNamespaceURIs
    org.dom4j.DocumentFactory createSingleton(java.lang.String) -> createSingleton
    org.dom4j.QName intern(org.dom4j.QName) -> intern
    org.dom4j.tree.QNameCache createQNameCache() -> createQNameCache
    void readObject(java.io.ObjectInputStream) -> readObject
    void init() -> init
    java.lang.Class class$(java.lang.String) -> class$
org.dom4j.DocumentHelper -> org.dom4j.DocumentHelper:
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    org.dom4j.Document createDocument() -> createDocument
    org.dom4j.Document createDocument(org.dom4j.Element) -> createDocument
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Element createElement(java.lang.String) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
    org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String) -> createAttribute
    org.dom4j.CDATA createCDATA(java.lang.String) -> createCDATA
    org.dom4j.Comment createComment(java.lang.String) -> createComment
    org.dom4j.Text createText(java.lang.String) -> createText
    org.dom4j.Entity createEntity(java.lang.String,java.lang.String) -> createEntity
    org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String) -> createProcessingInstruction
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map) -> createProcessingInstruction
    org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace) -> createQName
    org.dom4j.QName createQName(java.lang.String) -> createQName
    org.dom4j.XPath createXPath(java.lang.String) -> createXPath
    org.dom4j.XPath createXPath(java.lang.String,org.jaxen.VariableContext) -> createXPath
    org.dom4j.NodeFilter createXPathFilter(java.lang.String) -> createXPathFilter
    org.dom4j.rule.Pattern createPattern(java.lang.String) -> createPattern
    java.util.List selectNodes(java.lang.String,java.util.List) -> selectNodes
    java.util.List selectNodes(java.lang.String,org.dom4j.Node) -> selectNodes
    void sort(java.util.List,java.lang.String) -> sort
    void sort(java.util.List,java.lang.String,boolean) -> sort
    org.dom4j.Document parseText(java.lang.String) -> parseText
    java.lang.String getEncoding(java.lang.String) -> getEncoding
    org.dom4j.Element makeElement(org.dom4j.Branch,java.lang.String) -> makeElement
org.dom4j.DocumentType -> org.dom4j.DocumentType:
    java.lang.String getElementName() -> getElementName
    void setElementName(java.lang.String) -> setElementName
    java.lang.String getPublicID() -> getPublicID
    void setPublicID(java.lang.String) -> setPublicID
    java.lang.String getSystemID() -> getSystemID
    void setSystemID(java.lang.String) -> setSystemID
    java.util.List getInternalDeclarations() -> getInternalDeclarations
    void setInternalDeclarations(java.util.List) -> setInternalDeclarations
    java.util.List getExternalDeclarations() -> getExternalDeclarations
    void setExternalDeclarations(java.util.List) -> setExternalDeclarations
org.dom4j.Element -> org.dom4j.Element:
    org.dom4j.QName getQName() -> getQName
    void setQName(org.dom4j.QName) -> setQName
    org.dom4j.Namespace getNamespace() -> getNamespace
    org.dom4j.QName getQName(java.lang.String) -> getQName
    org.dom4j.Namespace getNamespaceForPrefix(java.lang.String) -> getNamespaceForPrefix
    org.dom4j.Namespace getNamespaceForURI(java.lang.String) -> getNamespaceForURI
    java.util.List getNamespacesForURI(java.lang.String) -> getNamespacesForURI
    java.lang.String getNamespacePrefix() -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getQualifiedName() -> getQualifiedName
    java.util.List additionalNamespaces() -> additionalNamespaces
    java.util.List declaredNamespaces() -> declaredNamespaces
    org.dom4j.Element addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String) -> addAttribute
    org.dom4j.Element addComment(java.lang.String) -> addComment
    org.dom4j.Element addCDATA(java.lang.String) -> addCDATA
    org.dom4j.Element addEntity(java.lang.String,java.lang.String) -> addEntity
    org.dom4j.Element addNamespace(java.lang.String,java.lang.String) -> addNamespace
    org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map) -> addProcessingInstruction
    org.dom4j.Element addText(java.lang.String) -> addText
    void add(org.dom4j.Attribute) -> add
    void add(org.dom4j.CDATA) -> add
    void add(org.dom4j.Entity) -> add
    void add(org.dom4j.Text) -> add
    void add(org.dom4j.Namespace) -> add
    boolean remove(org.dom4j.Attribute) -> remove
    boolean remove(org.dom4j.CDATA) -> remove
    boolean remove(org.dom4j.Entity) -> remove
    boolean remove(org.dom4j.Namespace) -> remove
    boolean remove(org.dom4j.Text) -> remove
    java.lang.String getText() -> getText
    java.lang.String getTextTrim() -> getTextTrim
    java.lang.String getStringValue() -> getStringValue
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    java.util.List attributes() -> attributes
    void setAttributes(java.util.List) -> setAttributes
    int attributeCount() -> attributeCount
    java.util.Iterator attributeIterator() -> attributeIterator
    org.dom4j.Attribute attribute(int) -> attribute
    org.dom4j.Attribute attribute(java.lang.String) -> attribute
    org.dom4j.Attribute attribute(org.dom4j.QName) -> attribute
    java.lang.String attributeValue(java.lang.String) -> attributeValue
    java.lang.String attributeValue(java.lang.String,java.lang.String) -> attributeValue
    java.lang.String attributeValue(org.dom4j.QName) -> attributeValue
    java.lang.String attributeValue(org.dom4j.QName,java.lang.String) -> attributeValue
    void setAttributeValue(java.lang.String,java.lang.String) -> setAttributeValue
    void setAttributeValue(org.dom4j.QName,java.lang.String) -> setAttributeValue
    org.dom4j.Element element(java.lang.String) -> element
    org.dom4j.Element element(org.dom4j.QName) -> element
    java.util.List elements() -> elements
    java.util.List elements(java.lang.String) -> elements
    java.util.List elements(org.dom4j.QName) -> elements
    java.util.Iterator elementIterator() -> elementIterator
    java.util.Iterator elementIterator(java.lang.String) -> elementIterator
    java.util.Iterator elementIterator(org.dom4j.QName) -> elementIterator
    boolean isRootElement() -> isRootElement
    boolean hasMixedContent() -> hasMixedContent
    boolean isTextOnly() -> isTextOnly
    void appendAttributes(org.dom4j.Element) -> appendAttributes
    org.dom4j.Element createCopy() -> createCopy
    org.dom4j.Element createCopy(java.lang.String) -> createCopy
    org.dom4j.Element createCopy(org.dom4j.QName) -> createCopy
    java.lang.String elementText(java.lang.String) -> elementText
    java.lang.String elementText(org.dom4j.QName) -> elementText
    java.lang.String elementTextTrim(java.lang.String) -> elementTextTrim
    java.lang.String elementTextTrim(org.dom4j.QName) -> elementTextTrim
    org.dom4j.Node getXPathResult(int) -> getXPathResult
org.dom4j.ElementHandler -> org.dom4j.ElementHandler:
    void onStart(org.dom4j.ElementPath) -> onStart
    void onEnd(org.dom4j.ElementPath) -> onEnd
org.dom4j.ElementPath -> org.dom4j.ElementPath:
    int size() -> size
    org.dom4j.Element getElement(int) -> getElement
    java.lang.String getPath() -> getPath
    org.dom4j.Element getCurrent() -> getCurrent
    void addHandler(java.lang.String,org.dom4j.ElementHandler) -> addHandler
    void removeHandler(java.lang.String) -> removeHandler
org.dom4j.Entity -> org.dom4j.Entity:
org.dom4j.IllegalAddException -> org.dom4j.IllegalAddException:
org.dom4j.InvalidXPathException -> org.dom4j.InvalidXPathException:
    long serialVersionUID -> serialVersionUID
org.dom4j.Namespace -> org.dom4j.Namespace:
    org.dom4j.tree.NamespaceCache CACHE -> CACHE
    org.dom4j.Namespace XML_NAMESPACE -> XML_NAMESPACE
    org.dom4j.Namespace NO_NAMESPACE -> NO_NAMESPACE
    java.lang.String prefix -> prefix
    java.lang.String uri -> uri
    int hashCode -> hashCode
    org.dom4j.Namespace get(java.lang.String,java.lang.String) -> get
    org.dom4j.Namespace get(java.lang.String) -> get
    short getNodeType() -> getNodeType
    int hashCode() -> hashCode
    int createHashCode() -> createHashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String getText() -> getText
    java.lang.String getStringValue() -> getStringValue
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getURI() -> getURI
    java.lang.String getXPathNameStep() -> getXPathNameStep
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    java.lang.String toString() -> toString
    java.lang.String asXML() -> asXML
    void accept(org.dom4j.Visitor) -> accept
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.Node -> org.dom4j.Node:
    short ANY_NODE -> ANY_NODE
    short ELEMENT_NODE -> ELEMENT_NODE
    short ATTRIBUTE_NODE -> ATTRIBUTE_NODE
    short TEXT_NODE -> TEXT_NODE
    short CDATA_SECTION_NODE -> CDATA_SECTION_NODE
    short ENTITY_REFERENCE_NODE -> ENTITY_REFERENCE_NODE
    short PROCESSING_INSTRUCTION_NODE -> PROCESSING_INSTRUCTION_NODE
    short COMMENT_NODE -> COMMENT_NODE
    short DOCUMENT_NODE -> DOCUMENT_NODE
    short DOCUMENT_TYPE_NODE -> DOCUMENT_TYPE_NODE
    short NAMESPACE_NODE -> NAMESPACE_NODE
    short UNKNOWN_NODE -> UNKNOWN_NODE
    short MAX_NODE_TYPE -> MAX_NODE_TYPE
    boolean supportsParent() -> supportsParent
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    org.dom4j.Document getDocument() -> getDocument
    void setDocument(org.dom4j.Document) -> setDocument
    boolean isReadOnly() -> isReadOnly
    boolean hasContent() -> hasContent
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getStringValue() -> getStringValue
    java.lang.String getPath() -> getPath
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath() -> getUniquePath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    short getNodeType() -> getNodeType
    java.lang.String getNodeTypeName() -> getNodeTypeName
    org.dom4j.Node detach() -> detach
    java.util.List selectNodes(java.lang.String) -> selectNodes
    java.lang.Object selectObject(java.lang.String) -> selectObject
    java.util.List selectNodes(java.lang.String,java.lang.String) -> selectNodes
    java.util.List selectNodes(java.lang.String,java.lang.String,boolean) -> selectNodes
    org.dom4j.Node selectSingleNode(java.lang.String) -> selectSingleNode
    java.lang.String valueOf(java.lang.String) -> valueOf
    java.lang.Number numberValueOf(java.lang.String) -> numberValueOf
    boolean matches(java.lang.String) -> matches
    org.dom4j.XPath createXPath(java.lang.String) -> createXPath
    org.dom4j.Node asXPathResult(org.dom4j.Element) -> asXPathResult
    void accept(org.dom4j.Visitor) -> accept
    java.lang.Object clone() -> clone
org.dom4j.NodeFilter -> org.dom4j.NodeFilter:
    boolean matches(org.dom4j.Node) -> matches
org.dom4j.ProcessingInstruction -> org.dom4j.ProcessingInstruction:
    java.lang.String getTarget() -> getTarget
    void setTarget(java.lang.String) -> setTarget
    java.lang.String getText() -> getText
    java.lang.String getValue(java.lang.String) -> getValue
    java.util.Map getValues() -> getValues
    void setValue(java.lang.String,java.lang.String) -> setValue
    void setValues(java.util.Map) -> setValues
    boolean removeValue(java.lang.String) -> removeValue
org.dom4j.QName -> org.dom4j.QName:
    org.dom4j.util.SingletonStrategy singleton -> singleton
    java.lang.String name -> name
    java.lang.String qualifiedName -> qualifiedName
    org.dom4j.Namespace namespace -> namespace
    int hashCode -> hashCode
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    java.lang.Class class$org$dom4j$tree$QNameCache -> class$org$dom4j$tree$QNameCache
    org.dom4j.QName get(java.lang.String) -> get
    org.dom4j.QName get(java.lang.String,org.dom4j.Namespace) -> get
    org.dom4j.QName get(java.lang.String,java.lang.String,java.lang.String) -> get
    org.dom4j.QName get(java.lang.String,java.lang.String) -> get
    org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String) -> get
    java.lang.String getName() -> getName
    java.lang.String getQualifiedName() -> getQualifiedName
    org.dom4j.Namespace getNamespace() -> getNamespace
    java.lang.String getNamespacePrefix() -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    org.dom4j.tree.QNameCache getCache() -> getCache
    java.lang.Class class$(java.lang.String) -> class$
org.dom4j.Text -> org.dom4j.Text:
org.dom4j.Visitor -> org.dom4j.Visitor:
    void visit(org.dom4j.Document) -> visit
    void visit(org.dom4j.DocumentType) -> visit
    void visit(org.dom4j.Element) -> visit
    void visit(org.dom4j.Attribute) -> visit
    void visit(org.dom4j.CDATA) -> visit
    void visit(org.dom4j.Comment) -> visit
    void visit(org.dom4j.Entity) -> visit
    void visit(org.dom4j.Namespace) -> visit
    void visit(org.dom4j.ProcessingInstruction) -> visit
    void visit(org.dom4j.Text) -> visit
org.dom4j.VisitorSupport -> org.dom4j.VisitorSupport:
    void visit(org.dom4j.Document) -> visit
    void visit(org.dom4j.DocumentType) -> visit
    void visit(org.dom4j.Element) -> visit
    void visit(org.dom4j.Attribute) -> visit
    void visit(org.dom4j.CDATA) -> visit
    void visit(org.dom4j.Comment) -> visit
    void visit(org.dom4j.Entity) -> visit
    void visit(org.dom4j.Namespace) -> visit
    void visit(org.dom4j.ProcessingInstruction) -> visit
    void visit(org.dom4j.Text) -> visit
org.dom4j.XPath -> org.dom4j.XPath:
    java.lang.String getText() -> getText
    boolean matches(org.dom4j.Node) -> matches
    java.lang.Object evaluate(java.lang.Object) -> evaluate
    java.lang.Object selectObject(java.lang.Object) -> selectObject
    java.util.List selectNodes(java.lang.Object) -> selectNodes
    java.util.List selectNodes(java.lang.Object,org.dom4j.XPath) -> selectNodes
    java.util.List selectNodes(java.lang.Object,org.dom4j.XPath,boolean) -> selectNodes
    org.dom4j.Node selectSingleNode(java.lang.Object) -> selectSingleNode
    java.lang.String valueOf(java.lang.Object) -> valueOf
    java.lang.Number numberValueOf(java.lang.Object) -> numberValueOf
    boolean booleanValueOf(java.lang.Object) -> booleanValueOf
    void sort(java.util.List) -> sort
    void sort(java.util.List,boolean) -> sort
    org.jaxen.FunctionContext getFunctionContext() -> getFunctionContext
    void setFunctionContext(org.jaxen.FunctionContext) -> setFunctionContext
    org.jaxen.NamespaceContext getNamespaceContext() -> getNamespaceContext
    void setNamespaceContext(org.jaxen.NamespaceContext) -> setNamespaceContext
    void setNamespaceURIs(java.util.Map) -> setNamespaceURIs
    org.jaxen.VariableContext getVariableContext() -> getVariableContext
    void setVariableContext(org.jaxen.VariableContext) -> setVariableContext
org.dom4j.XPathException -> org.dom4j.XPathException:
    java.lang.String xpath -> xpath
    java.lang.String getXPath() -> getXPath
org.dom4j.bean.BeanAttribute -> org.dom4j.bean.BeanAttribute:
    org.dom4j.bean.BeanAttributeList beanList -> beanList
    int index -> index
    org.dom4j.QName getQName() -> getQName
    org.dom4j.Element getParent() -> getParent
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
org.dom4j.bean.BeanAttributeList -> org.dom4j.bean.BeanAttributeList:
    org.dom4j.bean.BeanElement parent -> parent
    org.dom4j.bean.BeanMetaData beanMetaData -> beanMetaData
    org.dom4j.bean.BeanAttribute[] attributes -> attributes
    org.dom4j.Attribute attribute(java.lang.String) -> attribute
    org.dom4j.Attribute attribute(org.dom4j.QName) -> attribute
    org.dom4j.bean.BeanAttribute attribute(int) -> attribute
    org.dom4j.bean.BeanElement getParent() -> getParent
    org.dom4j.QName getQName(int) -> getQName
    java.lang.Object getData(int) -> getData
    void setData(int,java.lang.Object) -> setData
    int size() -> size
    java.lang.Object get(int) -> get
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    void clear() -> clear
    org.dom4j.bean.BeanAttribute createAttribute(org.dom4j.bean.BeanElement,int) -> createAttribute
org.dom4j.bean.BeanDocumentFactory -> org.dom4j.bean.BeanDocumentFactory:
    org.dom4j.bean.BeanDocumentFactory singleton -> singleton
    java.lang.Class class$org$dom4j$bean$BeanDocumentFactory -> class$org$dom4j$bean$BeanDocumentFactory
    org.dom4j.DocumentFactory getInstance() -> getInstance
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Element createElement(org.dom4j.QName,org.xml.sax.Attributes) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
    java.lang.Object createBean(org.dom4j.QName) -> createBean
    java.lang.Object createBean(org.dom4j.QName,org.xml.sax.Attributes) -> createBean
    void handleException(java.lang.Exception) -> handleException
    java.lang.Class class$(java.lang.String) -> class$
org.dom4j.bean.BeanElement -> org.dom4j.bean.BeanElement:
    org.dom4j.DocumentFactory DOCUMENT_FACTORY -> DOCUMENT_FACTORY
    java.lang.Object bean -> bean
    java.lang.Class class$org$dom4j$bean$BeanElement -> class$org$dom4j$bean$BeanElement
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    org.dom4j.Attribute attribute(java.lang.String) -> attribute
    org.dom4j.Attribute attribute(org.dom4j.QName) -> attribute
    org.dom4j.Element addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String) -> addAttribute
    void setAttributes(java.util.List) -> setAttributes
    void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean) -> setAttributes
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    org.dom4j.bean.BeanAttributeList getBeanAttributeList() -> getBeanAttributeList
    java.util.List createAttributeList() -> createAttributeList
    java.util.List createAttributeList(int) -> createAttributeList
    java.lang.Class class$(java.lang.String) -> class$
org.dom4j.bean.BeanMetaData -> org.dom4j.bean.BeanMetaData:
    java.lang.Object[] NULL_ARGS -> NULL_ARGS
    java.util.Map singletonCache -> singletonCache
    org.dom4j.DocumentFactory DOCUMENT_FACTORY -> DOCUMENT_FACTORY
    java.lang.Class beanClass -> beanClass
    java.beans.PropertyDescriptor[] propertyDescriptors -> propertyDescriptors
    org.dom4j.QName[] qNames -> qNames
    java.lang.reflect.Method[] readMethods -> readMethods
    java.lang.reflect.Method[] writeMethods -> writeMethods
    java.util.Map nameMap -> nameMap
    org.dom4j.bean.BeanMetaData get(java.lang.Class) -> get
    int attributeCount() -> attributeCount
    org.dom4j.bean.BeanAttributeList createAttributeList(org.dom4j.bean.BeanElement) -> createAttributeList
    org.dom4j.QName getQName(int) -> getQName
    int getIndex(java.lang.String) -> getIndex
    int getIndex(org.dom4j.QName) -> getIndex
    java.lang.Object getData(int,java.lang.Object) -> getData
    void setData(int,java.lang.Object,java.lang.Object) -> setData
    void handleException(java.lang.Exception) -> handleException
org.dom4j.datatype.DatatypeAttribute -> org.dom4j.datatype.DatatypeAttribute:
    org.dom4j.Element parent -> parent
    org.dom4j.QName qname -> qname
    com.sun.msv.datatype.xsd.XSDatatype datatype -> datatype
    java.lang.Object data -> data
    java.lang.String text -> text
    java.lang.String toString() -> toString
    com.sun.msv.datatype.xsd.XSDatatype getXSDatatype() -> getXSDatatype
    java.lang.String getNamespacePrefix(java.lang.String) -> getNamespacePrefix
    java.lang.String getBaseUri() -> getBaseUri
    boolean isNotation(java.lang.String) -> isNotation
    boolean isUnparsedEntity(java.lang.String) -> isUnparsedEntity
    java.lang.String resolveNamespacePrefix(java.lang.String) -> resolveNamespacePrefix
    org.dom4j.QName getQName() -> getQName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
    void validate(java.lang.String) -> validate
    java.lang.Object convertToValue(java.lang.String) -> convertToValue
org.dom4j.datatype.DatatypeDocumentFactory -> org.dom4j.datatype.DatatypeDocumentFactory:
    boolean DO_INTERN_QNAME -> DO_INTERN_QNAME
    org.dom4j.datatype.DatatypeDocumentFactory singleton -> singleton
    org.dom4j.Namespace XSI_NAMESPACE -> XSI_NAMESPACE
    org.dom4j.QName XSI_SCHEMA_LOCATION -> XSI_SCHEMA_LOCATION
    org.dom4j.QName XSI_NO_SCHEMA_LOCATION -> XSI_NO_SCHEMA_LOCATION
    org.dom4j.datatype.SchemaParser schemaBuilder -> schemaBuilder
    org.dom4j.io.SAXReader xmlSchemaReader -> xmlSchemaReader
    boolean autoLoadSchema -> autoLoadSchema
    org.dom4j.DocumentFactory getInstance() -> getInstance
    void loadSchema(org.dom4j.Document) -> loadSchema
    void loadSchema(org.dom4j.Document,org.dom4j.Namespace) -> loadSchema
    org.dom4j.datatype.DatatypeElementFactory getElementFactory(org.dom4j.QName) -> getElementFactory
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
    void loadSchema(org.dom4j.Document,java.lang.String) -> loadSchema
    void loadSchema(org.dom4j.Document,java.lang.String,org.dom4j.Namespace) -> loadSchema
org.dom4j.datatype.DatatypeElement -> org.dom4j.datatype.DatatypeElement:
    com.sun.msv.datatype.xsd.XSDatatype datatype -> datatype
    java.lang.Object data -> data
    java.lang.String toString() -> toString
    com.sun.msv.datatype.xsd.XSDatatype getXSDatatype() -> getXSDatatype
    java.lang.String getNamespacePrefix(java.lang.String) -> getNamespacePrefix
    java.lang.String getBaseUri() -> getBaseUri
    boolean isNotation(java.lang.String) -> isNotation
    boolean isUnparsedEntity(java.lang.String) -> isUnparsedEntity
    java.lang.String resolveNamespacePrefix(java.lang.String) -> resolveNamespacePrefix
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    org.dom4j.Element addText(java.lang.String) -> addText
    void setText(java.lang.String) -> setText
    void childAdded(org.dom4j.Node) -> childAdded
    void childRemoved(org.dom4j.Node) -> childRemoved
    void validate(java.lang.String) -> validate
org.dom4j.datatype.DatatypeElementFactory -> org.dom4j.datatype.DatatypeElementFactory:
    org.dom4j.QName elementQName -> elementQName
    java.util.Map attributeXSDatatypes -> attributeXSDatatypes
    java.util.Map childrenXSDatatypes -> childrenXSDatatypes
    org.dom4j.QName getQName() -> getQName
    com.sun.msv.datatype.xsd.XSDatatype getAttributeXSDatatype(org.dom4j.QName) -> getAttributeXSDatatype
    void setAttributeXSDatatype(org.dom4j.QName,com.sun.msv.datatype.xsd.XSDatatype) -> setAttributeXSDatatype
    com.sun.msv.datatype.xsd.XSDatatype getChildElementXSDatatype(org.dom4j.QName) -> getChildElementXSDatatype
    void setChildElementXSDatatype(org.dom4j.QName,com.sun.msv.datatype.xsd.XSDatatype) -> setChildElementXSDatatype
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
org.dom4j.datatype.InvalidSchemaException -> org.dom4j.datatype.InvalidSchemaException:
org.dom4j.datatype.NamedTypeResolver -> org.dom4j.datatype.a:
    java.util.Map complexTypeMap -> a
    java.util.Map simpleTypeMap -> b
    java.util.Map typedElementMap -> c
    java.util.Map elementFactoryMap -> d
    org.dom4j.DocumentFactory documentFactory -> e
    void registerComplexType(org.dom4j.QName,org.dom4j.DocumentFactory) -> a
    void registerSimpleType(org.dom4j.QName,com.sun.msv.datatype.xsd.XSDatatype) -> a
    void registerTypedElement(org.dom4j.Element,org.dom4j.QName,org.dom4j.DocumentFactory) -> a
    void resolveNamedTypes() -> a
org.dom4j.datatype.SchemaParser -> org.dom4j.datatype.SchemaParser:
    org.dom4j.Namespace XSD_NAMESPACE -> XSD_NAMESPACE
    org.dom4j.QName XSD_ELEMENT -> XSD_ELEMENT
    org.dom4j.QName XSD_ATTRIBUTE -> XSD_ATTRIBUTE
    org.dom4j.QName XSD_SIMPLETYPE -> XSD_SIMPLETYPE
    org.dom4j.QName XSD_COMPLEXTYPE -> XSD_COMPLEXTYPE
    org.dom4j.QName XSD_RESTRICTION -> XSD_RESTRICTION
    org.dom4j.QName XSD_SEQUENCE -> XSD_SEQUENCE
    org.dom4j.QName XSD_CHOICE -> XSD_CHOICE
    org.dom4j.QName XSD_ALL -> XSD_ALL
    org.dom4j.QName XSD_INCLUDE -> XSD_INCLUDE
    org.dom4j.datatype.DatatypeDocumentFactory documentFactory -> documentFactory
    java.util.Map dataTypeCache -> dataTypeCache
    org.dom4j.datatype.NamedTypeResolver namedTypeResolver -> namedTypeResolver
    org.dom4j.Namespace targetNamespace -> targetNamespace
    void build(org.dom4j.Document) -> build
    void build(org.dom4j.Document,org.dom4j.Namespace) -> build
    void internalBuild(org.dom4j.Document) -> internalBuild
    void onDatatypeElement(org.dom4j.Element,org.dom4j.DocumentFactory) -> onDatatypeElement
    void onNamedSchemaComplexType(org.dom4j.Element) -> onNamedSchemaComplexType
    void onSchemaComplexType(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory) -> onSchemaComplexType
    void onChildElements(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory) -> onChildElements
    void onDatatypeAttribute(org.dom4j.Element,org.dom4j.datatype.DatatypeElementFactory,org.dom4j.Element) -> onDatatypeAttribute
    com.sun.msv.datatype.xsd.XSDatatype dataTypeForXsdAttribute(org.dom4j.Element) -> dataTypeForXsdAttribute
    void onNamedSchemaSimpleType(org.dom4j.Element) -> onNamedSchemaSimpleType
    com.sun.msv.datatype.xsd.XSDatatype loadXSDatatypeFromSimpleType(org.dom4j.Element) -> loadXSDatatypeFromSimpleType
    com.sun.msv.datatype.xsd.XSDatatype deriveSimpleType(com.sun.msv.datatype.xsd.XSDatatype,org.dom4j.Element) -> deriveSimpleType
    org.dom4j.datatype.DatatypeElementFactory getDatatypeElementFactory(org.dom4j.QName) -> getDatatypeElementFactory
    com.sun.msv.datatype.xsd.XSDatatype getTypeByName(java.lang.String) -> getTypeByName
    org.dom4j.QName getQName(java.lang.String) -> getQName
    void onSchemaError(java.lang.String) -> onSchemaError
org.dom4j.dom.DOMAttribute -> org.dom4j.dom.DOMAttribute:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    boolean getSpecified() -> getSpecified
    org.w3c.dom.Element getOwnerElement() -> getOwnerElement
org.dom4j.dom.DOMAttributeNodeMap -> org.dom4j.dom.DOMAttributeNodeMap:
    org.dom4j.dom.DOMElement element -> element
    void foo() -> foo
    org.w3c.dom.Node getNamedItem(java.lang.String) -> getNamedItem
    org.w3c.dom.Node setNamedItem(org.w3c.dom.Node) -> setNamedItem
    org.w3c.dom.Node removeNamedItem(java.lang.String) -> removeNamedItem
    org.w3c.dom.Node item(int) -> item
    int getLength() -> getLength
    org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String) -> getNamedItemNS
    org.w3c.dom.Node setNamedItemNS(org.w3c.dom.Node) -> setNamedItemNS
    org.w3c.dom.Node removeNamedItemNS(java.lang.String,java.lang.String) -> removeNamedItemNS
org.dom4j.dom.DOMCDATA -> org.dom4j.dom.DOMCDATA:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    int getLength() -> getLength
    java.lang.String substringData(int,int) -> substringData
    void appendData(java.lang.String) -> appendData
    void insertData(int,java.lang.String) -> insertData
    void deleteData(int,int) -> deleteData
    void replaceData(int,int,java.lang.String) -> replaceData
    org.w3c.dom.Text splitText(int) -> splitText
    org.dom4j.CDATA createCDATA(java.lang.String) -> createCDATA
org.dom4j.dom.DOMComment -> org.dom4j.dom.DOMComment:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    int getLength() -> getLength
    java.lang.String substringData(int,int) -> substringData
    void appendData(java.lang.String) -> appendData
    void insertData(int,java.lang.String) -> insertData
    void deleteData(int,int) -> deleteData
    void replaceData(int,int,java.lang.String) -> replaceData
org.dom4j.dom.DOMDocument -> org.dom4j.dom.DOMDocument:
    org.dom4j.dom.DOMDocumentFactory DOCUMENT_FACTORY -> DOCUMENT_FACTORY
    void init() -> init
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    org.w3c.dom.NodeList getElementsByTagName(java.lang.String) -> getElementsByTagName
    org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String) -> getElementsByTagNameNS
    org.w3c.dom.DocumentType getDoctype() -> getDoctype
    org.w3c.dom.DOMImplementation getImplementation() -> getImplementation
    org.w3c.dom.Element getDocumentElement() -> getDocumentElement
    org.w3c.dom.Element createElement(java.lang.String) -> createElement
    org.w3c.dom.DocumentFragment createDocumentFragment() -> createDocumentFragment
    org.w3c.dom.Text createTextNode(java.lang.String) -> createTextNode
    org.w3c.dom.Comment createComment(java.lang.String) -> createComment
    org.w3c.dom.CDATASection createCDATASection(java.lang.String) -> createCDATASection
    org.w3c.dom.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String) -> createProcessingInstruction
    org.w3c.dom.Attr createAttribute(java.lang.String) -> createAttribute
    org.w3c.dom.EntityReference createEntityReference(java.lang.String) -> createEntityReference
    org.w3c.dom.Node importNode(org.w3c.dom.Node,boolean) -> importNode
    org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String) -> createElementNS
    org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String) -> createAttributeNS
    org.w3c.dom.Element getElementById(java.lang.String) -> getElementById
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
org.dom4j.dom.DOMDocumentFactory -> org.dom4j.dom.DOMDocumentFactory:
    org.dom4j.util.SingletonStrategy singleton -> singleton
    java.lang.Class class$org$dom4j$dom$DOMDocumentFactory -> class$org$dom4j$dom$DOMDocumentFactory
    org.dom4j.DocumentFactory getInstance() -> getInstance
    org.dom4j.Document createDocument() -> createDocument
    org.dom4j.DocumentType createDocType(java.lang.String,java.lang.String,java.lang.String) -> createDocType
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Element createElement(org.dom4j.QName,int) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
    org.dom4j.CDATA createCDATA(java.lang.String) -> createCDATA
    org.dom4j.Comment createComment(java.lang.String) -> createComment
    org.dom4j.Text createText(java.lang.String) -> createText
    org.dom4j.Entity createEntity(java.lang.String) -> createEntity
    org.dom4j.Entity createEntity(java.lang.String,java.lang.String) -> createEntity
    org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String) -> createProcessingInstruction
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map) -> createProcessingInstruction
    boolean hasFeature(java.lang.String,java.lang.String) -> hasFeature
    org.w3c.dom.DocumentType createDocumentType(java.lang.String,java.lang.String,java.lang.String) -> createDocumentType
    org.w3c.dom.Document createDocument(java.lang.String,java.lang.String,org.w3c.dom.DocumentType) -> createDocument
    org.dom4j.dom.DOMDocumentType asDocumentType(org.w3c.dom.DocumentType) -> asDocumentType
    java.lang.Class class$(java.lang.String) -> class$
org.dom4j.dom.DOMDocumentType -> org.dom4j.dom.DOMDocumentType:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    org.w3c.dom.NamedNodeMap getEntities() -> getEntities
    org.w3c.dom.NamedNodeMap getNotations() -> getNotations
    java.lang.String getPublicId() -> getPublicId
    java.lang.String getSystemId() -> getSystemId
    java.lang.String getInternalSubset() -> getInternalSubset
org.dom4j.dom.DOMElement -> org.dom4j.dom.DOMElement:
    org.dom4j.DocumentFactory DOCUMENT_FACTORY -> DOCUMENT_FACTORY
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    java.lang.String getTagName() -> getTagName
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    void removeAttribute(java.lang.String) -> removeAttribute
    org.w3c.dom.Attr getAttributeNode(java.lang.String) -> getAttributeNode
    org.w3c.dom.Attr setAttributeNode(org.w3c.dom.Attr) -> setAttributeNode
    org.w3c.dom.Attr removeAttributeNode(org.w3c.dom.Attr) -> removeAttributeNode
    java.lang.String getAttributeNS(java.lang.String,java.lang.String) -> getAttributeNS
    void setAttributeNS(java.lang.String,java.lang.String,java.lang.String) -> setAttributeNS
    void removeAttributeNS(java.lang.String,java.lang.String) -> removeAttributeNS
    org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String) -> getAttributeNodeNS
    org.w3c.dom.Attr setAttributeNodeNS(org.w3c.dom.Attr) -> setAttributeNodeNS
    org.w3c.dom.NodeList getElementsByTagName(java.lang.String) -> getElementsByTagName
    org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String) -> getElementsByTagNameNS
    boolean hasAttribute(java.lang.String) -> hasAttribute
    boolean hasAttributeNS(java.lang.String,java.lang.String) -> hasAttributeNS
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    org.dom4j.Attribute attribute(org.w3c.dom.Attr) -> attribute
    org.dom4j.Attribute attribute(java.lang.String,java.lang.String) -> attribute
    org.dom4j.Attribute createAttribute(org.w3c.dom.Attr) -> createAttribute
    org.dom4j.QName getQName(java.lang.String,java.lang.String) -> getQName
org.dom4j.dom.DOMEntityReference -> org.dom4j.dom.DOMEntityReference:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
org.dom4j.dom.DOMNamespace -> org.dom4j.dom.DOMNamespace:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
org.dom4j.dom.DOMNodeHelper -> org.dom4j.dom.DOMNodeHelper:
    org.w3c.dom.NodeList EMPTY_NODE_LIST -> EMPTY_NODE_LIST
    boolean supports(org.dom4j.Node,java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI(org.dom4j.Node) -> getNamespaceURI
    java.lang.String getPrefix(org.dom4j.Node) -> getPrefix
    java.lang.String getLocalName(org.dom4j.Node) -> getLocalName
    void setPrefix(org.dom4j.Node,java.lang.String) -> setPrefix
    java.lang.String getNodeValue(org.dom4j.Node) -> getNodeValue
    void setNodeValue(org.dom4j.Node,java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode(org.dom4j.Node) -> getParentNode
    org.w3c.dom.NodeList getChildNodes(org.dom4j.Node) -> getChildNodes
    org.w3c.dom.Node getFirstChild(org.dom4j.Node) -> getFirstChild
    org.w3c.dom.Node getLastChild(org.dom4j.Node) -> getLastChild
    org.w3c.dom.Node getPreviousSibling(org.dom4j.Node) -> getPreviousSibling
    org.w3c.dom.Node getNextSibling(org.dom4j.Node) -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes(org.dom4j.Node) -> getAttributes
    org.w3c.dom.Document getOwnerDocument(org.dom4j.Node) -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.dom4j.Node,org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.dom4j.Node,org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.dom4j.Node,org.w3c.dom.Node) -> appendChild
    boolean hasChildNodes(org.dom4j.Node) -> hasChildNodes
    org.w3c.dom.Node cloneNode(org.dom4j.Node,boolean) -> cloneNode
    void normalize(org.dom4j.Node) -> normalize
    boolean isSupported(org.dom4j.Node,java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes(org.dom4j.Node) -> hasAttributes
    java.lang.String getData(org.dom4j.CharacterData) -> getData
    void setData(org.dom4j.CharacterData,java.lang.String) -> setData
    int getLength(org.dom4j.CharacterData) -> getLength
    java.lang.String substringData(org.dom4j.CharacterData,int,int) -> substringData
    void appendData(org.dom4j.CharacterData,java.lang.String) -> appendData
    void insertData(org.dom4j.CharacterData,int,java.lang.String) -> insertData
    void deleteData(org.dom4j.CharacterData,int,int) -> deleteData
    void replaceData(org.dom4j.CharacterData,int,int,java.lang.String) -> replaceData
    void appendElementsByTagName(java.util.List,org.dom4j.Branch,java.lang.String) -> appendElementsByTagName
    void appendElementsByTagNameNS(java.util.List,org.dom4j.Branch,java.lang.String,java.lang.String) -> appendElementsByTagNameNS
    org.w3c.dom.NodeList createNodeList(java.util.List) -> createNodeList
    org.w3c.dom.Node asDOMNode(org.dom4j.Node) -> asDOMNode
    org.w3c.dom.Document asDOMDocument(org.dom4j.Document) -> asDOMDocument
    org.w3c.dom.DocumentType asDOMDocumentType(org.dom4j.DocumentType) -> asDOMDocumentType
    org.w3c.dom.Text asDOMText(org.dom4j.CharacterData) -> asDOMText
    org.w3c.dom.Element asDOMElement(org.dom4j.Node) -> asDOMElement
    org.w3c.dom.Attr asDOMAttr(org.dom4j.Node) -> asDOMAttr
    void notSupported() -> notSupported
org.dom4j.dom.DOMNodeHelper$1 -> org.dom4j.dom.a:
    java.util.List val$list -> a
    org.w3c.dom.Node item(int) -> item
    int getLength() -> getLength
org.dom4j.dom.DOMNodeHelper$EmptyNodeList -> org.dom4j.dom.DOMNodeHelper$EmptyNodeList:
    org.w3c.dom.Node item(int) -> item
    int getLength() -> getLength
org.dom4j.dom.DOMProcessingInstruction -> org.dom4j.dom.DOMProcessingInstruction:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
org.dom4j.dom.DOMText -> org.dom4j.dom.DOMText:
    boolean supports(java.lang.String,java.lang.String) -> supports
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getPrefix() -> getPrefix
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getNodeValue() -> getNodeValue
    void setNodeValue(java.lang.String) -> setNodeValue
    org.w3c.dom.Node getParentNode() -> getParentNode
    org.w3c.dom.NodeList getChildNodes() -> getChildNodes
    org.w3c.dom.Node getFirstChild() -> getFirstChild
    org.w3c.dom.Node getLastChild() -> getLastChild
    org.w3c.dom.Node getPreviousSibling() -> getPreviousSibling
    org.w3c.dom.Node getNextSibling() -> getNextSibling
    org.w3c.dom.NamedNodeMap getAttributes() -> getAttributes
    org.w3c.dom.Document getOwnerDocument() -> getOwnerDocument
    org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node) -> insertBefore
    org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node) -> replaceChild
    org.w3c.dom.Node removeChild(org.w3c.dom.Node) -> removeChild
    org.w3c.dom.Node appendChild(org.w3c.dom.Node) -> appendChild
    void checkNewChildNode(org.w3c.dom.Node) -> checkNewChildNode
    boolean hasChildNodes() -> hasChildNodes
    org.w3c.dom.Node cloneNode(boolean) -> cloneNode
    void normalize() -> normalize
    boolean isSupported(java.lang.String,java.lang.String) -> isSupported
    boolean hasAttributes() -> hasAttributes
    java.lang.String getData() -> getData
    void setData(java.lang.String) -> setData
    int getLength() -> getLength
    java.lang.String substringData(int,int) -> substringData
    void appendData(java.lang.String) -> appendData
    void insertData(int,java.lang.String) -> insertData
    void deleteData(int,int) -> deleteData
    void replaceData(int,int,java.lang.String) -> replaceData
    org.w3c.dom.Text splitText(int) -> splitText
    org.dom4j.Text createText(java.lang.String) -> createText
org.dom4j.dtd.AttributeDecl -> org.dom4j.dtd.AttributeDecl:
    java.lang.String elementName -> elementName
    java.lang.String attributeName -> attributeName
    java.lang.String type -> type
    java.lang.String value -> value
    java.lang.String valueDefault -> valueDefault
    java.lang.String getElementName() -> getElementName
    void setElementName(java.lang.String) -> setElementName
    java.lang.String getAttributeName() -> getAttributeName
    void setAttributeName(java.lang.String) -> setAttributeName
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getValueDefault() -> getValueDefault
    void setValueDefault(java.lang.String) -> setValueDefault
    java.lang.String toString() -> toString
org.dom4j.dtd.ElementDecl -> org.dom4j.dtd.ElementDecl:
    java.lang.String name -> name
    java.lang.String model -> model
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getModel() -> getModel
    void setModel(java.lang.String) -> setModel
    java.lang.String toString() -> toString
org.dom4j.dtd.ExternalEntityDecl -> org.dom4j.dtd.ExternalEntityDecl:
    java.lang.String name -> name
    java.lang.String publicID -> publicID
    java.lang.String systemID -> systemID
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPublicID() -> getPublicID
    void setPublicID(java.lang.String) -> setPublicID
    java.lang.String getSystemID() -> getSystemID
    void setSystemID(java.lang.String) -> setSystemID
    java.lang.String toString() -> toString
org.dom4j.dtd.InternalEntityDecl -> org.dom4j.dtd.InternalEntityDecl:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String toString() -> toString
    java.lang.String escapeEntityValue(java.lang.String) -> escapeEntityValue
org.dom4j.io.DOMReader -> org.dom4j.io.DOMReader:
    org.dom4j.DocumentFactory factory -> factory
    org.dom4j.tree.NamespaceStack namespaceStack -> namespaceStack
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.Document read(org.w3c.dom.Document) -> read
    void readTree(org.w3c.dom.Node,org.dom4j.Branch) -> readTree
    void readElement(org.w3c.dom.Node,org.dom4j.Branch) -> readElement
    org.dom4j.Namespace getNamespace(java.lang.String,java.lang.String) -> getNamespace
    org.dom4j.Document createDocument() -> createDocument
    void clearNamespaceStack() -> clearNamespaceStack
    java.lang.String getPrefix(java.lang.String) -> getPrefix
org.dom4j.io.DOMWriter -> org.dom4j.io.DOMWriter:
    boolean loggedWarning -> loggedWarning
    java.lang.String[] DEFAULT_DOM_DOCUMENT_CLASSES -> DEFAULT_DOM_DOCUMENT_CLASSES
    java.lang.Class domDocumentClass -> domDocumentClass
    org.dom4j.tree.NamespaceStack namespaceStack -> namespaceStack
    java.lang.Class class$org$dom4j$io$DOMWriter -> class$org$dom4j$io$DOMWriter
    java.lang.Class getDomDocumentClass() -> getDomDocumentClass
    void setDomDocumentClass(java.lang.Class) -> setDomDocumentClass
    void setDomDocumentClassName(java.lang.String) -> setDomDocumentClassName
    org.w3c.dom.Document write(org.dom4j.Document) -> write
    org.w3c.dom.Document write(org.dom4j.Document,org.w3c.dom.DOMImplementation) -> write
    void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.util.List) -> appendDOMTree
    void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Element) -> appendDOMTree
    void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.CDATA) -> appendDOMTree
    void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Comment) -> appendDOMTree
    void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,java.lang.String) -> appendDOMTree
    void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.Entity) -> appendDOMTree
    void appendDOMTree(org.w3c.dom.Document,org.w3c.dom.Node,org.dom4j.ProcessingInstruction) -> appendDOMTree
    void writeNamespace(org.w3c.dom.Element,org.dom4j.Namespace) -> writeNamespace
    java.lang.String attributeNameForNamespace(org.dom4j.Namespace) -> attributeNameForNamespace
    org.w3c.dom.Document createDomDocument(org.dom4j.Document) -> createDomDocument
    org.w3c.dom.Document createDomDocumentViaJAXP() -> createDomDocumentViaJAXP
    org.w3c.dom.Document createDomDocument(org.dom4j.Document,org.w3c.dom.DOMImplementation) -> createDomDocument
    boolean isNamespaceDeclaration(org.dom4j.Namespace) -> isNamespaceDeclaration
    void resetNamespaceStack() -> resetNamespaceStack
    java.lang.Class class$(java.lang.String) -> class$
org.dom4j.io.DispatchHandler -> org.dom4j.io.a:
    boolean atRoot -> a
    java.lang.String path -> b
    java.util.ArrayList pathStack -> c
    java.util.ArrayList handlerStack -> d
    java.util.HashMap handlers -> e
    org.dom4j.ElementHandler defaultHandler -> f
    void addHandler(java.lang.String,org.dom4j.ElementHandler) -> a
    org.dom4j.ElementHandler removeHandler(java.lang.String) -> a
    org.dom4j.ElementHandler getHandler(java.lang.String) -> b
    int getActiveHandlerCount() -> a
    void setDefaultHandler(org.dom4j.ElementHandler) -> a
    void resetHandlers() -> b
    java.lang.String getPath() -> c
    void onStart(org.dom4j.ElementPath) -> onStart
    void onEnd(org.dom4j.ElementPath) -> onEnd
org.dom4j.io.DocumentInputSource -> org.dom4j.io.b:
    org.dom4j.Document document -> a
    org.dom4j.Document getDocument() -> a
    void setCharacterStream(java.io.Reader) -> setCharacterStream
    java.io.Reader getCharacterStream() -> getCharacterStream
org.dom4j.io.DocumentInputSource$1 -> org.dom4j.io.c:
    java.io.IOException val$e -> a
    org.dom4j.io.DocumentInputSource this$0 -> b
    int read(char[],int,int) -> read
    void close() -> close
org.dom4j.io.DocumentResult -> org.dom4j.io.DocumentResult:
    org.dom4j.io.SAXContentHandler contentHandler -> contentHandler
    org.dom4j.Document getDocument() -> getDocument
    void setHandler(org.xml.sax.ContentHandler) -> setHandler
    void setLexicalHandler(org.xml.sax.ext.LexicalHandler) -> setLexicalHandler
org.dom4j.io.DocumentSource -> org.dom4j.io.DocumentSource:
    java.lang.String DOM4J_FEATURE -> DOM4J_FEATURE
    org.xml.sax.XMLReader xmlReader -> xmlReader
    org.dom4j.Document getDocument() -> getDocument
    void setDocument(org.dom4j.Document) -> setDocument
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
org.dom4j.io.ElementModifier -> org.dom4j.io.ElementModifier:
    org.dom4j.Element modifyElement(org.dom4j.Element) -> modifyElement
org.dom4j.io.ElementStack -> org.dom4j.io.d:
    org.dom4j.Element[] stack -> a
    int lastElementIndex -> b
    org.dom4j.io.DispatchHandler handler -> c
    void setDispatchHandler(org.dom4j.io.DispatchHandler) -> a
    org.dom4j.io.DispatchHandler getDispatchHandler() -> a
    void clear() -> b
    org.dom4j.Element peekElement() -> c
    org.dom4j.Element popElement() -> d
    void pushElement(org.dom4j.Element) -> a
    int size() -> size
    org.dom4j.Element getElement(int) -> getElement
    java.lang.String getPath() -> getPath
    org.dom4j.Element getCurrent() -> getCurrent
    void addHandler(java.lang.String,org.dom4j.ElementHandler) -> addHandler
    void removeHandler(java.lang.String) -> removeHandler
    java.lang.String getHandlerPath(java.lang.String) -> a
org.dom4j.io.HTMLWriter -> org.dom4j.io.HTMLWriter:
    java.lang.String lineSeparator -> lineSeparator
    java.util.HashSet DEFAULT_PREFORMATTED_TAGS -> DEFAULT_PREFORMATTED_TAGS
    org.dom4j.io.OutputFormat DEFAULT_HTML_FORMAT -> DEFAULT_HTML_FORMAT
    java.util.Stack formatStack -> formatStack
    java.lang.String lastText -> lastText
    int tagsOuput -> tagsOuput
    int newLineAfterNTags -> newLineAfterNTags
    java.util.HashSet preformattedTags -> preformattedTags
    java.util.HashSet omitElementCloseSet -> omitElementCloseSet
    void startCDATA() -> startCDATA
    void endCDATA() -> endCDATA
    void writeCDATA(java.lang.String) -> writeCDATA
    void writeEntity(org.dom4j.Entity) -> writeEntity
    void writeDeclaration() -> writeDeclaration
    void writeString(java.lang.String) -> writeString
    void writeClose(java.lang.String) -> writeClose
    void writeEmptyElementClose(java.lang.String) -> writeEmptyElementClose
    boolean omitElementClose(java.lang.String) -> omitElementClose
    java.util.HashSet internalGetOmitElementCloseSet() -> internalGetOmitElementCloseSet
    void loadOmitElementCloseSet(java.util.Set) -> loadOmitElementCloseSet
    java.util.Set getOmitElementCloseSet() -> getOmitElementCloseSet
    void setOmitElementCloseSet(java.util.Set) -> setOmitElementCloseSet
    java.util.Set getPreformattedTags() -> getPreformattedTags
    void setPreformattedTags(java.util.Set) -> setPreformattedTags
    boolean isPreformattedTag(java.lang.String) -> isPreformattedTag
    void writeElement(org.dom4j.Element) -> writeElement
    java.lang.String justSpaces(java.lang.String) -> justSpaces
    void lazyInitNewLinesAfterNTags() -> lazyInitNewLinesAfterNTags
    java.lang.String prettyPrintHTML(java.lang.String) -> prettyPrintHTML
    java.lang.String prettyPrintXHTML(java.lang.String) -> prettyPrintXHTML
    java.lang.String prettyPrintHTML(java.lang.String,boolean,boolean,boolean,boolean) -> prettyPrintHTML
org.dom4j.io.HTMLWriter$FormatState -> org.dom4j.io.e:
    boolean newlines -> a
    boolean trimText -> b
    java.lang.String indent -> c
    org.dom4j.io.HTMLWriter this$0 -> d
    boolean isNewlines() -> a
    boolean isTrimText() -> b
    java.lang.String getIndent() -> c
org.dom4j.io.OutputFormat -> org.dom4j.io.OutputFormat:
    java.lang.String STANDARD_INDENT -> STANDARD_INDENT
    boolean suppressDeclaration -> suppressDeclaration
    boolean newLineAfterDeclaration -> newLineAfterDeclaration
    java.lang.String encoding -> encoding
    boolean omitEncoding -> omitEncoding
    java.lang.String indent -> indent
    boolean expandEmptyElements -> expandEmptyElements
    boolean newlines -> newlines
    java.lang.String lineSeparator -> lineSeparator
    boolean trimText -> trimText
    boolean padText -> padText
    boolean doXHTML -> doXHTML
    int newLineAfterNTags -> newLineAfterNTags
    char attributeQuoteChar -> attributeQuoteChar
    java.lang.String getLineSeparator() -> getLineSeparator
    void setLineSeparator(java.lang.String) -> setLineSeparator
    boolean isNewlines() -> isNewlines
    void setNewlines(boolean) -> setNewlines
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    boolean isOmitEncoding() -> isOmitEncoding
    void setOmitEncoding(boolean) -> setOmitEncoding
    void setSuppressDeclaration(boolean) -> setSuppressDeclaration
    boolean isSuppressDeclaration() -> isSuppressDeclaration
    void setNewLineAfterDeclaration(boolean) -> setNewLineAfterDeclaration
    boolean isNewLineAfterDeclaration() -> isNewLineAfterDeclaration
    boolean isExpandEmptyElements() -> isExpandEmptyElements
    void setExpandEmptyElements(boolean) -> setExpandEmptyElements
    boolean isTrimText() -> isTrimText
    void setTrimText(boolean) -> setTrimText
    boolean isPadText() -> isPadText
    void setPadText(boolean) -> setPadText
    java.lang.String getIndent() -> getIndent
    void setIndent(java.lang.String) -> setIndent
    void setIndent(boolean) -> setIndent
    void setIndentSize(int) -> setIndentSize
    boolean isXHTML() -> isXHTML
    void setXHTML(boolean) -> setXHTML
    int getNewLineAfterNTags() -> getNewLineAfterNTags
    void setNewLineAfterNTags(int) -> setNewLineAfterNTags
    char getAttributeQuoteCharacter() -> getAttributeQuoteCharacter
    void setAttributeQuoteCharacter(char) -> setAttributeQuoteCharacter
    int parseOptions(java.lang.String[],int) -> parseOptions
    org.dom4j.io.OutputFormat createPrettyPrint() -> createPrettyPrint
    org.dom4j.io.OutputFormat createCompactFormat() -> createCompactFormat
org.dom4j.io.PruningDispatchHandler -> org.dom4j.io.f:
    void onEnd(org.dom4j.ElementPath) -> onEnd
org.dom4j.io.SAXContentHandler -> org.dom4j.io.SAXContentHandler:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    org.dom4j.Document document -> document
    org.dom4j.io.ElementStack elementStack -> elementStack
    org.dom4j.tree.NamespaceStack namespaceStack -> namespaceStack
    org.dom4j.ElementHandler elementHandler -> elementHandler
    org.xml.sax.Locator locator -> locator
    java.lang.String entity -> entity
    boolean insideDTDSection -> insideDTDSection
    boolean insideCDATASection -> insideCDATASection
    java.lang.StringBuffer cdataText -> cdataText
    java.util.Map availableNamespaceMap -> availableNamespaceMap
    java.util.List declaredNamespaceList -> declaredNamespaceList
    java.util.List internalDTDDeclarations -> internalDTDDeclarations
    java.util.List externalDTDDeclarations -> externalDTDDeclarations
    int declaredNamespaceIndex -> declaredNamespaceIndex
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.InputSource inputSource -> inputSource
    org.dom4j.Element currentElement -> currentElement
    boolean includeInternalDTDDeclarations -> includeInternalDTDDeclarations
    boolean includeExternalDTDDeclarations -> includeExternalDTDDeclarations
    int entityLevel -> entityLevel
    boolean internalDTDsubset -> internalDTDsubset
    boolean mergeAdjacentText -> mergeAdjacentText
    boolean textInTextBuffer -> textInTextBuffer
    boolean ignoreComments -> ignoreComments
    java.lang.StringBuffer textBuffer -> textBuffer
    boolean stripWhitespaceText -> stripWhitespaceText
    org.dom4j.Document getDocument() -> getDocument
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void warning(org.xml.sax.SAXParseException) -> warning
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    void startDTD(java.lang.String,java.lang.String,java.lang.String) -> startDTD
    void endDTD() -> endDTD
    void startEntity(java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    void startCDATA() -> startCDATA
    void endCDATA() -> endCDATA
    void comment(char[],int,int) -> comment
    void elementDecl(java.lang.String,java.lang.String) -> elementDecl
    void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> attributeDecl
    void internalEntityDecl(java.lang.String,java.lang.String) -> internalEntityDecl
    void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String) -> externalEntityDecl
    void notationDecl(java.lang.String,java.lang.String,java.lang.String) -> notationDecl
    void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> unparsedEntityDecl
    org.dom4j.io.ElementStack getElementStack() -> getElementStack
    void setElementStack(org.dom4j.io.ElementStack) -> setElementStack
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.InputSource getInputSource() -> getInputSource
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    boolean isIncludeInternalDTDDeclarations() -> isIncludeInternalDTDDeclarations
    void setIncludeInternalDTDDeclarations(boolean) -> setIncludeInternalDTDDeclarations
    boolean isIncludeExternalDTDDeclarations() -> isIncludeExternalDTDDeclarations
    void setIncludeExternalDTDDeclarations(boolean) -> setIncludeExternalDTDDeclarations
    boolean isMergeAdjacentText() -> isMergeAdjacentText
    void setMergeAdjacentText(boolean) -> setMergeAdjacentText
    boolean isStripWhitespaceText() -> isStripWhitespaceText
    void setStripWhitespaceText(boolean) -> setStripWhitespaceText
    boolean isIgnoreComments() -> isIgnoreComments
    void setIgnoreComments(boolean) -> setIgnoreComments
    void completeCurrentTextNode() -> completeCurrentTextNode
    org.dom4j.Document createDocument() -> createDocument
    java.lang.String getEncoding() -> getEncoding
    boolean isIgnorableEntity(java.lang.String) -> isIgnorableEntity
    void addDeclaredNamespaces(org.dom4j.Element) -> addDeclaredNamespaces
    void addAttributes(org.dom4j.Element,org.xml.sax.Attributes) -> addAttributes
    void addDTDDeclaration(java.lang.Object) -> addDTDDeclaration
    void addExternalDTDDeclaration(java.lang.Object) -> addExternalDTDDeclaration
    org.dom4j.io.ElementStack createElementStack() -> createElementStack
org.dom4j.io.SAXEventRecorder -> org.dom4j.io.SAXEventRecorder:
    long serialVersionUID -> serialVersionUID
    byte STRING -> STRING
    byte OBJECT -> OBJECT
    byte NULL -> NULL
    java.util.List events -> events
    java.util.Map prefixMappings -> prefixMappings
    java.lang.String XMLNS -> XMLNS
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    void replay(org.xml.sax.ContentHandler) -> replay
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void startDTD(java.lang.String,java.lang.String,java.lang.String) -> startDTD
    void endDTD() -> endDTD
    void startEntity(java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    void startCDATA() -> startCDATA
    void endCDATA() -> endCDATA
    void comment(char[],int,int) -> comment
    void elementDecl(java.lang.String,java.lang.String) -> elementDecl
    void attributeDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> attributeDecl
    void internalEntityDecl(java.lang.String,java.lang.String) -> internalEntityDecl
    void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String) -> externalEntityDecl
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
org.dom4j.io.SAXEventRecorder$SAXEvent -> org.dom4j.io.g:
    byte event -> a
    java.util.List parms -> b
    void addParm(java.lang.Object) -> a
    java.lang.Object getParm(int) -> a
    void writeExternal(java.io.ObjectOutput) -> writeExternal
    void readExternal(java.io.ObjectInput) -> readExternal
org.dom4j.io.SAXHelper -> org.dom4j.io.h:
    boolean loggedWarning -> a
    boolean setParserProperty(org.xml.sax.XMLReader,java.lang.String,java.lang.Object) -> a
    boolean setParserFeature(org.xml.sax.XMLReader,java.lang.String,boolean) -> a
    org.xml.sax.XMLReader createXMLReader(boolean) -> a
    org.xml.sax.XMLReader createXMLReaderViaJAXP$54e1ab94(boolean) -> b
    boolean isVerboseErrorReporting() -> a
org.dom4j.io.SAXModifier -> org.dom4j.io.SAXModifier:
    org.dom4j.io.XMLWriter xmlWriter -> xmlWriter
    org.xml.sax.XMLReader xmlReader -> xmlReader
    boolean pruneElements -> pruneElements
    org.dom4j.io.SAXModifyReader modifyReader -> modifyReader
    java.util.HashMap modifiers -> modifiers
    org.dom4j.Document modify(java.io.File) -> modify
    org.dom4j.Document modify(org.xml.sax.InputSource) -> modify
    org.dom4j.Document modify(java.io.InputStream) -> modify
    org.dom4j.Document modify(java.io.InputStream,java.lang.String) -> modify
    org.dom4j.Document modify(java.io.Reader) -> modify
    org.dom4j.Document modify(java.io.Reader,java.lang.String) -> modify
    org.dom4j.Document modify(java.net.URL) -> modify
    org.dom4j.Document modify(java.lang.String) -> modify
    void addModifier(java.lang.String,org.dom4j.io.ElementModifier) -> addModifier
    void resetModifiers() -> resetModifiers
    void removeModifier(java.lang.String) -> removeModifier
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.io.XMLWriter getXMLWriter() -> getXMLWriter
    void setXMLWriter(org.dom4j.io.XMLWriter) -> setXMLWriter
    boolean isPruneElements() -> isPruneElements
    org.dom4j.io.SAXReader installModifyReader() -> installModifyReader
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    org.dom4j.io.SAXModifyReader getSAXModifyReader() -> getSAXModifyReader
org.dom4j.io.SAXModifyContentHandler -> org.dom4j.io.i:
    org.dom4j.io.XMLWriter xmlWriter -> a
    void setXMLWriter(org.dom4j.io.XMLWriter) -> a
    void startCDATA() -> startCDATA
    void startDTD(java.lang.String,java.lang.String,java.lang.String) -> startDTD
    void endDTD() -> endDTD
    void comment(char[],int,int) -> comment
    void startEntity(java.lang.String) -> startEntity
    void endCDATA() -> endCDATA
    void endEntity(java.lang.String) -> endEntity
    void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> unparsedEntityDecl
    void notationDecl(java.lang.String,java.lang.String,java.lang.String) -> notationDecl
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void startDocument() -> startDocument
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void skippedEntity(java.lang.String) -> skippedEntity
    void endDocument() -> endDocument
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void characters(char[],int,int) -> characters
    boolean activeHandlers() -> a
org.dom4j.io.SAXModifyElementHandler -> org.dom4j.io.j:
    org.dom4j.io.ElementModifier elemModifier -> a
    org.dom4j.Element modifiedElement -> b
    void onStart(org.dom4j.ElementPath) -> onStart
    void onEnd(org.dom4j.ElementPath) -> onEnd
    org.dom4j.Element getModifiedElement() -> a
org.dom4j.io.SAXModifyException -> org.dom4j.io.k:
org.dom4j.io.SAXModifyReader -> org.dom4j.io.l:
    org.dom4j.io.XMLWriter xmlWriter -> a
    void setXMLWriter(org.dom4j.io.XMLWriter) -> a
    org.dom4j.io.SAXContentHandler createContentHandler(org.xml.sax.XMLReader) -> createContentHandler
org.dom4j.io.SAXReader -> org.dom4j.io.SAXReader:
    java.lang.String SAX_STRING_INTERNING -> SAX_STRING_INTERNING
    java.lang.String SAX_NAMESPACE_PREFIXES -> SAX_NAMESPACE_PREFIXES
    java.lang.String SAX_NAMESPACES -> SAX_NAMESPACES
    java.lang.String SAX_DECL_HANDLER -> SAX_DECL_HANDLER
    java.lang.String SAX_LEXICAL_HANDLER -> SAX_LEXICAL_HANDLER
    java.lang.String SAX_LEXICALHANDLER -> SAX_LEXICALHANDLER
    org.dom4j.DocumentFactory factory -> factory
    org.xml.sax.XMLReader xmlReader -> xmlReader
    boolean validating -> validating
    org.dom4j.io.DispatchHandler dispatchHandler -> dispatchHandler
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    boolean stringInternEnabled -> stringInternEnabled
    boolean includeInternalDTDDeclarations -> includeInternalDTDDeclarations
    boolean includeExternalDTDDeclarations -> includeExternalDTDDeclarations
    boolean mergeAdjacentText -> mergeAdjacentText
    boolean stripWhitespaceText -> stripWhitespaceText
    boolean ignoreComments -> ignoreComments
    java.lang.String encoding -> encoding
    org.xml.sax.XMLFilter xmlFilter -> xmlFilter
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    void setFeature(java.lang.String,boolean) -> setFeature
    org.dom4j.Document read(java.io.File) -> read
    org.dom4j.Document read(java.net.URL) -> read
    org.dom4j.Document read(java.lang.String) -> read
    org.dom4j.Document read(java.io.InputStream) -> read
    org.dom4j.Document read(java.io.Reader) -> read
    org.dom4j.Document read(java.io.InputStream,java.lang.String) -> read
    org.dom4j.Document read(java.io.Reader,java.lang.String) -> read
    org.dom4j.Document read(org.xml.sax.InputSource) -> read
    boolean isValidating() -> isValidating
    void setValidation(boolean) -> setValidation
    boolean isIncludeInternalDTDDeclarations() -> isIncludeInternalDTDDeclarations
    void setIncludeInternalDTDDeclarations(boolean) -> setIncludeInternalDTDDeclarations
    boolean isIncludeExternalDTDDeclarations() -> isIncludeExternalDTDDeclarations
    void setIncludeExternalDTDDeclarations(boolean) -> setIncludeExternalDTDDeclarations
    boolean isStringInternEnabled() -> isStringInternEnabled
    void setStringInternEnabled(boolean) -> setStringInternEnabled
    boolean isMergeAdjacentText() -> isMergeAdjacentText
    void setMergeAdjacentText(boolean) -> setMergeAdjacentText
    boolean isStripWhitespaceText() -> isStripWhitespaceText
    void setStripWhitespaceText(boolean) -> setStripWhitespaceText
    boolean isIgnoreComments() -> isIgnoreComments
    void setIgnoreComments(boolean) -> setIgnoreComments
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    java.lang.String getEncoding() -> getEncoding
    void setEncoding(java.lang.String) -> setEncoding
    void setXMLReaderClassName(java.lang.String) -> setXMLReaderClassName
    void addHandler(java.lang.String,org.dom4j.ElementHandler) -> addHandler
    void removeHandler(java.lang.String) -> removeHandler
    void setDefaultHandler(org.dom4j.ElementHandler) -> setDefaultHandler
    void resetHandlers() -> resetHandlers
    org.xml.sax.XMLFilter getXMLFilter() -> getXMLFilter
    void setXMLFilter(org.xml.sax.XMLFilter) -> setXMLFilter
    org.xml.sax.XMLReader installXMLFilter(org.xml.sax.XMLReader) -> installXMLFilter
    org.dom4j.io.DispatchHandler getDispatchHandler() -> getDispatchHandler
    void setDispatchHandler(org.dom4j.io.DispatchHandler) -> setDispatchHandler
    org.xml.sax.XMLReader createXMLReader() -> createXMLReader
    void configureReader(org.xml.sax.XMLReader,org.xml.sax.helpers.DefaultHandler) -> configureReader
    org.dom4j.io.SAXContentHandler createContentHandler(org.xml.sax.XMLReader) -> createContentHandler
    org.xml.sax.EntityResolver createDefaultEntityResolver(java.lang.String) -> createDefaultEntityResolver
org.dom4j.io.SAXReader$SAXEntityResolver -> org.dom4j.io.SAXReader$SAXEntityResolver:
    java.lang.String uriPrefix -> uriPrefix
    org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String) -> resolveEntity
org.dom4j.io.SAXValidator -> org.dom4j.io.SAXValidator:
    org.xml.sax.XMLReader xmlReader -> xmlReader
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    void validate(org.dom4j.Document) -> validate
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.XMLReader createXMLReader() -> createXMLReader
    void configureReader() -> configureReader
org.dom4j.io.SAXWriter -> org.dom4j.io.SAXWriter:
    java.lang.String[] LEXICAL_HANDLER_NAMES -> LEXICAL_HANDLER_NAMES
    java.lang.String FEATURE_NAMESPACE_PREFIXES -> FEATURE_NAMESPACE_PREFIXES
    java.lang.String FEATURE_NAMESPACES -> FEATURE_NAMESPACES
    org.xml.sax.ContentHandler contentHandler -> contentHandler
    org.xml.sax.DTDHandler dtdHandler -> dtdHandler
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    org.xml.sax.ext.LexicalHandler lexicalHandler -> lexicalHandler
    org.xml.sax.helpers.AttributesImpl attributes -> attributes
    java.util.Map features -> features
    java.util.Map properties -> properties
    boolean declareNamespaceAttributes -> declareNamespaceAttributes
    void write(org.dom4j.Node) -> write
    void write(org.dom4j.Document) -> write
    void write(org.dom4j.Element) -> write
    void writeOpen(org.dom4j.Element) -> writeOpen
    void writeClose(org.dom4j.Element) -> writeClose
    void write(java.lang.String) -> write
    void write(org.dom4j.CDATA) -> write
    void write(org.dom4j.Comment) -> write
    void write(org.dom4j.Entity) -> write
    void write(org.dom4j.ProcessingInstruction) -> write
    boolean isDeclareNamespaceAttributes() -> isDeclareNamespaceAttributes
    void setDeclareNamespaceAttributes(boolean) -> setDeclareNamespaceAttributes
    org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.ext.LexicalHandler getLexicalHandler() -> getLexicalHandler
    void setLexicalHandler(org.xml.sax.ext.LexicalHandler) -> setLexicalHandler
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    boolean getFeature(java.lang.String) -> getFeature
    void setFeature(java.lang.String,boolean) -> setFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void parse(java.lang.String) -> parse
    void parse(org.xml.sax.InputSource) -> parse
    void writeContent(org.dom4j.Branch,org.dom4j.tree.NamespaceStack) -> writeContent
    void documentLocator(org.dom4j.Document) -> documentLocator
    void entityResolver(org.dom4j.Document) -> entityResolver
    void dtdHandler(org.dom4j.Document) -> dtdHandler
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void write(org.dom4j.Element,org.dom4j.tree.NamespaceStack) -> write
    org.xml.sax.helpers.AttributesImpl startPrefixMapping(org.dom4j.Element,org.dom4j.tree.NamespaceStack) -> startPrefixMapping
    void endPrefixMapping(org.dom4j.tree.NamespaceStack,int) -> endPrefixMapping
    void startElement(org.dom4j.Element,org.xml.sax.helpers.AttributesImpl) -> startElement
    void endElement(org.dom4j.Element) -> endElement
    org.xml.sax.Attributes createAttributes(org.dom4j.Element,org.xml.sax.Attributes) -> createAttributes
    org.xml.sax.helpers.AttributesImpl addNamespaceAttribute(org.xml.sax.helpers.AttributesImpl,org.dom4j.Namespace) -> addNamespaceAttribute
    boolean isIgnoreableNamespace(org.dom4j.Namespace,org.dom4j.tree.NamespaceStack) -> isIgnoreableNamespace
    void checkForNullHandlers() -> checkForNullHandlers
org.dom4j.io.STAXEventReader -> org.dom4j.io.STAXEventReader:
    org.dom4j.DocumentFactory factory -> factory
    javax.xml.stream.XMLInputFactory inputFactory -> inputFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.Document readDocument(java.io.InputStream) -> readDocument
    org.dom4j.Document readDocument(java.io.Reader) -> readDocument
    org.dom4j.Document readDocument(java.io.InputStream,java.lang.String) -> readDocument
    org.dom4j.Document readDocument(java.io.Reader,java.lang.String) -> readDocument
    org.dom4j.Node readNode(javax.xml.stream.XMLEventReader) -> readNode
    org.dom4j.Document readDocument(javax.xml.stream.XMLEventReader) -> readDocument
    org.dom4j.Element readElement(javax.xml.stream.XMLEventReader) -> readElement
    org.dom4j.Attribute readAttribute(javax.xml.stream.XMLEventReader) -> readAttribute
    org.dom4j.Namespace readNamespace(javax.xml.stream.XMLEventReader) -> readNamespace
    org.dom4j.CharacterData readCharacters(javax.xml.stream.XMLEventReader) -> readCharacters
    org.dom4j.Comment readComment(javax.xml.stream.XMLEventReader) -> readComment
    org.dom4j.Entity readEntityReference(javax.xml.stream.XMLEventReader) -> readEntityReference
    org.dom4j.ProcessingInstruction readProcessingInstruction(javax.xml.stream.XMLEventReader) -> readProcessingInstruction
    org.dom4j.Element createElement(javax.xml.stream.events.StartElement) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,javax.xml.stream.events.Attribute) -> createAttribute
    org.dom4j.Namespace createNamespace(javax.xml.stream.events.Namespace) -> createNamespace
    org.dom4j.CharacterData createCharacterData(javax.xml.stream.events.Characters) -> createCharacterData
    org.dom4j.Comment createComment(javax.xml.stream.events.Comment) -> createComment
    org.dom4j.Entity createEntity(javax.xml.stream.events.EntityReference) -> createEntity
    org.dom4j.ProcessingInstruction createProcessingInstruction(javax.xml.stream.events.ProcessingInstruction) -> createProcessingInstruction
    org.dom4j.QName createQName(javax.xml.namespace.QName) -> createQName
org.dom4j.io.STAXEventWriter -> org.dom4j.io.STAXEventWriter:
    javax.xml.stream.util.XMLEventConsumer consumer -> consumer
    javax.xml.stream.XMLEventFactory factory -> factory
    javax.xml.stream.XMLOutputFactory outputFactory -> outputFactory
    javax.xml.stream.util.XMLEventConsumer getConsumer() -> getConsumer
    void setConsumer(javax.xml.stream.util.XMLEventConsumer) -> setConsumer
    javax.xml.stream.XMLEventFactory getEventFactory() -> getEventFactory
    void setEventFactory(javax.xml.stream.XMLEventFactory) -> setEventFactory
    void writeNode(org.dom4j.Node) -> writeNode
    void writeChildNodes(org.dom4j.Branch) -> writeChildNodes
    void writeElement(org.dom4j.Element) -> writeElement
    javax.xml.stream.events.StartElement createStartElement(org.dom4j.Element) -> createStartElement
    javax.xml.stream.events.EndElement createEndElement(org.dom4j.Element) -> createEndElement
    void writeAttribute(org.dom4j.Attribute) -> writeAttribute
    javax.xml.stream.events.Attribute createAttribute(org.dom4j.Attribute) -> createAttribute
    void writeNamespace(org.dom4j.Namespace) -> writeNamespace
    javax.xml.stream.events.Namespace createNamespace(org.dom4j.Namespace) -> createNamespace
    void writeText(org.dom4j.Text) -> writeText
    javax.xml.stream.events.Characters createCharacters(org.dom4j.Text) -> createCharacters
    void writeCDATA(org.dom4j.CDATA) -> writeCDATA
    javax.xml.stream.events.Characters createCharacters(org.dom4j.CDATA) -> createCharacters
    void writeComment(org.dom4j.Comment) -> writeComment
    javax.xml.stream.events.Comment createComment(org.dom4j.Comment) -> createComment
    void writeProcessingInstruction(org.dom4j.ProcessingInstruction) -> writeProcessingInstruction
    javax.xml.stream.events.ProcessingInstruction createProcessingInstruction(org.dom4j.ProcessingInstruction) -> createProcessingInstruction
    void writeEntity(org.dom4j.Entity) -> writeEntity
    javax.xml.stream.events.EntityReference createEntityReference(org.dom4j.Entity) -> createEntityReference
    void writeDocumentType(org.dom4j.DocumentType) -> writeDocumentType
    javax.xml.stream.events.DTD createDTD(org.dom4j.DocumentType) -> createDTD
    void writeDocument(org.dom4j.Document) -> writeDocument
    javax.xml.stream.events.StartDocument createStartDocument(org.dom4j.Document) -> createStartDocument
    javax.xml.stream.events.EndDocument createEndDocument(org.dom4j.Document) -> createEndDocument
    javax.xml.namespace.QName createQName(org.dom4j.QName) -> createQName
    javax.xml.stream.XMLEventFactory access$000(org.dom4j.io.STAXEventWriter) -> access$000
org.dom4j.io.STAXEventWriter$AttributeIterator -> org.dom4j.io.m:
    java.util.Iterator iter -> a
    org.dom4j.io.STAXEventWriter this$0 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.dom4j.io.STAXEventWriter$NamespaceIterator -> org.dom4j.io.n:
    java.util.Iterator iter -> a
    org.dom4j.io.STAXEventWriter this$0 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.dom4j.io.XMLResult -> org.dom4j.io.XMLResult:
    org.dom4j.io.XMLWriter xmlWriter -> xmlWriter
    org.dom4j.io.XMLWriter getXMLWriter() -> getXMLWriter
    void setXMLWriter(org.dom4j.io.XMLWriter) -> setXMLWriter
    org.xml.sax.ContentHandler getHandler() -> getHandler
    org.xml.sax.ext.LexicalHandler getLexicalHandler() -> getLexicalHandler
org.dom4j.io.XMLWriter -> org.dom4j.io.XMLWriter:
    java.lang.String PAD_TEXT -> PAD_TEXT
    java.lang.String[] LEXICAL_HANDLER_NAMES -> LEXICAL_HANDLER_NAMES
    org.dom4j.io.OutputFormat DEFAULT_FORMAT -> DEFAULT_FORMAT
    boolean resolveEntityRefs -> resolveEntityRefs
    int lastOutputNodeType -> lastOutputNodeType
    boolean lastElementClosed -> lastElementClosed
    boolean preserve -> preserve
    java.io.Writer writer -> writer
    org.dom4j.tree.NamespaceStack namespaceStack -> namespaceStack
    org.dom4j.io.OutputFormat format -> format
    boolean escapeText -> escapeText
    int indentLevel -> indentLevel
    java.lang.StringBuffer buffer -> buffer
    boolean charsAdded -> charsAdded
    char lastChar -> lastChar
    boolean autoFlush -> autoFlush
    org.xml.sax.ext.LexicalHandler lexicalHandler -> lexicalHandler
    boolean showCommentsInDTDs -> showCommentsInDTDs
    boolean inDTD -> inDTD
    java.util.Map namespacesMap -> namespacesMap
    int maximumAllowedCharacter -> maximumAllowedCharacter
    void setWriter(java.io.Writer) -> setWriter
    void setOutputStream(java.io.OutputStream) -> setOutputStream
    boolean isEscapeText() -> isEscapeText
    void setEscapeText(boolean) -> setEscapeText
    void setIndentLevel(int) -> setIndentLevel
    int getMaximumAllowedCharacter() -> getMaximumAllowedCharacter
    void setMaximumAllowedCharacter(int) -> setMaximumAllowedCharacter
    void flush() -> flush
    void close() -> close
    void println() -> println
    void write(org.dom4j.Attribute) -> write
    void write(org.dom4j.Document) -> write
    void write(org.dom4j.Element) -> write
    void write(org.dom4j.CDATA) -> write
    void write(org.dom4j.Comment) -> write
    void write(org.dom4j.DocumentType) -> write
    void write(org.dom4j.Entity) -> write
    void write(org.dom4j.Namespace) -> write
    void write(org.dom4j.ProcessingInstruction) -> write
    void write(java.lang.String) -> write
    void write(org.dom4j.Text) -> write
    void write(org.dom4j.Node) -> write
    void write(java.lang.Object) -> write
    void writeOpen(org.dom4j.Element) -> writeOpen
    void writeClose(org.dom4j.Element) -> writeClose
    void parse(org.xml.sax.InputSource) -> parse
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setLexicalHandler(org.xml.sax.ext.LexicalHandler) -> setLexicalHandler
    org.xml.sax.ext.LexicalHandler getLexicalHandler() -> getLexicalHandler
    void setDocumentLocator(org.xml.sax.Locator) -> setDocumentLocator
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startPrefixMapping(java.lang.String,java.lang.String) -> startPrefixMapping
    void endPrefixMapping(java.lang.String) -> endPrefixMapping
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void ignorableWhitespace(char[],int,int) -> ignorableWhitespace
    void processingInstruction(java.lang.String,java.lang.String) -> processingInstruction
    void notationDecl(java.lang.String,java.lang.String,java.lang.String) -> notationDecl
    void unparsedEntityDecl(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> unparsedEntityDecl
    void startDTD(java.lang.String,java.lang.String,java.lang.String) -> startDTD
    void endDTD() -> endDTD
    void startCDATA() -> startCDATA
    void endCDATA() -> endCDATA
    void startEntity(java.lang.String) -> startEntity
    void endEntity(java.lang.String) -> endEntity
    void comment(char[],int,int) -> comment
    void writeElement(org.dom4j.Element) -> writeElement
    boolean isElementSpacePreserved(org.dom4j.Element) -> isElementSpacePreserved
    void writeElementContent(org.dom4j.Element) -> writeElementContent
    void writeCDATA(java.lang.String) -> writeCDATA
    void writeDocType(org.dom4j.DocumentType) -> writeDocType
    void writeNamespace(org.dom4j.Namespace) -> writeNamespace
    void writeNamespaces() -> writeNamespaces
    void writeNamespace(java.lang.String,java.lang.String) -> writeNamespace
    void writeProcessingInstruction(org.dom4j.ProcessingInstruction) -> writeProcessingInstruction
    void writeString(java.lang.String) -> writeString
    void writeNodeText(org.dom4j.Node) -> writeNodeText
    void writeNode(org.dom4j.Node) -> writeNode
    void installLexicalHandler() -> installLexicalHandler
    void writeDocType(java.lang.String,java.lang.String,java.lang.String) -> writeDocType
    void writeEntity(org.dom4j.Entity) -> writeEntity
    void writeEntityRef(java.lang.String) -> writeEntityRef
    void writeComment(java.lang.String) -> writeComment
    void writeAttributes(org.dom4j.Element) -> writeAttributes
    void writeAttribute(org.dom4j.Attribute) -> writeAttribute
    void writeAttributes(org.xml.sax.Attributes) -> writeAttributes
    void writeAttribute(org.xml.sax.Attributes,int) -> writeAttribute
    void indent() -> indent
    void writePrintln() -> writePrintln
    java.io.Writer createWriter(java.io.OutputStream,java.lang.String) -> createWriter
    void writeDeclaration() -> writeDeclaration
    void writeClose(java.lang.String) -> writeClose
    void writeEmptyElementClose(java.lang.String) -> writeEmptyElementClose
    boolean isExpandEmptyElements() -> isExpandEmptyElements
    java.lang.String escapeElementEntities(java.lang.String) -> escapeElementEntities
    void writeEscapeAttributeEntities(java.lang.String) -> writeEscapeAttributeEntities
    java.lang.String escapeAttributeEntities(java.lang.String) -> escapeAttributeEntities
    boolean shouldEncodeChar(char) -> shouldEncodeChar
    int defaultMaximumAllowedCharacter() -> defaultMaximumAllowedCharacter
    boolean isNamespaceDeclaration(org.dom4j.Namespace) -> isNamespaceDeclaration
    void handleException(java.io.IOException) -> handleException
    org.dom4j.io.OutputFormat getOutputFormat() -> getOutputFormat
    boolean resolveEntityRefs() -> resolveEntityRefs
    void setResolveEntityRefs(boolean) -> setResolveEntityRefs
org.dom4j.io.XPP3Reader -> org.dom4j.io.XPP3Reader:
    org.dom4j.DocumentFactory factory -> factory
    org.xmlpull.v1.XmlPullParser xppParser -> xppParser
    org.xmlpull.v1.XmlPullParserFactory xppFactory -> xppFactory
    org.dom4j.io.DispatchHandler dispatchHandler -> dispatchHandler
    org.dom4j.Document read(java.io.File) -> read
    org.dom4j.Document read(java.net.URL) -> read
    org.dom4j.Document read(java.lang.String) -> read
    org.dom4j.Document read(java.io.InputStream) -> read
    org.dom4j.Document read(java.io.Reader) -> read
    org.dom4j.Document read(char[]) -> read
    org.dom4j.Document read(java.io.InputStream,java.lang.String) -> read
    org.dom4j.Document read(java.io.Reader,java.lang.String) -> read
    org.xmlpull.v1.XmlPullParser getXPPParser() -> getXPPParser
    org.xmlpull.v1.XmlPullParserFactory getXPPFactory() -> getXPPFactory
    void setXPPFactory(org.xmlpull.v1.XmlPullParserFactory) -> setXPPFactory
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    void addHandler(java.lang.String,org.dom4j.ElementHandler) -> addHandler
    void removeHandler(java.lang.String) -> removeHandler
    void setDefaultHandler(org.dom4j.ElementHandler) -> setDefaultHandler
    org.dom4j.Document parseDocument() -> parseDocument
    org.dom4j.io.DispatchHandler getDispatchHandler() -> getDispatchHandler
    void setDispatchHandler(org.dom4j.io.DispatchHandler) -> setDispatchHandler
    java.io.Reader createReader(java.io.InputStream) -> createReader
org.dom4j.io.XPPReader -> org.dom4j.io.XPPReader:
    org.dom4j.DocumentFactory factory -> factory
    org.gjt.xpp.XmlPullParser xppParser -> xppParser
    org.gjt.xpp.XmlPullParserFactory xppFactory -> xppFactory
    org.dom4j.io.DispatchHandler dispatchHandler -> dispatchHandler
    org.dom4j.Document read(java.io.File) -> read
    org.dom4j.Document read(java.net.URL) -> read
    org.dom4j.Document read(java.lang.String) -> read
    org.dom4j.Document read(java.io.InputStream) -> read
    org.dom4j.Document read(java.io.Reader) -> read
    org.dom4j.Document read(char[]) -> read
    org.dom4j.Document read(java.io.InputStream,java.lang.String) -> read
    org.dom4j.Document read(java.io.Reader,java.lang.String) -> read
    org.gjt.xpp.XmlPullParser getXPPParser() -> getXPPParser
    org.gjt.xpp.XmlPullParserFactory getXPPFactory() -> getXPPFactory
    void setXPPFactory(org.gjt.xpp.XmlPullParserFactory) -> setXPPFactory
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    void addHandler(java.lang.String,org.dom4j.ElementHandler) -> addHandler
    void removeHandler(java.lang.String) -> removeHandler
    void setDefaultHandler(org.dom4j.ElementHandler) -> setDefaultHandler
    org.dom4j.Document parseDocument() -> parseDocument
    org.dom4j.io.DispatchHandler getDispatchHandler() -> getDispatchHandler
    void setDispatchHandler(org.dom4j.io.DispatchHandler) -> setDispatchHandler
    java.io.Reader createReader(java.io.InputStream) -> createReader
org.dom4j.jaxb.JAXBModifier -> org.dom4j.jaxb.JAXBModifier:
    org.dom4j.io.SAXModifier modifier -> modifier
    org.dom4j.io.XMLWriter xmlWriter -> xmlWriter
    boolean pruneElements -> pruneElements
    org.dom4j.io.OutputFormat outputFormat -> outputFormat
    java.util.HashMap modifiers -> modifiers
    org.dom4j.Document modify(java.io.File) -> modify
    org.dom4j.Document modify(java.io.File,java.nio.charset.Charset) -> modify
    org.dom4j.Document modify(org.xml.sax.InputSource) -> modify
    org.dom4j.Document modify(java.io.InputStream) -> modify
    org.dom4j.Document modify(java.io.InputStream,java.lang.String) -> modify
    org.dom4j.Document modify(java.io.Reader) -> modify
    org.dom4j.Document modify(java.io.Reader,java.lang.String) -> modify
    org.dom4j.Document modify(java.lang.String) -> modify
    org.dom4j.Document modify(java.net.URL) -> modify
    void setOutput(java.io.File) -> setOutput
    void setOutput(java.io.OutputStream) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void addObjectModifier(java.lang.String,org.dom4j.jaxb.JAXBObjectModifier) -> addObjectModifier
    void removeObjectModifier(java.lang.String) -> removeObjectModifier
    void resetObjectModifiers() -> resetObjectModifiers
    boolean isPruneElements() -> isPruneElements
    void setPruneElements(boolean) -> setPruneElements
    org.dom4j.io.SAXModifier installModifier() -> installModifier
    org.dom4j.io.SAXModifier getModifier() -> getModifier
    org.dom4j.io.XMLWriter getXMLWriter() -> getXMLWriter
    org.dom4j.io.XMLWriter createXMLWriter() -> createXMLWriter
org.dom4j.jaxb.JAXBModifier$JAXBElementModifier -> org.dom4j.jaxb.a:
    org.dom4j.jaxb.JAXBModifier jaxbModifier -> a
    org.dom4j.jaxb.JAXBObjectModifier objectModifier -> b
    org.dom4j.jaxb.JAXBModifier this$0 -> c
    org.dom4j.Element modifyElement(org.dom4j.Element) -> modifyElement
org.dom4j.jaxb.JAXBObjectHandler -> org.dom4j.jaxb.JAXBObjectHandler:
    void handleObject(javax.xml.bind.Element) -> handleObject
org.dom4j.jaxb.JAXBObjectModifier -> org.dom4j.jaxb.JAXBObjectModifier:
    javax.xml.bind.Element modifyObject(javax.xml.bind.Element) -> modifyObject
org.dom4j.jaxb.JAXBReader -> org.dom4j.jaxb.JAXBReader:
    org.dom4j.io.SAXReader reader -> reader
    boolean pruneElements -> pruneElements
    org.dom4j.Document read(java.io.File) -> read
    org.dom4j.Document read(java.io.File,java.nio.charset.Charset) -> read
    org.dom4j.Document read(org.xml.sax.InputSource) -> read
    org.dom4j.Document read(java.io.InputStream) -> read
    org.dom4j.Document read(java.io.InputStream,java.lang.String) -> read
    org.dom4j.Document read(java.io.Reader) -> read
    org.dom4j.Document read(java.io.Reader,java.lang.String) -> read
    org.dom4j.Document read(java.lang.String) -> read
    org.dom4j.Document read(java.net.URL) -> read
    void addObjectHandler(java.lang.String,org.dom4j.jaxb.JAXBObjectHandler) -> addObjectHandler
    void removeObjectHandler(java.lang.String) -> removeObjectHandler
    void addHandler(java.lang.String,org.dom4j.ElementHandler) -> addHandler
    void removeHandler(java.lang.String) -> removeHandler
    void resetHandlers() -> resetHandlers
    boolean isPruneElements() -> isPruneElements
    void setPruneElements(boolean) -> setPruneElements
    org.dom4j.io.SAXReader getReader() -> getReader
org.dom4j.jaxb.JAXBReader$PruningElementHandler -> org.dom4j.jaxb.b:
    org.dom4j.jaxb.JAXBReader this$0 -> a
    void onStart(org.dom4j.ElementPath) -> onStart
    void onEnd(org.dom4j.ElementPath) -> onEnd
org.dom4j.jaxb.JAXBReader$UnmarshalElementHandler -> org.dom4j.jaxb.c:
    org.dom4j.jaxb.JAXBReader jaxbReader -> a
    org.dom4j.jaxb.JAXBObjectHandler handler -> b
    org.dom4j.jaxb.JAXBReader this$0 -> c
    void onStart(org.dom4j.ElementPath) -> onStart
    void onEnd(org.dom4j.ElementPath) -> onEnd
org.dom4j.jaxb.JAXBRuntimeException -> org.dom4j.jaxb.d:
org.dom4j.jaxb.JAXBSupport -> org.dom4j.jaxb.e:
    java.lang.String contextPath -> contextPath
    java.lang.ClassLoader classloader -> classloader
    javax.xml.bind.JAXBContext jaxbContext -> jaxbContext
    javax.xml.bind.Marshaller marshaller -> marshaller
    javax.xml.bind.Unmarshaller unmarshaller -> unmarshaller
    org.dom4j.Element marshal(javax.xml.bind.Element) -> marshal
    javax.xml.bind.Element unmarshal(org.dom4j.Element) -> unmarshal
    javax.xml.bind.Marshaller getMarshaller() -> getMarshaller
    javax.xml.bind.Unmarshaller getUnmarshaller() -> getUnmarshaller
    javax.xml.bind.JAXBContext getContext() -> getContext
org.dom4j.jaxb.JAXBWriter -> org.dom4j.jaxb.JAXBWriter:
    org.dom4j.io.XMLWriter xmlWriter -> xmlWriter
    org.dom4j.io.OutputFormat outputFormat -> outputFormat
    org.dom4j.io.OutputFormat getOutputFormat() -> getOutputFormat
    void setOutput(java.io.File) -> setOutput
    void setOutput(java.io.OutputStream) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void write(javax.xml.bind.Element) -> write
    void writeClose(javax.xml.bind.Element) -> writeClose
    void writeOpen(javax.xml.bind.Element) -> writeOpen
    void writeElement(org.dom4j.Element) -> writeElement
    void writeCloseElement(org.dom4j.Element) -> writeCloseElement
    void writeOpenElement(org.dom4j.Element) -> writeOpenElement
    org.dom4j.io.XMLWriter getWriter() -> getWriter
org.dom4j.rule.Action -> org.dom4j.rule.Action:
    void run(org.dom4j.Node) -> run
org.dom4j.rule.Mode -> org.dom4j.rule.Mode:
    org.dom4j.rule.RuleSet[] ruleSets -> ruleSets
    java.util.Map elementNameRuleSets -> elementNameRuleSets
    java.util.Map attributeNameRuleSets -> attributeNameRuleSets
    void fireRule(org.dom4j.Node) -> fireRule
    void applyTemplates(org.dom4j.Element) -> applyTemplates
    void applyTemplates(org.dom4j.Document) -> applyTemplates
    void addRule(org.dom4j.rule.Rule) -> addRule
    void removeRule(org.dom4j.rule.Rule) -> removeRule
    org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node) -> getMatchingRule
    org.dom4j.rule.RuleSet getRuleSet(int) -> getRuleSet
    java.util.Map addToNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule) -> addToNameMap
    void removeFromNameMap(java.util.Map,java.lang.String,org.dom4j.rule.Rule) -> removeFromNameMap
org.dom4j.rule.NullAction -> org.dom4j.rule.NullAction:
    org.dom4j.rule.NullAction SINGLETON -> SINGLETON
    void run(org.dom4j.Node) -> run
org.dom4j.rule.Pattern -> org.dom4j.rule.Pattern:
    short ANY_NODE -> ANY_NODE
    short NONE -> NONE
    short NUMBER_OF_TYPES -> NUMBER_OF_TYPES
    double DEFAULT_PRIORITY -> DEFAULT_PRIORITY
    boolean matches(org.dom4j.Node) -> matches
    double getPriority() -> getPriority
    org.dom4j.rule.Pattern[] getUnionPatterns() -> getUnionPatterns
    short getMatchType() -> getMatchType
    java.lang.String getMatchesNodeName() -> getMatchesNodeName
org.dom4j.rule.Rule -> org.dom4j.rule.Rule:
    java.lang.String mode -> mode
    int importPrecedence -> importPrecedence
    double priority -> priority
    int appearenceCount -> appearenceCount
    org.dom4j.rule.Pattern pattern -> pattern
    org.dom4j.rule.Action action -> action
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    int compareTo(org.dom4j.rule.Rule) -> compareTo
    java.lang.String toString() -> toString
    boolean matches(org.dom4j.Node) -> matches
    org.dom4j.rule.Rule[] getUnionRules() -> getUnionRules
    short getMatchType() -> getMatchType
    java.lang.String getMatchesNodeName() -> getMatchesNodeName
    java.lang.String getMode() -> getMode
    void setMode(java.lang.String) -> setMode
    int getImportPrecedence() -> getImportPrecedence
    void setImportPrecedence(int) -> setImportPrecedence
    double getPriority() -> getPriority
    void setPriority(double) -> setPriority
    int getAppearenceCount() -> getAppearenceCount
    void setAppearenceCount(int) -> setAppearenceCount
    org.dom4j.rule.Pattern getPattern() -> getPattern
    void setPattern(org.dom4j.rule.Pattern) -> setPattern
    org.dom4j.rule.Action getAction() -> getAction
    void setAction(org.dom4j.rule.Action) -> setAction
org.dom4j.rule.RuleManager -> org.dom4j.rule.RuleManager:
    java.util.HashMap modes -> modes
    int appearenceCount -> appearenceCount
    org.dom4j.rule.Action valueOfAction -> valueOfAction
    org.dom4j.rule.Mode getMode(java.lang.String) -> getMode
    void addRule(org.dom4j.rule.Rule) -> addRule
    void removeRule(org.dom4j.rule.Rule) -> removeRule
    org.dom4j.rule.Rule getMatchingRule(java.lang.String,org.dom4j.Node) -> getMatchingRule
    void clear() -> clear
    org.dom4j.rule.Action getValueOfAction() -> getValueOfAction
    void setValueOfAction(org.dom4j.rule.Action) -> setValueOfAction
    org.dom4j.rule.Mode createMode() -> createMode
    void addDefaultRules(org.dom4j.rule.Mode) -> addDefaultRules
    void addDefaultRule(org.dom4j.rule.Mode,org.dom4j.rule.Pattern,org.dom4j.rule.Action) -> addDefaultRule
    org.dom4j.rule.Rule createDefaultRule(org.dom4j.rule.Pattern,org.dom4j.rule.Action) -> createDefaultRule
org.dom4j.rule.RuleManager$1 -> org.dom4j.rule.a:
    org.dom4j.rule.Mode val$mode -> a
    org.dom4j.rule.RuleManager this$0 -> b
    void run(org.dom4j.Node) -> run
org.dom4j.rule.RuleSet -> org.dom4j.rule.RuleSet:
    java.util.ArrayList rules -> rules
    org.dom4j.rule.Rule[] ruleArray -> ruleArray
    java.lang.String toString() -> toString
    org.dom4j.rule.Rule getMatchingRule(org.dom4j.Node) -> getMatchingRule
    void addRule(org.dom4j.rule.Rule) -> addRule
    void removeRule(org.dom4j.rule.Rule) -> removeRule
    void addAll(org.dom4j.rule.RuleSet) -> addAll
    org.dom4j.rule.Rule[] getRuleArray() -> getRuleArray
org.dom4j.rule.Stylesheet -> org.dom4j.rule.Stylesheet:
    org.dom4j.rule.RuleManager ruleManager -> ruleManager
    java.lang.String modeName -> modeName
    void addRule(org.dom4j.rule.Rule) -> addRule
    void removeRule(org.dom4j.rule.Rule) -> removeRule
    void run(java.lang.Object) -> run
    void run(java.lang.Object,java.lang.String) -> run
    void run(java.util.List) -> run
    void run(java.util.List,java.lang.String) -> run
    void run(org.dom4j.Node) -> run
    void run(org.dom4j.Node,java.lang.String) -> run
    void applyTemplates(java.lang.Object,org.dom4j.XPath) -> applyTemplates
    void applyTemplates(java.lang.Object,org.dom4j.XPath,java.lang.String) -> applyTemplates
    void applyTemplates(java.lang.Object,org.jaxen.XPath) -> applyTemplates
    void applyTemplates(java.lang.Object,org.jaxen.XPath,java.lang.String) -> applyTemplates
    void applyTemplates(java.lang.Object) -> applyTemplates
    void applyTemplates(java.lang.Object,java.lang.String) -> applyTemplates
    void clear() -> clear
    java.lang.String getModeName() -> getModeName
    void setModeName(java.lang.String) -> setModeName
    org.dom4j.rule.Action getValueOfAction() -> getValueOfAction
    void setValueOfAction(org.dom4j.rule.Action) -> setValueOfAction
org.dom4j.rule.pattern.DefaultPattern -> org.dom4j.rule.pattern.DefaultPattern:
    org.dom4j.NodeFilter filter -> filter
    boolean matches(org.dom4j.Node) -> matches
    double getPriority() -> getPriority
    org.dom4j.rule.Pattern[] getUnionPatterns() -> getUnionPatterns
    short getMatchType() -> getMatchType
    java.lang.String getMatchesNodeName() -> getMatchesNodeName
org.dom4j.rule.pattern.NodeTypePattern -> org.dom4j.rule.pattern.NodeTypePattern:
    org.dom4j.rule.pattern.NodeTypePattern ANY_ATTRIBUTE -> ANY_ATTRIBUTE
    org.dom4j.rule.pattern.NodeTypePattern ANY_COMMENT -> ANY_COMMENT
    org.dom4j.rule.pattern.NodeTypePattern ANY_DOCUMENT -> ANY_DOCUMENT
    org.dom4j.rule.pattern.NodeTypePattern ANY_ELEMENT -> ANY_ELEMENT
    org.dom4j.rule.pattern.NodeTypePattern ANY_PROCESSING_INSTRUCTION -> ANY_PROCESSING_INSTRUCTION
    org.dom4j.rule.pattern.NodeTypePattern ANY_TEXT -> ANY_TEXT
    short nodeType -> nodeType
    boolean matches(org.dom4j.Node) -> matches
    double getPriority() -> getPriority
    org.dom4j.rule.Pattern[] getUnionPatterns() -> getUnionPatterns
    short getMatchType() -> getMatchType
    java.lang.String getMatchesNodeName() -> getMatchesNodeName
org.dom4j.swing.BranchTreeNode -> org.dom4j.swing.BranchTreeNode:
    java.util.List children -> children
    java.util.Enumeration children() -> children
    boolean getAllowsChildren() -> getAllowsChildren
    javax.swing.tree.TreeNode getChildAt(int) -> getChildAt
    int getChildCount() -> getChildCount
    int getIndex(javax.swing.tree.TreeNode) -> getIndex
    boolean isLeaf() -> isLeaf
    java.lang.String toString() -> toString
    java.util.List getChildList() -> getChildList
    java.util.List createChildList() -> createChildList
    javax.swing.tree.TreeNode createChildTreeNode(org.dom4j.Node) -> createChildTreeNode
    org.dom4j.Branch getXmlBranch() -> getXmlBranch
org.dom4j.swing.BranchTreeNode$1 -> org.dom4j.swing.a:
    int index -> a
    org.dom4j.swing.BranchTreeNode this$0 -> b
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
org.dom4j.swing.DocumentTreeModel -> org.dom4j.swing.DocumentTreeModel:
    org.dom4j.Document document -> document
    org.dom4j.Document getDocument() -> getDocument
    void setDocument(org.dom4j.Document) -> setDocument
org.dom4j.swing.LeafTreeNode -> org.dom4j.swing.LeafTreeNode:
    java.util.Enumeration EMPTY_ENUMERATION -> EMPTY_ENUMERATION
    javax.swing.tree.TreeNode parent -> parent
    org.dom4j.Node xmlNode -> xmlNode
    java.util.Enumeration children() -> children
    boolean getAllowsChildren() -> getAllowsChildren
    javax.swing.tree.TreeNode getChildAt(int) -> getChildAt
    int getChildCount() -> getChildCount
    int getIndex(javax.swing.tree.TreeNode) -> getIndex
    javax.swing.tree.TreeNode getParent() -> getParent
    boolean isLeaf() -> isLeaf
    java.lang.String toString() -> toString
    void setParent(org.dom4j.swing.LeafTreeNode) -> setParent
    org.dom4j.Node getXmlNode() -> getXmlNode
org.dom4j.swing.LeafTreeNode$1 -> org.dom4j.swing.b:
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
org.dom4j.swing.XMLTableColumnDefinition -> org.dom4j.swing.XMLTableColumnDefinition:
    int OBJECT_TYPE -> OBJECT_TYPE
    int STRING_TYPE -> STRING_TYPE
    int NUMBER_TYPE -> NUMBER_TYPE
    int NODE_TYPE -> NODE_TYPE
    int type -> type
    java.lang.String name -> name
    org.dom4j.XPath xpath -> xpath
    org.dom4j.XPath columnNameXPath -> columnNameXPath
    java.lang.Class class$java$lang$String -> class$java$lang$String
    java.lang.Class class$java$lang$Number -> class$java$lang$Number
    java.lang.Class class$org$dom4j$Node -> class$org$dom4j$Node
    java.lang.Class class$java$lang$Object -> class$java$lang$Object
    int parseType(java.lang.String) -> parseType
    java.lang.Class getColumnClass() -> getColumnClass
    java.lang.Object getValue(java.lang.Object) -> getValue
    int getType() -> getType
    void setType(int) -> setType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.dom4j.XPath getXPath() -> getXPath
    void setXPath(org.dom4j.XPath) -> setXPath
    org.dom4j.XPath getColumnNameXPath() -> getColumnNameXPath
    void setColumnNameXPath(org.dom4j.XPath) -> setColumnNameXPath
    org.dom4j.XPath createXPath(java.lang.String) -> createXPath
    void handleException(java.lang.Exception) -> handleException
    java.lang.Class class$(java.lang.String) -> class$
org.dom4j.swing.XMLTableDefinition -> org.dom4j.swing.XMLTableDefinition:
    org.dom4j.XPath rowXPath -> rowXPath
    java.util.List columns -> columns
    org.dom4j.swing.XMLTableColumnDefinition[] columnArray -> columnArray
    java.util.Map columnNameIndex -> columnNameIndex
    org.jaxen.VariableContext variableContext -> variableContext
    java.lang.Object rowValue -> rowValue
    org.dom4j.swing.XMLTableDefinition load(org.dom4j.Document) -> load
    org.dom4j.swing.XMLTableDefinition load(org.dom4j.Element) -> load
    java.lang.Class getColumnClass(int) -> getColumnClass
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    org.dom4j.XPath getColumnXPath(int) -> getColumnXPath
    org.dom4j.XPath getColumnNameXPath(int) -> getColumnNameXPath
    java.lang.Object getValueAt(java.lang.Object,int) -> getValueAt
    void addColumn(java.lang.String,java.lang.String) -> addColumn
    void addColumn(java.lang.String,java.lang.String,int) -> addColumn
    void addColumnWithXPathName(java.lang.String,java.lang.String,int) -> addColumnWithXPathName
    void addStringColumn(java.lang.String,java.lang.String) -> addStringColumn
    void addNumberColumn(java.lang.String,java.lang.String) -> addNumberColumn
    void addColumn(org.dom4j.swing.XMLTableColumnDefinition) -> addColumn
    void removeColumn(org.dom4j.swing.XMLTableColumnDefinition) -> removeColumn
    void clear() -> clear
    org.dom4j.swing.XMLTableColumnDefinition getColumn(int) -> getColumn
    org.dom4j.swing.XMLTableColumnDefinition getColumn(java.lang.String) -> getColumn
    org.dom4j.XPath getRowXPath() -> getRowXPath
    void setRowXPath(org.dom4j.XPath) -> setRowXPath
    void setRowExpression(java.lang.String) -> setRowExpression
    java.lang.Object getVariableValue(java.lang.String,java.lang.String,java.lang.String) -> getVariableValue
    org.dom4j.XPath createXPath(java.lang.String) -> createXPath
    org.dom4j.XPath createColumnXPath(java.lang.String) -> createColumnXPath
    void clearCaches() -> clearCaches
    void handleException(java.lang.Exception) -> handleException
org.dom4j.swing.XMLTableModel -> org.dom4j.swing.XMLTableModel:
    org.dom4j.swing.XMLTableDefinition definition -> definition
    java.lang.Object source -> source
    java.util.List rows -> rows
    java.lang.Object getRowValue(int) -> getRowValue
    java.util.List getRows() -> getRows
    java.lang.Class getColumnClass(int) -> getColumnClass
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.Object getValueAt(int,int) -> getValueAt
    int getRowCount() -> getRowCount
    org.dom4j.swing.XMLTableDefinition getDefinition() -> getDefinition
    void setDefinition(org.dom4j.swing.XMLTableDefinition) -> setDefinition
    java.lang.Object getSource() -> getSource
    void setSource(java.lang.Object) -> setSource
    void handleException(java.lang.Exception) -> handleException
org.dom4j.tree.AbstractAttribute -> org.dom4j.tree.AbstractAttribute:
    short getNodeType() -> getNodeType
    void setNamespace(org.dom4j.Namespace) -> setNamespace
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    void setValue(java.lang.String) -> setValue
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    java.lang.String toString() -> toString
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
    org.dom4j.Namespace getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getNamespacePrefix() -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getQualifiedName() -> getQualifiedName
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.tree.AbstractBranch -> org.dom4j.tree.AbstractBranch:
    int DEFAULT_CONTENT_LIST_SIZE -> DEFAULT_CONTENT_LIST_SIZE
    boolean isReadOnly() -> isReadOnly
    boolean hasContent() -> hasContent
    java.util.List content() -> content
    java.lang.String getText() -> getText
    java.lang.String getContentAsText(java.lang.Object) -> getContentAsText
    java.lang.String getContentAsStringValue(java.lang.Object) -> getContentAsStringValue
    java.lang.String getTextTrim() -> getTextTrim
    void setProcessingInstructions(java.util.List) -> setProcessingInstructions
    org.dom4j.Element addElement(java.lang.String) -> addElement
    org.dom4j.Element addElement(java.lang.String,java.lang.String) -> addElement
    org.dom4j.Element addElement(org.dom4j.QName) -> addElement
    org.dom4j.Element addElement(java.lang.String,java.lang.String,java.lang.String) -> addElement
    void add(org.dom4j.Node) -> add
    boolean remove(org.dom4j.Node) -> remove
    void add(org.dom4j.Comment) -> add
    void add(org.dom4j.Element) -> add
    void add(org.dom4j.ProcessingInstruction) -> add
    boolean remove(org.dom4j.Comment) -> remove
    boolean remove(org.dom4j.Element) -> remove
    boolean remove(org.dom4j.ProcessingInstruction) -> remove
    org.dom4j.Element elementByID(java.lang.String) -> elementByID
    void appendContent(org.dom4j.Branch) -> appendContent
    org.dom4j.Node node(int) -> node
    int nodeCount() -> nodeCount
    int indexOf(org.dom4j.Node) -> indexOf
    java.util.Iterator nodeIterator() -> nodeIterator
    java.lang.String elementID(org.dom4j.Element) -> elementID
    java.util.List contentList() -> contentList
    java.util.List createContentList() -> createContentList
    java.util.List createContentList(int) -> createContentList
    org.dom4j.tree.BackedList createResultList() -> createResultList
    java.util.List createSingleResultList(java.lang.Object) -> createSingleResultList
    java.util.List createEmptyList() -> createEmptyList
    void addNode(org.dom4j.Node) -> addNode
    void addNode(int,org.dom4j.Node) -> addNode
    boolean removeNode(org.dom4j.Node) -> removeNode
    void childAdded(org.dom4j.Node) -> childAdded
    void childRemoved(org.dom4j.Node) -> childRemoved
    void contentRemoved() -> contentRemoved
    void invalidNodeTypeAddException(org.dom4j.Node) -> invalidNodeTypeAddException
org.dom4j.tree.AbstractCDATA -> org.dom4j.tree.AbstractCDATA:
    short getNodeType() -> getNodeType
    java.lang.String toString() -> toString
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
org.dom4j.tree.AbstractCharacterData -> org.dom4j.tree.AbstractCharacterData:
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    void appendText(java.lang.String) -> appendText
org.dom4j.tree.AbstractComment -> org.dom4j.tree.AbstractComment:
    short getNodeType() -> getNodeType
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    java.lang.String toString() -> toString
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
org.dom4j.tree.AbstractDocument -> org.dom4j.tree.AbstractDocument:
    java.lang.String encoding -> encoding
    short getNodeType() -> getNodeType
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    org.dom4j.Document getDocument() -> getDocument
    java.lang.String getXMLEncoding() -> getXMLEncoding
    java.lang.String getStringValue() -> getStringValue
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
    java.lang.String toString() -> toString
    void normalize() -> normalize
    org.dom4j.Document addComment(java.lang.String) -> addComment
    org.dom4j.Document addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    org.dom4j.Document addProcessingInstruction(java.lang.String,java.util.Map) -> addProcessingInstruction
    org.dom4j.Element addElement(java.lang.String) -> addElement
    org.dom4j.Element addElement(java.lang.String,java.lang.String) -> addElement
    org.dom4j.Element addElement(org.dom4j.QName) -> addElement
    void setRootElement(org.dom4j.Element) -> setRootElement
    void add(org.dom4j.Element) -> add
    boolean remove(org.dom4j.Element) -> remove
    org.dom4j.Node asXPathResult(org.dom4j.Element) -> asXPathResult
    void childAdded(org.dom4j.Node) -> childAdded
    void childRemoved(org.dom4j.Node) -> childRemoved
    void checkAddElementAllowed(org.dom4j.Element) -> checkAddElementAllowed
    void rootElementAdded(org.dom4j.Element) -> rootElementAdded
    void setXMLEncoding(java.lang.String) -> setXMLEncoding
org.dom4j.tree.AbstractDocumentType -> org.dom4j.tree.AbstractDocumentType:
    short getNodeType() -> getNodeType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    java.lang.String getText() -> getText
    java.lang.String toString() -> toString
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
org.dom4j.tree.AbstractElement -> org.dom4j.tree.AbstractElement:
    org.dom4j.DocumentFactory DOCUMENT_FACTORY -> DOCUMENT_FACTORY
    java.util.List EMPTY_LIST -> EMPTY_LIST
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    boolean VERBOSE_TOSTRING -> VERBOSE_TOSTRING
    boolean USE_STRINGVALUE_SEPARATOR -> USE_STRINGVALUE_SEPARATOR
    short getNodeType() -> getNodeType
    boolean isRootElement() -> isRootElement
    void setName(java.lang.String) -> setName
    void setNamespace(org.dom4j.Namespace) -> setNamespace
    java.lang.String getXPathNameStep() -> getXPathNameStep
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
    java.lang.String toString() -> toString
    org.dom4j.Namespace getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getNamespacePrefix() -> getNamespacePrefix
    java.lang.String getNamespaceURI() -> getNamespaceURI
    java.lang.String getQualifiedName() -> getQualifiedName
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    org.dom4j.Node node(int) -> node
    int indexOf(org.dom4j.Node) -> indexOf
    int nodeCount() -> nodeCount
    java.util.Iterator nodeIterator() -> nodeIterator
    org.dom4j.Element element(java.lang.String) -> element
    org.dom4j.Element element(org.dom4j.QName) -> element
    org.dom4j.Element element(java.lang.String,org.dom4j.Namespace) -> element
    java.util.List elements() -> elements
    java.util.List elements(java.lang.String) -> elements
    java.util.List elements(org.dom4j.QName) -> elements
    java.util.List elements(java.lang.String,org.dom4j.Namespace) -> elements
    java.util.Iterator elementIterator() -> elementIterator
    java.util.Iterator elementIterator(java.lang.String) -> elementIterator
    java.util.Iterator elementIterator(org.dom4j.QName) -> elementIterator
    java.util.Iterator elementIterator(java.lang.String,org.dom4j.Namespace) -> elementIterator
    java.util.List attributes() -> attributes
    java.util.Iterator attributeIterator() -> attributeIterator
    org.dom4j.Attribute attribute(int) -> attribute
    int attributeCount() -> attributeCount
    org.dom4j.Attribute attribute(java.lang.String) -> attribute
    org.dom4j.Attribute attribute(org.dom4j.QName) -> attribute
    org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace) -> attribute
    void setAttributes(org.xml.sax.Attributes,org.dom4j.tree.NamespaceStack,boolean) -> setAttributes
    java.lang.String attributeValue(java.lang.String) -> attributeValue
    java.lang.String attributeValue(org.dom4j.QName) -> attributeValue
    java.lang.String attributeValue(java.lang.String,java.lang.String) -> attributeValue
    java.lang.String attributeValue(org.dom4j.QName,java.lang.String) -> attributeValue
    void setAttributeValue(java.lang.String,java.lang.String) -> setAttributeValue
    void setAttributeValue(org.dom4j.QName,java.lang.String) -> setAttributeValue
    void add(org.dom4j.Attribute) -> add
    boolean remove(org.dom4j.Attribute) -> remove
    java.util.List processingInstructions() -> processingInstructions
    java.util.List processingInstructions(java.lang.String) -> processingInstructions
    org.dom4j.ProcessingInstruction processingInstruction(java.lang.String) -> processingInstruction
    boolean removeProcessingInstruction(java.lang.String) -> removeProcessingInstruction
    org.dom4j.Node getXPathResult(int) -> getXPathResult
    org.dom4j.Element addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String) -> addAttribute
    org.dom4j.Element addCDATA(java.lang.String) -> addCDATA
    org.dom4j.Element addComment(java.lang.String) -> addComment
    org.dom4j.Element addElement(java.lang.String) -> addElement
    org.dom4j.Element addEntity(java.lang.String,java.lang.String) -> addEntity
    org.dom4j.Element addNamespace(java.lang.String,java.lang.String) -> addNamespace
    org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map) -> addProcessingInstruction
    org.dom4j.Element addText(java.lang.String) -> addText
    void add(org.dom4j.Node) -> add
    boolean remove(org.dom4j.Node) -> remove
    void add(org.dom4j.CDATA) -> add
    void add(org.dom4j.Comment) -> add
    void add(org.dom4j.Element) -> add
    void add(org.dom4j.Entity) -> add
    void add(org.dom4j.Namespace) -> add
    void add(org.dom4j.ProcessingInstruction) -> add
    void add(org.dom4j.Text) -> add
    boolean remove(org.dom4j.CDATA) -> remove
    boolean remove(org.dom4j.Comment) -> remove
    boolean remove(org.dom4j.Element) -> remove
    boolean remove(org.dom4j.Entity) -> remove
    boolean remove(org.dom4j.Namespace) -> remove
    boolean remove(org.dom4j.ProcessingInstruction) -> remove
    boolean remove(org.dom4j.Text) -> remove
    boolean hasMixedContent() -> hasMixedContent
    boolean isTextOnly() -> isTextOnly
    void setText(java.lang.String) -> setText
    java.lang.String getStringValue() -> getStringValue
    void normalize() -> normalize
    java.lang.String elementText(java.lang.String) -> elementText
    java.lang.String elementText(org.dom4j.QName) -> elementText
    java.lang.String elementTextTrim(java.lang.String) -> elementTextTrim
    java.lang.String elementTextTrim(org.dom4j.QName) -> elementTextTrim
    void appendAttributes(org.dom4j.Element) -> appendAttributes
    org.dom4j.Element createCopy() -> createCopy
    org.dom4j.Element createCopy(java.lang.String) -> createCopy
    org.dom4j.Element createCopy(org.dom4j.QName) -> createCopy
    org.dom4j.QName getQName(java.lang.String) -> getQName
    org.dom4j.Namespace getNamespaceForPrefix(java.lang.String) -> getNamespaceForPrefix
    org.dom4j.Namespace getNamespaceForURI(java.lang.String) -> getNamespaceForURI
    java.util.List getNamespacesForURI(java.lang.String) -> getNamespacesForURI
    java.util.List declaredNamespaces() -> declaredNamespaces
    java.util.List additionalNamespaces() -> additionalNamespaces
    java.util.List additionalNamespaces(java.lang.String) -> additionalNamespaces
    void ensureAttributesCapacity(int) -> ensureAttributesCapacity
    org.dom4j.Element createElement(java.lang.String) -> createElement
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    void addNode(org.dom4j.Node) -> addNode
    void addNode(int,org.dom4j.Node) -> addNode
    void addNewNode(org.dom4j.Node) -> addNewNode
    void addNewNode(int,org.dom4j.Node) -> addNewNode
    boolean removeNode(org.dom4j.Node) -> removeNode
    void childAdded(org.dom4j.Node) -> childAdded
    void childRemoved(org.dom4j.Node) -> childRemoved
    java.util.List attributeList() -> attributeList
    java.util.List attributeList(int) -> attributeList
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    java.util.List createAttributeList() -> createAttributeList
    java.util.List createAttributeList(int) -> createAttributeList
    java.util.Iterator createSingleIterator(java.lang.Object) -> createSingleIterator
org.dom4j.tree.AbstractEntity -> org.dom4j.tree.AbstractEntity:
    short getNodeType() -> getNodeType
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    java.lang.String toString() -> toString
    java.lang.String getStringValue() -> getStringValue
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
org.dom4j.tree.AbstractNode -> org.dom4j.tree.AbstractNode:
    java.lang.String[] NODE_TYPE_NAMES -> NODE_TYPE_NAMES
    org.dom4j.DocumentFactory DOCUMENT_FACTORY -> DOCUMENT_FACTORY
    short getNodeType() -> getNodeType
    java.lang.String getNodeTypeName() -> getNodeTypeName
    org.dom4j.Document getDocument() -> getDocument
    void setDocument(org.dom4j.Document) -> setDocument
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
    boolean hasContent() -> hasContent
    java.lang.String getPath() -> getPath
    java.lang.String getUniquePath() -> getUniquePath
    java.lang.Object clone() -> clone
    org.dom4j.Node detach() -> detach
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getText() -> getText
    java.lang.String getStringValue() -> getStringValue
    void setText(java.lang.String) -> setText
    void write(java.io.Writer) -> write
    java.lang.Object selectObject(java.lang.String) -> selectObject
    java.util.List selectNodes(java.lang.String) -> selectNodes
    java.util.List selectNodes(java.lang.String,java.lang.String) -> selectNodes
    java.util.List selectNodes(java.lang.String,java.lang.String,boolean) -> selectNodes
    org.dom4j.Node selectSingleNode(java.lang.String) -> selectSingleNode
    java.lang.String valueOf(java.lang.String) -> valueOf
    java.lang.Number numberValueOf(java.lang.String) -> numberValueOf
    boolean matches(java.lang.String) -> matches
    org.dom4j.XPath createXPath(java.lang.String) -> createXPath
    org.dom4j.NodeFilter createXPathFilter(java.lang.String) -> createXPathFilter
    org.dom4j.rule.Pattern createPattern(java.lang.String) -> createPattern
    org.dom4j.Node asXPathResult(org.dom4j.Element) -> asXPathResult
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.tree.AbstractProcessingInstruction -> org.dom4j.tree.AbstractProcessingInstruction:
    short getNodeType() -> getNodeType
    java.lang.String getPath(org.dom4j.Element) -> getPath
    java.lang.String getUniquePath(org.dom4j.Element) -> getUniquePath
    java.lang.String toString() -> toString
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
    void setValue(java.lang.String,java.lang.String) -> setValue
    void setValues(java.util.Map) -> setValues
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean removeValue(java.lang.String) -> removeValue
    java.lang.String toString(java.util.Map) -> toString
    java.util.Map parseValues(java.lang.String) -> parseValues
    java.lang.String getName(java.util.StringTokenizer) -> getName
    java.lang.String getValue(java.util.StringTokenizer) -> getValue
org.dom4j.tree.AbstractText -> org.dom4j.tree.AbstractText:
    short getNodeType() -> getNodeType
    java.lang.String toString() -> toString
    java.lang.String asXML() -> asXML
    void write(java.io.Writer) -> write
    void accept(org.dom4j.Visitor) -> accept
org.dom4j.tree.BackedList -> org.dom4j.tree.BackedList:
    java.util.List branchContent -> branchContent
    org.dom4j.tree.AbstractBranch branch -> branch
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    void addLocal(java.lang.Object) -> addLocal
    org.dom4j.Node asNode(java.lang.Object) -> asNode
org.dom4j.tree.BaseElement -> org.dom4j.tree.BaseElement:
    org.dom4j.QName qname -> qname
    org.dom4j.Branch parentBranch -> parentBranch
    java.util.List content -> content
    java.util.List attributes -> attributes
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    org.dom4j.Document getDocument() -> getDocument
    void setDocument(org.dom4j.Document) -> setDocument
    boolean supportsParent() -> supportsParent
    org.dom4j.QName getQName() -> getQName
    void setQName(org.dom4j.QName) -> setQName
    void clearContent() -> clearContent
    void setContent(java.util.List) -> setContent
    void setAttributes(java.util.List) -> setAttributes
    java.util.List contentList() -> contentList
    java.util.List attributeList() -> attributeList
    java.util.List attributeList(int) -> attributeList
    void setAttributeList(java.util.List) -> setAttributeList
org.dom4j.tree.ConcurrentReaderHashMap -> org.dom4j.tree.ConcurrentReaderHashMap:
    org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock barrierLock -> a
    java.lang.Object lastWrite -> b
    int DEFAULT_INITIAL_CAPACITY -> c
    org.dom4j.tree.ConcurrentReaderHashMap$Entry[] table -> d
    int count -> e
    int threshold -> f
    float loadFactor -> g
    java.util.Set keySet -> h
    java.util.Set entrySet -> i
    java.util.Collection values -> j
    void recordModification(java.lang.Object) -> a
    org.dom4j.tree.ConcurrentReaderHashMap$Entry[] getTableForReading() -> a
    int p2capacity(int) -> a
    int hash(java.lang.Object) -> b
    boolean eq(java.lang.Object,java.lang.Object) -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object sput(java.lang.Object,java.lang.Object,int) -> a
    void rehash() -> b
    java.lang.Object remove(java.lang.Object) -> remove
    boolean containsValue(java.lang.Object) -> containsValue
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.lang.Object clone() -> clone
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean findAndRemoveEntry(java.util.Map$Entry) -> a
org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock -> org.dom4j.tree.ConcurrentReaderHashMap$BarrierLock:
org.dom4j.tree.ConcurrentReaderHashMap$Entry -> org.dom4j.tree.ConcurrentReaderHashMap$Entry:
    int hash -> hash
    java.lang.Object key -> key
    org.dom4j.tree.ConcurrentReaderHashMap$Entry next -> next
    java.lang.Object value -> value
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.dom4j.tree.ConcurrentReaderHashMap$EntrySet -> org.dom4j.tree.a:
    org.dom4j.tree.ConcurrentReaderHashMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    void clear() -> clear
org.dom4j.tree.ConcurrentReaderHashMap$HashIterator -> org.dom4j.tree.ConcurrentReaderHashMap$HashIterator:
    org.dom4j.tree.ConcurrentReaderHashMap$Entry[] tab -> tab
    int index -> index
    org.dom4j.tree.ConcurrentReaderHashMap$Entry entry -> entry
    java.lang.Object currentKey -> currentKey
    java.lang.Object currentValue -> currentValue
    org.dom4j.tree.ConcurrentReaderHashMap$Entry lastReturned -> lastReturned
    org.dom4j.tree.ConcurrentReaderHashMap this$0 -> this$0
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
    boolean hasNext() -> hasNext
    java.lang.Object returnValueOfNext() -> returnValueOfNext
    java.lang.Object next() -> next
    void remove() -> remove
org.dom4j.tree.ConcurrentReaderHashMap$KeyIterator -> org.dom4j.tree.ConcurrentReaderHashMap$KeyIterator:
    org.dom4j.tree.ConcurrentReaderHashMap this$0 -> this$0
    java.lang.Object returnValueOfNext() -> returnValueOfNext
org.dom4j.tree.ConcurrentReaderHashMap$KeySet -> org.dom4j.tree.b:
    org.dom4j.tree.ConcurrentReaderHashMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
org.dom4j.tree.ConcurrentReaderHashMap$ValueIterator -> org.dom4j.tree.ConcurrentReaderHashMap$ValueIterator:
    org.dom4j.tree.ConcurrentReaderHashMap this$0 -> this$0
    java.lang.Object returnValueOfNext() -> returnValueOfNext
org.dom4j.tree.ConcurrentReaderHashMap$Values -> org.dom4j.tree.c:
    org.dom4j.tree.ConcurrentReaderHashMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
org.dom4j.tree.ContentListFacade -> org.dom4j.tree.ContentListFacade:
    java.util.List branchContent -> branchContent
    org.dom4j.tree.AbstractBranch branch -> branch
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    boolean remove(java.lang.Object) -> remove
    java.lang.Object remove(int) -> remove
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void clear() -> clear
    boolean removeAll(java.util.Collection) -> removeAll
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    org.dom4j.Node asNode(java.lang.Object) -> asNode
    java.util.List getBackingList() -> getBackingList
org.dom4j.tree.DefaultAttribute -> org.dom4j.tree.DefaultAttribute:
    org.dom4j.Element parent -> parent
    void setValue(java.lang.String) -> setValue
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
org.dom4j.tree.DefaultCDATA -> org.dom4j.tree.DefaultCDATA:
    org.dom4j.Element parent -> parent
    void setText(java.lang.String) -> setText
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
org.dom4j.tree.DefaultComment -> org.dom4j.tree.DefaultComment:
    org.dom4j.Element parent -> parent
    void setText(java.lang.String) -> setText
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
org.dom4j.tree.DefaultDocument -> org.dom4j.tree.DefaultDocument:
    java.util.List EMPTY_LIST -> EMPTY_LIST
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    java.lang.String name -> name
    org.dom4j.Element rootElement -> rootElement
    java.util.List content -> content
    org.dom4j.DocumentType docType -> docType
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.dom4j.Element getRootElement() -> getRootElement
    org.dom4j.DocumentType getDocType() -> getDocType
    void setDocType(org.dom4j.DocumentType) -> setDocType
    org.dom4j.Document addDocType(java.lang.String,java.lang.String,java.lang.String) -> addDocType
    java.lang.String getXMLEncoding() -> getXMLEncoding
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    java.lang.Object clone() -> clone
    java.util.List processingInstructions() -> processingInstructions
    java.util.List processingInstructions(java.lang.String) -> processingInstructions
    org.dom4j.ProcessingInstruction processingInstruction(java.lang.String) -> processingInstruction
    boolean removeProcessingInstruction(java.lang.String) -> removeProcessingInstruction
    void setContent(java.util.List) -> setContent
    void clearContent() -> clearContent
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    java.util.List contentList() -> contentList
    void addNode(org.dom4j.Node) -> addNode
    void addNode(int,org.dom4j.Node) -> addNode
    boolean removeNode(org.dom4j.Node) -> removeNode
    void rootElementAdded(org.dom4j.Element) -> rootElementAdded
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
org.dom4j.tree.DefaultDocumentType -> org.dom4j.tree.DefaultDocumentType:
    java.lang.String elementName -> elementName
    java.lang.String publicID -> publicID
    java.lang.String systemID -> systemID
    java.util.List internalDeclarations -> internalDeclarations
    java.util.List externalDeclarations -> externalDeclarations
    java.lang.String getElementName() -> getElementName
    void setElementName(java.lang.String) -> setElementName
    java.lang.String getPublicID() -> getPublicID
    void setPublicID(java.lang.String) -> setPublicID
    java.lang.String getSystemID() -> getSystemID
    void setSystemID(java.lang.String) -> setSystemID
    java.util.List getInternalDeclarations() -> getInternalDeclarations
    void setInternalDeclarations(java.util.List) -> setInternalDeclarations
    java.util.List getExternalDeclarations() -> getExternalDeclarations
    void setExternalDeclarations(java.util.List) -> setExternalDeclarations
org.dom4j.tree.DefaultElement -> org.dom4j.tree.DefaultElement:
    org.dom4j.DocumentFactory DOCUMENT_FACTORY -> DOCUMENT_FACTORY
    org.dom4j.QName qname -> qname
    org.dom4j.Branch parentBranch -> parentBranch
    java.lang.Object content -> content
    java.lang.Object attributes -> attributes
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    org.dom4j.Document getDocument() -> getDocument
    void setDocument(org.dom4j.Document) -> setDocument
    boolean supportsParent() -> supportsParent
    org.dom4j.QName getQName() -> getQName
    void setQName(org.dom4j.QName) -> setQName
    java.lang.String getText() -> getText
    java.lang.String getStringValue() -> getStringValue
    java.lang.Object clone() -> clone
    org.dom4j.Namespace getNamespaceForPrefix(java.lang.String) -> getNamespaceForPrefix
    org.dom4j.Namespace getNamespaceForURI(java.lang.String) -> getNamespaceForURI
    java.util.List declaredNamespaces() -> declaredNamespaces
    java.util.List additionalNamespaces() -> additionalNamespaces
    java.util.List additionalNamespaces(java.lang.String) -> additionalNamespaces
    java.util.List processingInstructions() -> processingInstructions
    java.util.List processingInstructions(java.lang.String) -> processingInstructions
    org.dom4j.ProcessingInstruction processingInstruction(java.lang.String) -> processingInstruction
    boolean removeProcessingInstruction(java.lang.String) -> removeProcessingInstruction
    org.dom4j.Element element(java.lang.String) -> element
    org.dom4j.Element element(org.dom4j.QName) -> element
    org.dom4j.Element element(java.lang.String,org.dom4j.Namespace) -> element
    void setContent(java.util.List) -> setContent
    void clearContent() -> clearContent
    org.dom4j.Node node(int) -> node
    int indexOf(org.dom4j.Node) -> indexOf
    int nodeCount() -> nodeCount
    java.util.Iterator nodeIterator() -> nodeIterator
    java.util.List attributes() -> attributes
    void setAttributes(java.util.List) -> setAttributes
    java.util.Iterator attributeIterator() -> attributeIterator
    org.dom4j.Attribute attribute(int) -> attribute
    int attributeCount() -> attributeCount
    org.dom4j.Attribute attribute(java.lang.String) -> attribute
    org.dom4j.Attribute attribute(org.dom4j.QName) -> attribute
    org.dom4j.Attribute attribute(java.lang.String,org.dom4j.Namespace) -> attribute
    void add(org.dom4j.Attribute) -> add
    boolean remove(org.dom4j.Attribute) -> remove
    void addNewNode(org.dom4j.Node) -> addNewNode
    boolean removeNode(org.dom4j.Node) -> removeNode
    java.util.List contentList() -> contentList
    java.util.List attributeList() -> attributeList
    java.util.List attributeList(int) -> attributeList
    void setAttributeList(java.util.List) -> setAttributeList
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
org.dom4j.tree.DefaultEntity -> org.dom4j.tree.DefaultEntity:
    org.dom4j.Element parent -> parent
    void setName(java.lang.String) -> setName
    void setText(java.lang.String) -> setText
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
org.dom4j.tree.DefaultNamespace -> org.dom4j.tree.DefaultNamespace:
    org.dom4j.Element parent -> parent
    int createHashCode() -> createHashCode
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
org.dom4j.tree.DefaultProcessingInstruction -> org.dom4j.tree.DefaultProcessingInstruction:
    org.dom4j.Element parent -> parent
    void setTarget(java.lang.String) -> setTarget
    void setText(java.lang.String) -> setText
    void setValues(java.util.Map) -> setValues
    void setValue(java.lang.String,java.lang.String) -> setValue
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
org.dom4j.tree.DefaultText -> org.dom4j.tree.DefaultText:
    org.dom4j.Element parent -> parent
    void setText(java.lang.String) -> setText
    org.dom4j.Element getParent() -> getParent
    void setParent(org.dom4j.Element) -> setParent
    boolean supportsParent() -> supportsParent
    boolean isReadOnly() -> isReadOnly
org.dom4j.tree.ElementIterator -> org.dom4j.tree.ElementIterator:
    boolean matches(java.lang.Object) -> matches
org.dom4j.tree.ElementNameIterator -> org.dom4j.tree.ElementNameIterator:
    java.lang.String name -> name
    boolean matches(java.lang.Object) -> matches
org.dom4j.tree.ElementQNameIterator -> org.dom4j.tree.ElementQNameIterator:
    org.dom4j.QName qName -> qName
    boolean matches(java.lang.Object) -> matches
org.dom4j.tree.FilterIterator -> org.dom4j.tree.FilterIterator:
    java.util.Iterator proxy -> proxy
    java.lang.Object next -> next
    boolean first -> first
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    boolean matches(java.lang.Object) -> matches
    java.lang.Object findNext() -> findNext
org.dom4j.tree.FlyweightAttribute -> org.dom4j.tree.FlyweightAttribute:
    org.dom4j.QName qname -> qname
    java.lang.String value -> value
    java.lang.String getValue() -> getValue
    org.dom4j.QName getQName() -> getQName
org.dom4j.tree.FlyweightCDATA -> org.dom4j.tree.FlyweightCDATA:
    java.lang.String text -> text
    java.lang.String getText() -> getText
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.tree.FlyweightComment -> org.dom4j.tree.FlyweightComment:
    java.lang.String text -> text
    java.lang.String getText() -> getText
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.tree.FlyweightEntity -> org.dom4j.tree.FlyweightEntity:
    java.lang.String name -> name
    java.lang.String text -> text
    java.lang.String getName() -> getName
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.tree.FlyweightProcessingInstruction -> org.dom4j.tree.FlyweightProcessingInstruction:
    java.lang.String target -> target
    java.lang.String text -> text
    java.util.Map values -> values
    java.lang.String getTarget() -> getTarget
    void setTarget(java.lang.String) -> setTarget
    java.lang.String getText() -> getText
    java.lang.String getValue(java.lang.String) -> getValue
    java.util.Map getValues() -> getValues
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.tree.FlyweightText -> org.dom4j.tree.FlyweightText:
    java.lang.String text -> text
    java.lang.String getText() -> getText
    org.dom4j.Node createXPathResult(org.dom4j.Element) -> createXPathResult
org.dom4j.tree.NamespaceCache -> org.dom4j.tree.NamespaceCache:
    java.lang.String CONCURRENTREADERHASHMAP_CLASS -> CONCURRENTREADERHASHMAP_CLASS
    java.util.Map cache -> cache
    java.util.Map noPrefixCache -> noPrefixCache
    org.dom4j.Namespace get(java.lang.String,java.lang.String) -> get
    org.dom4j.Namespace get(java.lang.String) -> get
    java.util.Map getURICache(java.lang.String) -> getURICache
    org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
org.dom4j.tree.NamespaceStack -> org.dom4j.tree.NamespaceStack:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    java.util.ArrayList namespaceStack -> namespaceStack
    java.util.ArrayList namespaceCacheList -> namespaceCacheList
    java.util.Map currentNamespaceCache -> currentNamespaceCache
    java.util.Map rootNamespaceCache -> rootNamespaceCache
    org.dom4j.Namespace defaultNamespace -> defaultNamespace
    void push(org.dom4j.Namespace) -> push
    org.dom4j.Namespace pop() -> pop
    int size() -> size
    void clear() -> clear
    org.dom4j.Namespace getNamespace(int) -> getNamespace
    org.dom4j.Namespace getNamespaceForPrefix(java.lang.String) -> getNamespaceForPrefix
    java.lang.String getURI(java.lang.String) -> getURI
    boolean contains(org.dom4j.Namespace) -> contains
    org.dom4j.QName getQName(java.lang.String,java.lang.String,java.lang.String) -> getQName
    org.dom4j.QName getAttributeQName(java.lang.String,java.lang.String,java.lang.String) -> getAttributeQName
    void push(java.lang.String,java.lang.String) -> push
    org.dom4j.Namespace addNamespace(java.lang.String,java.lang.String) -> addNamespace
    org.dom4j.Namespace pop(java.lang.String) -> pop
    java.lang.String toString() -> toString
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.Namespace getDefaultNamespace() -> getDefaultNamespace
    org.dom4j.QName pushQName(java.lang.String,java.lang.String,org.dom4j.Namespace,java.lang.String) -> pushQName
    org.dom4j.QName createQName(java.lang.String,java.lang.String,org.dom4j.Namespace) -> createQName
    org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
    org.dom4j.Namespace findDefaultNamespace() -> findDefaultNamespace
    org.dom4j.Namespace remove(int) -> remove
    java.util.Map getNamespaceCache() -> getNamespaceCache
org.dom4j.tree.QNameCache -> org.dom4j.tree.QNameCache:
    java.util.Map noNamespaceCache -> noNamespaceCache
    java.util.Map namespaceCache -> namespaceCache
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    java.util.List getQNames() -> getQNames
    org.dom4j.QName get(java.lang.String) -> get
    org.dom4j.QName get(java.lang.String,org.dom4j.Namespace) -> get
    org.dom4j.QName get(java.lang.String,org.dom4j.Namespace,java.lang.String) -> get
    org.dom4j.QName get(java.lang.String,java.lang.String) -> get
    org.dom4j.QName intern(org.dom4j.QName) -> intern
    java.util.Map getNamespaceCache(org.dom4j.Namespace) -> getNamespaceCache
    java.util.Map createMap() -> createMap
    org.dom4j.QName createQName(java.lang.String) -> createQName
    org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace) -> createQName
    org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace,java.lang.String) -> createQName
org.dom4j.tree.SingleIterator -> org.dom4j.tree.SingleIterator:
    boolean first -> first
    java.lang.Object object -> object
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.dom4j.util.AttributeHelper -> org.dom4j.util.AttributeHelper:
    boolean booleanValue(org.dom4j.Element,java.lang.String) -> booleanValue
    boolean booleanValue(org.dom4j.Element,org.dom4j.QName) -> booleanValue
    boolean booleanValue(org.dom4j.Attribute) -> booleanValue
org.dom4j.util.IndexedDocumentFactory -> org.dom4j.util.IndexedDocumentFactory:
    org.dom4j.util.IndexedDocumentFactory singleton -> singleton
    org.dom4j.DocumentFactory getInstance() -> getInstance
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Element createElement(org.dom4j.QName,int) -> createElement
org.dom4j.util.IndexedElement -> org.dom4j.util.IndexedElement:
    java.util.Map elementIndex -> elementIndex
    java.util.Map attributeIndex -> attributeIndex
    org.dom4j.Attribute attribute(java.lang.String) -> attribute
    org.dom4j.Attribute attribute(org.dom4j.QName) -> attribute
    org.dom4j.Element element(java.lang.String) -> element
    org.dom4j.Element element(org.dom4j.QName) -> element
    java.util.List elements(java.lang.String) -> elements
    java.util.List elements(org.dom4j.QName) -> elements
    org.dom4j.Element asElement(java.lang.Object) -> asElement
    java.util.List asElementList(java.lang.Object) -> asElementList
    java.util.Iterator asElementIterator(java.lang.Object) -> asElementIterator
    void addNode(org.dom4j.Node) -> addNode
    boolean removeNode(org.dom4j.Node) -> removeNode
    java.util.Map attributeIndex() -> attributeIndex
    java.util.Map elementIndex() -> elementIndex
    java.util.Map createAttributeIndex() -> createAttributeIndex
    java.util.Map createElementIndex() -> createElementIndex
    void addToElementIndex(org.dom4j.Element) -> addToElementIndex
    void addToElementIndex(java.lang.Object,org.dom4j.Element) -> addToElementIndex
    void removeFromElementIndex(org.dom4j.Element) -> removeFromElementIndex
    void removeFromElementIndex(java.lang.Object,org.dom4j.Element) -> removeFromElementIndex
    void addToAttributeIndex(org.dom4j.Attribute) -> addToAttributeIndex
    void addToAttributeIndex(java.lang.Object,org.dom4j.Attribute) -> addToAttributeIndex
    void removeFromAttributeIndex(org.dom4j.Attribute) -> removeFromAttributeIndex
    void removeFromAttributeIndex(java.lang.Object,org.dom4j.Attribute) -> removeFromAttributeIndex
    java.util.Map createIndex() -> createIndex
    java.util.List createList() -> createList
org.dom4j.util.NodeComparator -> org.dom4j.util.NodeComparator:
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compare(org.dom4j.Node,org.dom4j.Node) -> compare
    int compare(org.dom4j.Document,org.dom4j.Document) -> compare
    int compare(org.dom4j.Element,org.dom4j.Element) -> compare
    int compare(org.dom4j.Attribute,org.dom4j.Attribute) -> compare
    int compare(org.dom4j.QName,org.dom4j.QName) -> compare
    int compare(org.dom4j.Namespace,org.dom4j.Namespace) -> compare
    int compare(org.dom4j.CharacterData,org.dom4j.CharacterData) -> compare
    int compare(org.dom4j.DocumentType,org.dom4j.DocumentType) -> compare
    int compare(org.dom4j.Entity,org.dom4j.Entity) -> compare
    int compare(org.dom4j.ProcessingInstruction,org.dom4j.ProcessingInstruction) -> compare
    int compareContent(org.dom4j.Branch,org.dom4j.Branch) -> compareContent
    int compare(java.lang.String,java.lang.String) -> compare
org.dom4j.util.NonLazyDocumentFactory -> org.dom4j.util.NonLazyDocumentFactory:
    org.dom4j.util.NonLazyDocumentFactory singleton -> singleton
    org.dom4j.DocumentFactory getInstance() -> getInstance
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
org.dom4j.util.NonLazyElement -> org.dom4j.util.NonLazyElement:
org.dom4j.util.PerThreadSingleton -> org.dom4j.util.PerThreadSingleton:
    java.lang.String singletonClassName -> singletonClassName
    java.lang.ThreadLocal perThreadCache -> perThreadCache
    void reset() -> reset
    java.lang.Object instance() -> instance
    void setSingletonClassName(java.lang.String) -> setSingletonClassName
org.dom4j.util.ProxyDocumentFactory -> org.dom4j.util.ProxyDocumentFactory:
    org.dom4j.DocumentFactory proxy -> proxy
    org.dom4j.Document createDocument() -> createDocument
    org.dom4j.Document createDocument(org.dom4j.Element) -> createDocument
    org.dom4j.DocumentType createDocType(java.lang.String,java.lang.String,java.lang.String) -> createDocType
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Element createElement(java.lang.String) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
    org.dom4j.Attribute createAttribute(org.dom4j.Element,java.lang.String,java.lang.String) -> createAttribute
    org.dom4j.CDATA createCDATA(java.lang.String) -> createCDATA
    org.dom4j.Comment createComment(java.lang.String) -> createComment
    org.dom4j.Text createText(java.lang.String) -> createText
    org.dom4j.Entity createEntity(java.lang.String,java.lang.String) -> createEntity
    org.dom4j.Namespace createNamespace(java.lang.String,java.lang.String) -> createNamespace
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.lang.String) -> createProcessingInstruction
    org.dom4j.ProcessingInstruction createProcessingInstruction(java.lang.String,java.util.Map) -> createProcessingInstruction
    org.dom4j.QName createQName(java.lang.String,org.dom4j.Namespace) -> createQName
    org.dom4j.QName createQName(java.lang.String) -> createQName
    org.dom4j.QName createQName(java.lang.String,java.lang.String,java.lang.String) -> createQName
    org.dom4j.QName createQName(java.lang.String,java.lang.String) -> createQName
    org.dom4j.XPath createXPath(java.lang.String) -> createXPath
    org.dom4j.XPath createXPath(java.lang.String,org.jaxen.VariableContext) -> createXPath
    org.dom4j.NodeFilter createXPathFilter(java.lang.String,org.jaxen.VariableContext) -> createXPathFilter
    org.dom4j.NodeFilter createXPathFilter(java.lang.String) -> createXPathFilter
    org.dom4j.rule.Pattern createPattern(java.lang.String) -> createPattern
    org.dom4j.DocumentFactory getProxy() -> getProxy
    void setProxy(org.dom4j.DocumentFactory) -> setProxy
org.dom4j.util.SimpleSingleton -> org.dom4j.util.SimpleSingleton:
    java.lang.String singletonClassName -> singletonClassName
    java.lang.Object singletonInstance -> singletonInstance
    java.lang.Object instance() -> instance
    void reset() -> reset
    void setSingletonClassName(java.lang.String) -> setSingletonClassName
org.dom4j.util.SingletonStrategy -> org.dom4j.util.SingletonStrategy:
    java.lang.Object instance() -> instance
    void reset() -> reset
    void setSingletonClassName(java.lang.String) -> setSingletonClassName
org.dom4j.util.UserDataAttribute -> org.dom4j.util.UserDataAttribute:
    java.lang.Object data -> data
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
org.dom4j.util.UserDataDocumentFactory -> org.dom4j.util.UserDataDocumentFactory:
    org.dom4j.util.UserDataDocumentFactory singleton -> singleton
    org.dom4j.DocumentFactory getInstance() -> getInstance
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
    org.dom4j.Attribute createAttribute(org.dom4j.Element,org.dom4j.QName,java.lang.String) -> createAttribute
org.dom4j.util.UserDataElement -> org.dom4j.util.UserDataElement:
    java.lang.Object data -> data
    java.lang.Object getData() -> getData
    void setData(java.lang.Object) -> setData
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    java.lang.Object getCopyOfUserData() -> getCopyOfUserData
    org.dom4j.Element createElement(java.lang.String) -> createElement
    org.dom4j.Element createElement(org.dom4j.QName) -> createElement
org.dom4j.util.XMLErrorHandler -> org.dom4j.util.XMLErrorHandler:
    org.dom4j.QName ERROR_QNAME -> ERROR_QNAME
    org.dom4j.QName FATALERROR_QNAME -> FATALERROR_QNAME
    org.dom4j.QName WARNING_QNAME -> WARNING_QNAME
    org.dom4j.Element errors -> errors
    org.dom4j.QName errorQName -> errorQName
    org.dom4j.QName fatalErrorQName -> fatalErrorQName
    org.dom4j.QName warningQName -> warningQName
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    void warning(org.xml.sax.SAXParseException) -> warning
    org.dom4j.Element getErrors() -> getErrors
    void setErrors(org.dom4j.Element) -> setErrors
    org.dom4j.QName getErrorQName() -> getErrorQName
    void setErrorQName(org.dom4j.QName) -> setErrorQName
    org.dom4j.QName getFatalErrorQName() -> getFatalErrorQName
    void setFatalErrorQName(org.dom4j.QName) -> setFatalErrorQName
    org.dom4j.QName getWarningQName() -> getWarningQName
    void setWarningQName(org.dom4j.QName) -> setWarningQName
    void addException(org.dom4j.Element,org.xml.sax.SAXParseException) -> addException
org.dom4j.xpath.DefaultNamespaceContext -> org.dom4j.xpath.DefaultNamespaceContext:
    org.dom4j.Element element -> element
    org.dom4j.xpath.DefaultNamespaceContext create(java.lang.Object) -> create
    java.lang.String translateNamespacePrefixToUri(java.lang.String) -> translateNamespacePrefixToUri
org.dom4j.xpath.DefaultXPath -> org.dom4j.xpath.DefaultXPath:
    java.lang.String text -> text
    org.jaxen.XPath xpath -> xpath
    org.jaxen.NamespaceContext namespaceContext -> namespaceContext
    java.lang.String toString() -> toString
    java.lang.String getText() -> getText
    org.jaxen.FunctionContext getFunctionContext() -> getFunctionContext
    void setFunctionContext(org.jaxen.FunctionContext) -> setFunctionContext
    org.jaxen.NamespaceContext getNamespaceContext() -> getNamespaceContext
    void setNamespaceURIs(java.util.Map) -> setNamespaceURIs
    void setNamespaceContext(org.jaxen.NamespaceContext) -> setNamespaceContext
    org.jaxen.VariableContext getVariableContext() -> getVariableContext
    void setVariableContext(org.jaxen.VariableContext) -> setVariableContext
    java.lang.Object evaluate(java.lang.Object) -> evaluate
    java.lang.Object selectObject(java.lang.Object) -> selectObject
    java.util.List selectNodes(java.lang.Object) -> selectNodes
    java.util.List selectNodes(java.lang.Object,org.dom4j.XPath) -> selectNodes
    java.util.List selectNodes(java.lang.Object,org.dom4j.XPath,boolean) -> selectNodes
    org.dom4j.Node selectSingleNode(java.lang.Object) -> selectSingleNode
    java.lang.String valueOf(java.lang.Object) -> valueOf
    java.lang.Number numberValueOf(java.lang.Object) -> numberValueOf
    boolean booleanValueOf(java.lang.Object) -> booleanValueOf
    void sort(java.util.List) -> sort
    void sort(java.util.List,boolean) -> sort
    boolean matches(org.dom4j.Node) -> matches
    void sort(java.util.List,java.util.Map) -> sort
    void removeDuplicates(java.util.List,java.util.Map) -> removeDuplicates
    java.lang.Object getCompareValue(org.dom4j.Node) -> getCompareValue
    org.jaxen.XPath parse(java.lang.String) -> parse
    void setNSContext(java.lang.Object) -> setNSContext
    void handleJaxenException(org.jaxen.JaxenException) -> handleJaxenException
org.dom4j.xpath.DefaultXPath$1 -> org.dom4j.xpath.a:
    java.util.Map val$sortValues -> a
    org.dom4j.xpath.DefaultXPath this$0 -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
org.dom4j.xpath.XPathPattern -> org.dom4j.xpath.XPathPattern:
    java.lang.String text -> text
    org.jaxen.pattern.Pattern pattern -> pattern
    org.jaxen.Context context -> context
    boolean matches(org.dom4j.Node) -> matches
    java.lang.String getText() -> getText
    double getPriority() -> getPriority
    org.dom4j.rule.Pattern[] getUnionPatterns() -> getUnionPatterns
    short getMatchType() -> getMatchType
    java.lang.String getMatchesNodeName() -> getMatchesNodeName
    void setVariableContext(org.jaxen.VariableContext) -> setVariableContext
    java.lang.String toString() -> toString
    org.jaxen.ContextSupport getContextSupport() -> getContextSupport
    void handleJaxenException(org.jaxen.JaxenException) -> handleJaxenException
org.dom4j.xpp.ProxyXmlStartTag -> org.dom4j.xpp.ProxyXmlStartTag:
    org.dom4j.Element element -> element
    org.dom4j.DocumentFactory factory -> factory
    void resetStartTag() -> resetStartTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespaceUri(int) -> getAttributeNamespaceUri
    java.lang.String getAttributeLocalName(int) -> getAttributeLocalName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeRawName(int) -> getAttributeRawName
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValueFromRawName(java.lang.String) -> getAttributeValueFromRawName
    java.lang.String getAttributeValueFromName(java.lang.String,java.lang.String) -> getAttributeValueFromName
    boolean isAttributeNamespaceDeclaration(int) -> isAttributeNamespaceDeclaration
    void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addAttribute
    void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> addAttribute
    void ensureAttributesCapacity(int) -> ensureAttributesCapacity
    void removeAtttributes() -> removeAtttributes
    void removeAttributes() -> removeAttributes
    java.lang.String getLocalName() -> getLocalName
    java.lang.String getNamespaceUri() -> getNamespaceUri
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getRawName() -> getRawName
    void modifyTag(java.lang.String,java.lang.String,java.lang.String) -> modifyTag
    void resetTag() -> resetTag
    boolean removeAttributeByName(java.lang.String,java.lang.String) -> removeAttributeByName
    boolean removeAttributeByRawName(java.lang.String) -> removeAttributeByRawName
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.Element getElement() -> getElement
org.sqldroid.DebugPrinter -> org.sqldroid.DebugPrinter:
    int getLineNumber() -> getLineNumber
    java.lang.String getFileName() -> getFileName
org.sqldroid.SQLDroidBlob -> org.sqldroid.SQLDroidBlob:
    byte[] b -> b
    java.io.InputStream getBinaryStream() -> getBinaryStream
    byte[] getBytes(long,int) -> getBytes
    long length() -> length
    long position(java.sql.Blob,long) -> position
    long position(byte[],long) -> position
    java.io.OutputStream setBinaryStream(long) -> setBinaryStream
    int setBytes(long,byte[]) -> setBytes
    int setBytes(long,byte[],int,int) -> setBytes
    void truncate(long) -> truncate
    void free() -> free
    java.io.InputStream getBinaryStream(long,long) -> getBinaryStream
    java.lang.String toString() -> toString
org.sqldroid.SQLDroidConnection -> org.sqldroid.SQLDroidConnection:
    org.sqldroid.SQLiteDatabase sqlitedb -> sqlitedb
    boolean autoCommit -> autoCommit
    int sqlThrowable -> sqlThrowable
    org.sqldroid.SQLiteDatabase getDb() -> getDb
    void clearWarnings() -> clearWarnings
    java.sql.SQLException chainException(android.database.SQLException) -> chainException
    void close() -> close
    void commit() -> commit
    java.sql.Statement createStatement() -> createStatement
    java.sql.Statement createStatement(int,int) -> createStatement
    java.sql.Statement createStatement(int,int,int) -> createStatement
    boolean getAutoCommit() -> getAutoCommit
    java.lang.String getCatalog() -> getCatalog
    int getHoldability() -> getHoldability
    java.sql.DatabaseMetaData getMetaData() -> getMetaData
    int getTransactionIsolation() -> getTransactionIsolation
    java.util.Map getTypeMap() -> getTypeMap
    java.sql.SQLWarning getWarnings() -> getWarnings
    boolean isClosed() -> isClosed
    boolean isReadOnly() -> isReadOnly
    java.lang.String nativeSQL(java.lang.String) -> nativeSQL
    java.sql.CallableStatement prepareCall(java.lang.String) -> prepareCall
    java.sql.CallableStatement prepareCall(java.lang.String,int,int) -> prepareCall
    java.sql.CallableStatement prepareCall(java.lang.String,int,int,int) -> prepareCall
    java.sql.PreparedStatement prepareStatement(java.lang.String) -> prepareStatement
    java.sql.PreparedStatement prepareStatement(java.lang.String,int) -> prepareStatement
    java.sql.PreparedStatement prepareStatement(java.lang.String,int[]) -> prepareStatement
    java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[]) -> prepareStatement
    java.sql.PreparedStatement prepareStatement(java.lang.String,int,int) -> prepareStatement
    java.sql.PreparedStatement prepareStatement(java.lang.String,int,int,int) -> prepareStatement
    void releaseSavepoint(java.sql.Savepoint) -> releaseSavepoint
    void rollback() -> rollback
    void rollback(java.sql.Savepoint) -> rollback
    void setAutoCommit(boolean) -> setAutoCommit
    void setCatalog(java.lang.String) -> setCatalog
    void setHoldability(int) -> setHoldability
    void setReadOnly(boolean) -> setReadOnly
    java.sql.Savepoint setSavepoint() -> setSavepoint
    java.sql.Savepoint setSavepoint(java.lang.String) -> setSavepoint
    void setTransactionIsolation(int) -> setTransactionIsolation
    void setTypeMap(java.util.Map) -> setTypeMap
    void finalize() -> finalize
    boolean isWrapperFor(java.lang.Class) -> isWrapperFor
    java.lang.Object unwrap(java.lang.Class) -> unwrap
    java.sql.Array createArrayOf(java.lang.String,java.lang.Object[]) -> createArrayOf
    java.sql.Blob createBlob() -> createBlob
    java.sql.Clob createClob() -> createClob
    java.sql.NClob createNClob() -> createNClob
    java.sql.SQLXML createSQLXML() -> createSQLXML
    java.sql.Struct createStruct(java.lang.String,java.lang.Object[]) -> createStruct
    java.util.Properties getClientInfo() -> getClientInfo
    java.lang.String getClientInfo(java.lang.String) -> getClientInfo
    boolean isValid(int) -> isValid
    void setClientInfo(java.util.Properties) -> setClientInfo
    void setClientInfo(java.lang.String,java.lang.String) -> setClientInfo
    void setNetworkTimeout(java.util.concurrent.Executor,int) -> setNetworkTimeout
    int getNetworkTimeout() -> getNetworkTimeout
    void abort(java.util.concurrent.Executor) -> abort
    java.lang.String getSchema() -> getSchema
    void setSchema(java.lang.String) -> setSchema
org.sqldroid.SQLDroidDatabaseMetaData -> org.sqldroid.SQLDroidDatabaseMetaData:
    org.sqldroid.SQLDroidConnection con -> con
    boolean allProceduresAreCallable() -> allProceduresAreCallable
    boolean allTablesAreSelectable() -> allTablesAreSelectable
    boolean dataDefinitionCausesTransactionCommit() -> dataDefinitionCausesTransactionCommit
    boolean dataDefinitionIgnoredInTransactions() -> dataDefinitionIgnoredInTransactions
    boolean deletesAreDetected(int) -> deletesAreDetected
    boolean doesMaxRowSizeIncludeBlobs() -> doesMaxRowSizeIncludeBlobs
    java.sql.ResultSet getAttributes(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getAttributes
    java.sql.ResultSet getBestRowIdentifier(java.lang.String,java.lang.String,java.lang.String,int,boolean) -> getBestRowIdentifier
    java.lang.String getCatalogSeparator() -> getCatalogSeparator
    java.lang.String getCatalogTerm() -> getCatalogTerm
    java.sql.ResultSet getCatalogs() -> getCatalogs
    java.sql.ResultSet getColumnPrivileges(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getColumnPrivileges
    java.sql.ResultSet getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getColumns
    java.sql.Connection getConnection() -> getConnection
    java.sql.ResultSet getCrossReference(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getCrossReference
    int getDatabaseMajorVersion() -> getDatabaseMajorVersion
    int getDatabaseMinorVersion() -> getDatabaseMinorVersion
    java.lang.String getDatabaseProductName() -> getDatabaseProductName
    java.lang.String getDatabaseProductVersion() -> getDatabaseProductVersion
    int getDefaultTransactionIsolation() -> getDefaultTransactionIsolation
    int getDriverMajorVersion() -> getDriverMajorVersion
    int getDriverMinorVersion() -> getDriverMinorVersion
    java.lang.String getDriverName() -> getDriverName
    java.lang.String getDriverVersion() -> getDriverVersion
    java.sql.ResultSet getExportedKeys(java.lang.String,java.lang.String,java.lang.String) -> getExportedKeys
    java.lang.String getExtraNameCharacters() -> getExtraNameCharacters
    java.lang.String getIdentifierQuoteString() -> getIdentifierQuoteString
    java.sql.ResultSet getImportedKeys(java.lang.String,java.lang.String,java.lang.String) -> getImportedKeys
    java.sql.ResultSet getIndexInfo(java.lang.String,java.lang.String,java.lang.String,boolean,boolean) -> getIndexInfo
    int getJDBCMajorVersion() -> getJDBCMajorVersion
    int getJDBCMinorVersion() -> getJDBCMinorVersion
    int getMaxBinaryLiteralLength() -> getMaxBinaryLiteralLength
    int getMaxCatalogNameLength() -> getMaxCatalogNameLength
    int getMaxCharLiteralLength() -> getMaxCharLiteralLength
    int getMaxColumnNameLength() -> getMaxColumnNameLength
    int getMaxColumnsInGroupBy() -> getMaxColumnsInGroupBy
    int getMaxColumnsInIndex() -> getMaxColumnsInIndex
    int getMaxColumnsInOrderBy() -> getMaxColumnsInOrderBy
    int getMaxColumnsInSelect() -> getMaxColumnsInSelect
    int getMaxColumnsInTable() -> getMaxColumnsInTable
    int getMaxConnections() -> getMaxConnections
    int getMaxCursorNameLength() -> getMaxCursorNameLength
    int getMaxIndexLength() -> getMaxIndexLength
    int getMaxProcedureNameLength() -> getMaxProcedureNameLength
    int getMaxRowSize() -> getMaxRowSize
    int getMaxSchemaNameLength() -> getMaxSchemaNameLength
    int getMaxStatementLength() -> getMaxStatementLength
    int getMaxStatements() -> getMaxStatements
    int getMaxTableNameLength() -> getMaxTableNameLength
    int getMaxTablesInSelect() -> getMaxTablesInSelect
    int getMaxUserNameLength() -> getMaxUserNameLength
    java.lang.String getNumericFunctions() -> getNumericFunctions
    java.sql.ResultSet getPrimaryKeys(java.lang.String,java.lang.String,java.lang.String) -> getPrimaryKeys
    java.sql.ResultSet getProcedureColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getProcedureColumns
    java.lang.String getProcedureTerm() -> getProcedureTerm
    java.sql.ResultSet getProcedures(java.lang.String,java.lang.String,java.lang.String) -> getProcedures
    int getResultSetHoldability() -> getResultSetHoldability
    java.lang.String getSQLKeywords() -> getSQLKeywords
    int getSQLStateType() -> getSQLStateType
    java.lang.String getSchemaTerm() -> getSchemaTerm
    java.sql.ResultSet getSchemas() -> getSchemas
    java.lang.String getSearchStringEscape() -> getSearchStringEscape
    java.lang.String getStringFunctions() -> getStringFunctions
    java.sql.ResultSet getSuperTables(java.lang.String,java.lang.String,java.lang.String) -> getSuperTables
    java.sql.ResultSet getSuperTypes(java.lang.String,java.lang.String,java.lang.String) -> getSuperTypes
    java.lang.String getSystemFunctions() -> getSystemFunctions
    java.sql.ResultSet getTablePrivileges(java.lang.String,java.lang.String,java.lang.String) -> getTablePrivileges
    java.sql.ResultSet getTableTypes() -> getTableTypes
    java.sql.ResultSet getTables(java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> getTables
    java.lang.String getTimeDateFunctions() -> getTimeDateFunctions
    java.sql.ResultSet getTypeInfo() -> getTypeInfo
    java.sql.ResultSet getUDTs(java.lang.String,java.lang.String,java.lang.String,int[]) -> getUDTs
    java.lang.String getURL() -> getURL
    java.lang.String getUserName() -> getUserName
    java.sql.ResultSet getVersionColumns(java.lang.String,java.lang.String,java.lang.String) -> getVersionColumns
    boolean insertsAreDetected(int) -> insertsAreDetected
    boolean isCatalogAtStart() -> isCatalogAtStart
    boolean isReadOnly() -> isReadOnly
    boolean locatorsUpdateCopy() -> locatorsUpdateCopy
    boolean nullPlusNonNullIsNull() -> nullPlusNonNullIsNull
    boolean nullsAreSortedAtEnd() -> nullsAreSortedAtEnd
    boolean nullsAreSortedAtStart() -> nullsAreSortedAtStart
    boolean nullsAreSortedHigh() -> nullsAreSortedHigh
    boolean nullsAreSortedLow() -> nullsAreSortedLow
    boolean othersDeletesAreVisible(int) -> othersDeletesAreVisible
    boolean othersInsertsAreVisible(int) -> othersInsertsAreVisible
    boolean othersUpdatesAreVisible(int) -> othersUpdatesAreVisible
    boolean ownDeletesAreVisible(int) -> ownDeletesAreVisible
    boolean ownInsertsAreVisible(int) -> ownInsertsAreVisible
    boolean ownUpdatesAreVisible(int) -> ownUpdatesAreVisible
    boolean storesLowerCaseIdentifiers() -> storesLowerCaseIdentifiers
    boolean storesLowerCaseQuotedIdentifiers() -> storesLowerCaseQuotedIdentifiers
    boolean storesMixedCaseIdentifiers() -> storesMixedCaseIdentifiers
    boolean storesMixedCaseQuotedIdentifiers() -> storesMixedCaseQuotedIdentifiers
    boolean storesUpperCaseIdentifiers() -> storesUpperCaseIdentifiers
    boolean storesUpperCaseQuotedIdentifiers() -> storesUpperCaseQuotedIdentifiers
    boolean supportsANSI92EntryLevelSQL() -> supportsANSI92EntryLevelSQL
    boolean supportsANSI92FullSQL() -> supportsANSI92FullSQL
    boolean supportsANSI92IntermediateSQL() -> supportsANSI92IntermediateSQL
    boolean supportsAlterTableWithAddColumn() -> supportsAlterTableWithAddColumn
    boolean supportsAlterTableWithDropColumn() -> supportsAlterTableWithDropColumn
    boolean supportsBatchUpdates() -> supportsBatchUpdates
    boolean supportsCatalogsInDataManipulation() -> supportsCatalogsInDataManipulation
    boolean supportsCatalogsInIndexDefinitions() -> supportsCatalogsInIndexDefinitions
    boolean supportsCatalogsInPrivilegeDefinitions() -> supportsCatalogsInPrivilegeDefinitions
    boolean supportsCatalogsInProcedureCalls() -> supportsCatalogsInProcedureCalls
    boolean supportsCatalogsInTableDefinitions() -> supportsCatalogsInTableDefinitions
    boolean supportsColumnAliasing() -> supportsColumnAliasing
    boolean supportsConvert() -> supportsConvert
    boolean supportsConvert(int,int) -> supportsConvert
    boolean supportsCoreSQLGrammar() -> supportsCoreSQLGrammar
    boolean supportsCorrelatedSubqueries() -> supportsCorrelatedSubqueries
    boolean supportsDataDefinitionAndDataManipulationTransactions() -> supportsDataDefinitionAndDataManipulationTransactions
    boolean supportsDataManipulationTransactionsOnly() -> supportsDataManipulationTransactionsOnly
    boolean supportsDifferentTableCorrelationNames() -> supportsDifferentTableCorrelationNames
    boolean supportsExpressionsInOrderBy() -> supportsExpressionsInOrderBy
    boolean supportsExtendedSQLGrammar() -> supportsExtendedSQLGrammar
    boolean supportsFullOuterJoins() -> supportsFullOuterJoins
    boolean supportsGetGeneratedKeys() -> supportsGetGeneratedKeys
    boolean supportsGroupBy() -> supportsGroupBy
    boolean supportsGroupByBeyondSelect() -> supportsGroupByBeyondSelect
    boolean supportsGroupByUnrelated() -> supportsGroupByUnrelated
    boolean supportsIntegrityEnhancementFacility() -> supportsIntegrityEnhancementFacility
    boolean supportsLikeEscapeClause() -> supportsLikeEscapeClause
    boolean supportsLimitedOuterJoins() -> supportsLimitedOuterJoins
    boolean supportsMinimumSQLGrammar() -> supportsMinimumSQLGrammar
    boolean supportsMixedCaseIdentifiers() -> supportsMixedCaseIdentifiers
    boolean supportsMixedCaseQuotedIdentifiers() -> supportsMixedCaseQuotedIdentifiers
    boolean supportsMultipleOpenResults() -> supportsMultipleOpenResults
    boolean supportsMultipleResultSets() -> supportsMultipleResultSets
    boolean supportsMultipleTransactions() -> supportsMultipleTransactions
    boolean supportsNamedParameters() -> supportsNamedParameters
    boolean supportsNonNullableColumns() -> supportsNonNullableColumns
    boolean supportsOpenCursorsAcrossCommit() -> supportsOpenCursorsAcrossCommit
    boolean supportsOpenCursorsAcrossRollback() -> supportsOpenCursorsAcrossRollback
    boolean supportsOpenStatementsAcrossCommit() -> supportsOpenStatementsAcrossCommit
    boolean supportsOpenStatementsAcrossRollback() -> supportsOpenStatementsAcrossRollback
    boolean supportsOrderByUnrelated() -> supportsOrderByUnrelated
    boolean supportsOuterJoins() -> supportsOuterJoins
    boolean supportsPositionedDelete() -> supportsPositionedDelete
    boolean supportsPositionedUpdate() -> supportsPositionedUpdate
    boolean supportsResultSetConcurrency(int,int) -> supportsResultSetConcurrency
    boolean supportsResultSetHoldability(int) -> supportsResultSetHoldability
    boolean supportsResultSetType(int) -> supportsResultSetType
    boolean supportsSavepoints() -> supportsSavepoints
    boolean supportsSchemasInDataManipulation() -> supportsSchemasInDataManipulation
    boolean supportsSchemasInIndexDefinitions() -> supportsSchemasInIndexDefinitions
    boolean supportsSchemasInPrivilegeDefinitions() -> supportsSchemasInPrivilegeDefinitions
    boolean supportsSchemasInProcedureCalls() -> supportsSchemasInProcedureCalls
    boolean supportsSchemasInTableDefinitions() -> supportsSchemasInTableDefinitions
    boolean supportsSelectForUpdate() -> supportsSelectForUpdate
    boolean supportsStatementPooling() -> supportsStatementPooling
    boolean supportsStoredProcedures() -> supportsStoredProcedures
    boolean supportsSubqueriesInComparisons() -> supportsSubqueriesInComparisons
    boolean supportsSubqueriesInExists() -> supportsSubqueriesInExists
    boolean supportsSubqueriesInIns() -> supportsSubqueriesInIns
    boolean supportsSubqueriesInQuantifieds() -> supportsSubqueriesInQuantifieds
    boolean supportsTableCorrelationNames() -> supportsTableCorrelationNames
    boolean supportsTransactionIsolationLevel(int) -> supportsTransactionIsolationLevel
    boolean supportsTransactions() -> supportsTransactions
    boolean supportsUnion() -> supportsUnion
    boolean supportsUnionAll() -> supportsUnionAll
    boolean updatesAreDetected(int) -> updatesAreDetected
    boolean usesLocalFilePerTable() -> usesLocalFilePerTable
    boolean usesLocalFiles() -> usesLocalFiles
    boolean isWrapperFor(java.lang.Class) -> isWrapperFor
    java.lang.Object unwrap(java.lang.Class) -> unwrap
    boolean autoCommitFailureClosesAllResultSets() -> autoCommitFailureClosesAllResultSets
    java.sql.ResultSet getClientInfoProperties() -> getClientInfoProperties
    java.sql.ResultSet getFunctionColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getFunctionColumns
    java.sql.ResultSet getFunctions(java.lang.String,java.lang.String,java.lang.String) -> getFunctions
    java.sql.RowIdLifetime getRowIdLifetime() -> getRowIdLifetime
    java.sql.ResultSet getSchemas(java.lang.String,java.lang.String) -> getSchemas
    boolean supportsStoredFunctionsUsingCallSyntax() -> supportsStoredFunctionsUsingCallSyntax
    boolean generatedKeyAlwaysReturned() -> generatedKeyAlwaysReturned
    java.sql.ResultSet getPseudoColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getPseudoColumns
org.sqldroid.SQLDroidDriver -> org.sqldroid.SQLDroidDriver:
    java.lang.String DATABASE_FLAGS -> DATABASE_FLAGS
    java.lang.String ADDITONAL_DATABASE_FLAGS -> ADDITONAL_DATABASE_FLAGS
    java.lang.String sqldroidPrefix -> sqldroidPrefix
    java.lang.String xerialPrefix -> xerialPrefix
    boolean acceptsURL(java.lang.String) -> acceptsURL
    java.sql.Connection connect(java.lang.String,java.util.Properties) -> connect
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
    java.sql.DriverPropertyInfo[] getPropertyInfo(java.lang.String,java.util.Properties) -> getPropertyInfo
    boolean jdbcCompliant() -> jdbcCompliant
    java.util.logging.Logger getParentLogger() -> getParentLogger
org.sqldroid.SQLDroidPreparedStatement -> org.sqldroid.SQLDroidPreparedStatement:
    org.sqldroid.SQLiteDatabase db -> db
    org.sqldroid.SQLDroidConnection sqldroidConnection -> sqldroidConnection
    org.sqldroid.SQLDroidResultSet rs -> rs
    java.lang.String sql -> sql
    java.util.ArrayList l -> l
    boolean isSelect -> isSelect
    boolean potentialResultSet -> potentialResultSet
    int updateCount -> updateCount
    void ensureCap(int) -> ensureCap
    void setObj(int,java.lang.Object) -> setObj
    void addBatch(java.lang.String) -> addBatch
    java.lang.String getSQL() -> getSQL
    void setSQL(java.lang.String) -> setSQL
    void cancel() -> cancel
    void clearBatch() -> clearBatch
    void clearWarnings() -> clearWarnings
    void close() -> close
    java.lang.String[] makeArgListQueryString() -> makeArgListQueryString
    java.lang.Object[] makeArgListQueryObject() -> makeArgListQueryObject
    boolean execute() -> execute
    void closeResultSet() -> closeResultSet
    java.sql.ResultSet executeQuery() -> executeQuery
    int executeUpdate() -> executeUpdate
    boolean execute(java.lang.String) -> execute
    boolean execute(java.lang.String,int) -> execute
    boolean execute(java.lang.String,int[]) -> execute
    boolean execute(java.lang.String,java.lang.String[]) -> execute
    int[] executeBatch() -> executeBatch
    java.sql.ResultSet executeQuery(java.lang.String) -> executeQuery
    int executeUpdate(java.lang.String) -> executeUpdate
    int executeUpdate(java.lang.String,int) -> executeUpdate
    int executeUpdate(java.lang.String,int[]) -> executeUpdate
    int executeUpdate(java.lang.String,java.lang.String[]) -> executeUpdate
    java.sql.Connection getConnection() -> getConnection
    int getFetchDirection() -> getFetchDirection
    int getFetchSize() -> getFetchSize
    java.sql.ResultSet getGeneratedKeys() -> getGeneratedKeys
    int getMaxFieldSize() -> getMaxFieldSize
    int getMaxRows() -> getMaxRows
    boolean getMoreResults() -> getMoreResults
    boolean getMoreResults(int) -> getMoreResults
    int getQueryTimeout() -> getQueryTimeout
    java.sql.ResultSet getResultSet() -> getResultSet
    int getResultSetConcurrency() -> getResultSetConcurrency
    int getResultSetHoldability() -> getResultSetHoldability
    int getResultSetType() -> getResultSetType
    int getUpdateCount() -> getUpdateCount
    java.sql.SQLWarning getWarnings() -> getWarnings
    void setCursorName(java.lang.String) -> setCursorName
    void setEscapeProcessing(boolean) -> setEscapeProcessing
    void setFetchDirection(int) -> setFetchDirection
    void setFetchSize(int) -> setFetchSize
    void setMaxFieldSize(int) -> setMaxFieldSize
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(int) -> setQueryTimeout
    void addBatch() -> addBatch
    void clearParameters() -> clearParameters
    java.sql.ResultSetMetaData getMetaData() -> getMetaData
    java.sql.ParameterMetaData getParameterMetaData() -> getParameterMetaData
    void setArray(int,java.sql.Array) -> setArray
    void setAsciiStream(int,java.io.InputStream,int) -> setAsciiStream
    void setBigDecimal(int,java.math.BigDecimal) -> setBigDecimal
    void setBinaryStream(int,java.io.InputStream,int) -> setBinaryStream
    void setBlob(int,java.sql.Blob) -> setBlob
    void setBoolean(int,boolean) -> setBoolean
    void setByte(int,byte) -> setByte
    void setBytes(int,byte[]) -> setBytes
    void setCharacterStream(int,java.io.Reader,int) -> setCharacterStream
    void setClob(int,java.sql.Clob) -> setClob
    void setDate(int,java.sql.Date) -> setDate
    void setDate(int,java.sql.Date,java.util.Calendar) -> setDate
    void setDouble(int,double) -> setDouble
    void setFloat(int,float) -> setFloat
    void setInt(int,int) -> setInt
    void setLong(int,long) -> setLong
    void setNull(int,int) -> setNull
    void setNull(int,int,java.lang.String) -> setNull
    void setObject(int,java.lang.Object) -> setObject
    void setObject(int,java.lang.Object,int) -> setObject
    void setObject(int,java.lang.Object,int,int) -> setObject
    void setRef(int,java.sql.Ref) -> setRef
    void setShort(int,short) -> setShort
    void setString(int,java.lang.String) -> setString
    void setTime(int,java.sql.Time) -> setTime
    void setTime(int,java.sql.Time,java.util.Calendar) -> setTime
    void setTimestamp(int,java.sql.Timestamp) -> setTimestamp
    void setTimestamp(int,java.sql.Timestamp,java.util.Calendar) -> setTimestamp
    void setURL(int,java.net.URL) -> setURL
    void setUnicodeStream(int,java.io.InputStream,int) -> setUnicodeStream
    boolean isClosed() -> isClosed
    boolean isPoolable() -> isPoolable
    void setPoolable(boolean) -> setPoolable
    boolean isWrapperFor(java.lang.Class) -> isWrapperFor
    java.lang.Object unwrap(java.lang.Class) -> unwrap
    void setAsciiStream(int,java.io.InputStream) -> setAsciiStream
    void setAsciiStream(int,java.io.InputStream,long) -> setAsciiStream
    void setBinaryStream(int,java.io.InputStream) -> setBinaryStream
    void setBinaryStream(int,java.io.InputStream,long) -> setBinaryStream
    void setBlob(int,java.io.InputStream) -> setBlob
    void setBlob(int,java.io.InputStream,long) -> setBlob
    void setCharacterStream(int,java.io.Reader) -> setCharacterStream
    void setCharacterStream(int,java.io.Reader,long) -> setCharacterStream
    void setClob(int,java.io.Reader) -> setClob
    void setClob(int,java.io.Reader,long) -> setClob
    void setNCharacterStream(int,java.io.Reader) -> setNCharacterStream
    void setNCharacterStream(int,java.io.Reader,long) -> setNCharacterStream
    void setNClob(int,java.sql.NClob) -> setNClob
    void setNClob(int,java.io.Reader) -> setNClob
    void setNClob(int,java.io.Reader,long) -> setNClob
    void setNString(int,java.lang.String) -> setNString
    void setRowId(int,java.sql.RowId) -> setRowId
    void setSQLXML(int,java.sql.SQLXML) -> setSQLXML
    boolean isCloseOnCompletion() -> isCloseOnCompletion
    void closeOnCompletion() -> closeOnCompletion
org.sqldroid.SQLDroidResultSet -> org.sqldroid.SQLDroidResultSet:
    android.database.Cursor c -> c
    int lastColumnRead -> lastColumnRead
    int ci(int) -> ci
    boolean absolute(int) -> absolute
    void afterLast() -> afterLast
    void beforeFirst() -> beforeFirst
    void cancelRowUpdates() -> cancelRowUpdates
    void clearWarnings() -> clearWarnings
    void close() -> close
    void deleteRow() -> deleteRow
    int findColumn(java.lang.String) -> findColumn
    boolean first() -> first
    java.sql.Array getArray(int) -> getArray
    java.sql.Array getArray(java.lang.String) -> getArray
    java.io.InputStream getAsciiStream(int) -> getAsciiStream
    java.io.InputStream getAsciiStream(java.lang.String) -> getAsciiStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    java.math.BigDecimal getBigDecimal(int,int) -> getBigDecimal
    java.math.BigDecimal getBigDecimal(java.lang.String,int) -> getBigDecimal
    java.io.InputStream getBinaryStream(int) -> getBinaryStream
    java.io.InputStream getBinaryStream(java.lang.String) -> getBinaryStream
    java.sql.Blob getBlob(int) -> getBlob
    java.sql.Blob getBlob(java.lang.String) -> getBlob
    boolean getBoolean(int) -> getBoolean
    boolean getBoolean(java.lang.String) -> getBoolean
    byte getByte(int) -> getByte
    byte getByte(java.lang.String) -> getByte
    byte[] getBytes(int) -> getBytes
    byte[] getBytes(java.lang.String) -> getBytes
    java.io.Reader getCharacterStream(int) -> getCharacterStream
    java.io.Reader getCharacterStream(java.lang.String) -> getCharacterStream
    java.sql.Clob getClob(int) -> getClob
    java.sql.Clob getClob(java.lang.String) -> getClob
    int getConcurrency() -> getConcurrency
    java.lang.String getCursorName() -> getCursorName
    java.sql.Date getDate(int) -> getDate
    java.sql.Date getDate(java.lang.String) -> getDate
    java.sql.Date getDate(int,java.util.Calendar) -> getDate
    java.sql.Date getDate(java.lang.String,java.util.Calendar) -> getDate
    double getDouble(int) -> getDouble
    double getDouble(java.lang.String) -> getDouble
    int getFetchDirection() -> getFetchDirection
    int getFetchSize() -> getFetchSize
    float getFloat(int) -> getFloat
    float getFloat(java.lang.String) -> getFloat
    int getInt(int) -> getInt
    int getInt(java.lang.String) -> getInt
    long getLong(int) -> getLong
    long getLong(java.lang.String) -> getLong
    java.sql.ResultSetMetaData getMetaData() -> getMetaData
    java.lang.Object getObject(int) -> getObject
    java.lang.Object getObject(java.lang.String) -> getObject
    java.lang.Object getObject(int,java.util.Map) -> getObject
    java.lang.Object getObject(java.lang.String,java.util.Map) -> getObject
    java.lang.Object getObject(int,java.lang.Class) -> getObject
    java.lang.Object getObject(java.lang.String,java.lang.Class) -> getObject
    java.sql.Ref getRef(int) -> getRef
    java.sql.Ref getRef(java.lang.String) -> getRef
    int getRow() -> getRow
    short getShort(int) -> getShort
    short getShort(java.lang.String) -> getShort
    java.sql.Statement getStatement() -> getStatement
    java.lang.String getString(int) -> getString
    java.lang.String getString(java.lang.String) -> getString
    java.sql.Time getTime(int) -> getTime
    java.sql.Time getTime(java.lang.String) -> getTime
    java.sql.Time getTime(int,java.util.Calendar) -> getTime
    java.sql.Time getTime(java.lang.String,java.util.Calendar) -> getTime
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.sql.Timestamp getTimestamp(java.lang.String) -> getTimestamp
    java.sql.Timestamp getTimestamp(int,java.util.Calendar) -> getTimestamp
    java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar) -> getTimestamp
    int getType() -> getType
    java.net.URL getURL(int) -> getURL
    java.net.URL getURL(java.lang.String) -> getURL
    java.io.InputStream getUnicodeStream(int) -> getUnicodeStream
    java.io.InputStream getUnicodeStream(java.lang.String) -> getUnicodeStream
    java.sql.SQLWarning getWarnings() -> getWarnings
    void insertRow() -> insertRow
    boolean isAfterLast() -> isAfterLast
    boolean isBeforeFirst() -> isBeforeFirst
    boolean isFirst() -> isFirst
    boolean isLast() -> isLast
    boolean last() -> last
    void moveToCurrentRow() -> moveToCurrentRow
    void moveToInsertRow() -> moveToInsertRow
    boolean next() -> next
    boolean previous() -> previous
    void refreshRow() -> refreshRow
    boolean relative(int) -> relative
    boolean rowDeleted() -> rowDeleted
    boolean rowInserted() -> rowInserted
    boolean rowUpdated() -> rowUpdated
    void setFetchDirection(int) -> setFetchDirection
    void setFetchSize(int) -> setFetchSize
    void updateArray(int,java.sql.Array) -> updateArray
    void updateArray(java.lang.String,java.sql.Array) -> updateArray
    void updateAsciiStream(int,java.io.InputStream,int) -> updateAsciiStream
    void updateAsciiStream(java.lang.String,java.io.InputStream,int) -> updateAsciiStream
    void updateBigDecimal(int,java.math.BigDecimal) -> updateBigDecimal
    void updateBigDecimal(java.lang.String,java.math.BigDecimal) -> updateBigDecimal
    void updateBinaryStream(int,java.io.InputStream,int) -> updateBinaryStream
    void updateBinaryStream(java.lang.String,java.io.InputStream,int) -> updateBinaryStream
    void updateBlob(int,java.sql.Blob) -> updateBlob
    void updateBlob(java.lang.String,java.sql.Blob) -> updateBlob
    void updateBoolean(int,boolean) -> updateBoolean
    void updateBoolean(java.lang.String,boolean) -> updateBoolean
    void updateByte(int,byte) -> updateByte
    void updateByte(java.lang.String,byte) -> updateByte
    void updateBytes(int,byte[]) -> updateBytes
    void updateBytes(java.lang.String,byte[]) -> updateBytes
    void updateCharacterStream(int,java.io.Reader,int) -> updateCharacterStream
    void updateCharacterStream(java.lang.String,java.io.Reader,int) -> updateCharacterStream
    void updateClob(int,java.sql.Clob) -> updateClob
    void updateClob(java.lang.String,java.sql.Clob) -> updateClob
    void updateDate(int,java.sql.Date) -> updateDate
    void updateDate(java.lang.String,java.sql.Date) -> updateDate
    void updateDouble(int,double) -> updateDouble
    void updateDouble(java.lang.String,double) -> updateDouble
    void updateFloat(int,float) -> updateFloat
    void updateFloat(java.lang.String,float) -> updateFloat
    void updateInt(int,int) -> updateInt
    void updateInt(java.lang.String,int) -> updateInt
    void updateLong(int,long) -> updateLong
    void updateLong(java.lang.String,long) -> updateLong
    void updateNull(int) -> updateNull
    void updateNull(java.lang.String) -> updateNull
    void updateObject(int,java.lang.Object) -> updateObject
    void updateObject(java.lang.String,java.lang.Object) -> updateObject
    void updateObject(int,java.lang.Object,int) -> updateObject
    void updateObject(java.lang.String,java.lang.Object,int) -> updateObject
    void updateRef(int,java.sql.Ref) -> updateRef
    void updateRef(java.lang.String,java.sql.Ref) -> updateRef
    void updateRow() -> updateRow
    void updateShort(int,short) -> updateShort
    void updateShort(java.lang.String,short) -> updateShort
    void updateString(int,java.lang.String) -> updateString
    void updateString(java.lang.String,java.lang.String) -> updateString
    void updateTime(int,java.sql.Time) -> updateTime
    void updateTime(java.lang.String,java.sql.Time) -> updateTime
    void updateTimestamp(int,java.sql.Timestamp) -> updateTimestamp
    void updateTimestamp(java.lang.String,java.sql.Timestamp) -> updateTimestamp
    boolean wasNull() -> wasNull
    boolean isWrapperFor(java.lang.Class) -> isWrapperFor
    java.lang.Object unwrap(java.lang.Class) -> unwrap
    int getHoldability() -> getHoldability
    java.io.Reader getNCharacterStream(int) -> getNCharacterStream
    java.io.Reader getNCharacterStream(java.lang.String) -> getNCharacterStream
    java.sql.NClob getNClob(int) -> getNClob
    java.sql.NClob getNClob(java.lang.String) -> getNClob
    java.lang.String getNString(int) -> getNString
    java.lang.String getNString(java.lang.String) -> getNString
    java.sql.RowId getRowId(int) -> getRowId
    java.sql.RowId getRowId(java.lang.String) -> getRowId
    java.sql.SQLXML getSQLXML(int) -> getSQLXML
    java.sql.SQLXML getSQLXML(java.lang.String) -> getSQLXML
    boolean isClosed() -> isClosed
    void updateAsciiStream(int,java.io.InputStream) -> updateAsciiStream
    void updateAsciiStream(java.lang.String,java.io.InputStream) -> updateAsciiStream
    void updateAsciiStream(int,java.io.InputStream,long) -> updateAsciiStream
    void updateAsciiStream(java.lang.String,java.io.InputStream,long) -> updateAsciiStream
    void updateBinaryStream(int,java.io.InputStream) -> updateBinaryStream
    void updateBinaryStream(java.lang.String,java.io.InputStream) -> updateBinaryStream
    void updateBinaryStream(int,java.io.InputStream,long) -> updateBinaryStream
    void updateBinaryStream(java.lang.String,java.io.InputStream,long) -> updateBinaryStream
    void updateBlob(int,java.io.InputStream) -> updateBlob
    void updateBlob(java.lang.String,java.io.InputStream) -> updateBlob
    void updateBlob(int,java.io.InputStream,long) -> updateBlob
    void updateBlob(java.lang.String,java.io.InputStream,long) -> updateBlob
    void updateCharacterStream(int,java.io.Reader) -> updateCharacterStream
    void updateCharacterStream(java.lang.String,java.io.Reader) -> updateCharacterStream
    void updateCharacterStream(int,java.io.Reader,long) -> updateCharacterStream
    void updateCharacterStream(java.lang.String,java.io.Reader,long) -> updateCharacterStream
    void updateClob(int,java.io.Reader) -> updateClob
    void updateClob(java.lang.String,java.io.Reader) -> updateClob
    void updateClob(int,java.io.Reader,long) -> updateClob
    void updateClob(java.lang.String,java.io.Reader,long) -> updateClob
    void updateNCharacterStream(int,java.io.Reader) -> updateNCharacterStream
    void updateNCharacterStream(java.lang.String,java.io.Reader) -> updateNCharacterStream
    void updateNCharacterStream(int,java.io.Reader,long) -> updateNCharacterStream
    void updateNCharacterStream(java.lang.String,java.io.Reader,long) -> updateNCharacterStream
    void updateNClob(int,java.sql.NClob) -> updateNClob
    void updateNClob(java.lang.String,java.sql.NClob) -> updateNClob
    void updateNClob(int,java.io.Reader) -> updateNClob
    void updateNClob(java.lang.String,java.io.Reader) -> updateNClob
    void updateNClob(int,java.io.Reader,long) -> updateNClob
    void updateNClob(java.lang.String,java.io.Reader,long) -> updateNClob
    void updateNString(int,java.lang.String) -> updateNString
    void updateNString(java.lang.String,java.lang.String) -> updateNString
    void updateRowId(int,java.sql.RowId) -> updateRowId
    void updateRowId(java.lang.String,java.sql.RowId) -> updateRowId
    void updateSQLXML(int,java.sql.SQLXML) -> updateSQLXML
    void updateSQLXML(java.lang.String,java.sql.SQLXML) -> updateSQLXML
org.sqldroid.SQLDroidResultSetMetaData -> org.sqldroid.SQLDroidResultSetMetaData:
    android.database.Cursor cursor -> cursor
    java.lang.reflect.Method getType -> getType
    int getType(android.database.Cursor,int) -> getType
    java.lang.String getCatalogName(int) -> getCatalogName
    java.lang.String getColumnClassName(int) -> getColumnClassName
    int getColumnCount() -> getColumnCount
    int getColumnDisplaySize(int) -> getColumnDisplaySize
    java.lang.String getColumnLabel(int) -> getColumnLabel
    java.lang.String getColumnName(int) -> getColumnName
    int getColumnType(int) -> getColumnType
    java.lang.String getColumnTypeName(int) -> getColumnTypeName
    int getPrecision(int) -> getPrecision
    int getScale(int) -> getScale
    java.lang.String getSchemaName(int) -> getSchemaName
    java.lang.String getTableName(int) -> getTableName
    boolean isAutoIncrement(int) -> isAutoIncrement
    boolean isCaseSensitive(int) -> isCaseSensitive
    boolean isCurrency(int) -> isCurrency
    boolean isDefinitelyWritable(int) -> isDefinitelyWritable
    int isNullable(int) -> isNullable
    boolean isReadOnly(int) -> isReadOnly
    boolean isSearchable(int) -> isSearchable
    boolean isSigned(int) -> isSigned
    boolean isWritable(int) -> isWritable
    boolean isWrapperFor(java.lang.Class) -> isWrapperFor
    java.lang.Object unwrap(java.lang.Class) -> unwrap
org.sqldroid.SQLDroidSQLException -> org.sqldroid.SQLDroidSQLException:
    android.database.SQLException sqlException -> sqlException
    boolean equals(java.lang.Object) -> equals
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    java.lang.Throwable getCause() -> getCause
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
    java.lang.String getMessage() -> getMessage
    java.lang.StackTraceElement[] getStackTrace() -> getStackTrace
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.String toString() -> toString
org.sqldroid.SQLDroidStatement -> org.sqldroid.SQLDroidStatement:
    org.sqldroid.SQLiteDatabase db -> db
    org.sqldroid.SQLDroidConnection sqldroidConnection -> sqldroidConnection
    org.sqldroid.SQLDroidResultSet rs -> rs
    java.lang.Integer maxRows -> maxRows
    int updateCount -> updateCount
    void addBatch(java.lang.String) -> addBatch
    void cancel() -> cancel
    void clearBatch() -> clearBatch
    void clearWarnings() -> clearWarnings
    void close() -> close
    void closeResultSet() -> closeResultSet
    boolean execute(java.lang.String) -> execute
    boolean execute(java.lang.String,int) -> execute
    boolean execute(java.lang.String,int[]) -> execute
    boolean execute(java.lang.String,java.lang.String[]) -> execute
    int[] executeBatch() -> executeBatch
    java.sql.ResultSet executeQuery(java.lang.String) -> executeQuery
    int executeUpdate(java.lang.String) -> executeUpdate
    int executeUpdate(java.lang.String,int) -> executeUpdate
    int executeUpdate(java.lang.String,int[]) -> executeUpdate
    int executeUpdate(java.lang.String,java.lang.String[]) -> executeUpdate
    java.sql.Connection getConnection() -> getConnection
    int getFetchDirection() -> getFetchDirection
    int getFetchSize() -> getFetchSize
    java.sql.ResultSet getGeneratedKeys() -> getGeneratedKeys
    int getMaxFieldSize() -> getMaxFieldSize
    int getMaxRows() -> getMaxRows
    boolean getMoreResults() -> getMoreResults
    boolean getMoreResults(int) -> getMoreResults
    int getQueryTimeout() -> getQueryTimeout
    java.sql.ResultSet getResultSet() -> getResultSet
    int getResultSetConcurrency() -> getResultSetConcurrency
    int getResultSetHoldability() -> getResultSetHoldability
    int getResultSetType() -> getResultSetType
    int getUpdateCount() -> getUpdateCount
    java.sql.SQLWarning getWarnings() -> getWarnings
    void setCursorName(java.lang.String) -> setCursorName
    void setEscapeProcessing(boolean) -> setEscapeProcessing
    void setFetchDirection(int) -> setFetchDirection
    void setFetchSize(int) -> setFetchSize
    void setMaxFieldSize(int) -> setMaxFieldSize
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(int) -> setQueryTimeout
    boolean isWrapperFor(java.lang.Class) -> isWrapperFor
    java.lang.Object unwrap(java.lang.Class) -> unwrap
    boolean isClosed() -> isClosed
    boolean isPoolable() -> isPoolable
    void setPoolable(boolean) -> setPoolable
    boolean isCloseOnCompletion() -> isCloseOnCompletion
    void closeOnCompletion() -> closeOnCompletion
org.sqldroid.SQLiteDatabase -> org.sqldroid.SQLiteDatabase:
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    long timeout -> timeout
    java.lang.String dbQname -> dbQname
    java.lang.reflect.Method getChangedRowCount -> getChangedRowCount
    boolean isLockedException(android.database.sqlite.SQLiteException) -> isLockedException
    android.database.Cursor rawQuery(java.lang.String,java.lang.String[]) -> rawQuery
    void execSQL(java.lang.String,java.lang.Object[]) -> execSQL
    void execSQL(java.lang.String) -> execSQL
    android.database.sqlite.SQLiteDatabase getSqliteDatabase() -> getSqliteDatabase
    void execNoArgVoidMethod(org.sqldroid.SQLiteDatabase$Transaction) -> execNoArgVoidMethod
    void setTransactionSuccessful() -> setTransactionSuccessful
    void beginTransaction() -> beginTransaction
    void endTransaction() -> endTransaction
    void close() -> close
    int changedRowCount() -> changedRowCount
org.sqldroid.SQLiteDatabase$1 -> org.sqldroid.a:
    int[] $SwitchMap$org$sqldroid$SQLiteDatabase$Transaction -> a
org.sqldroid.SQLiteDatabase$Transaction -> org.sqldroid.SQLiteDatabase$Transaction:
    org.sqldroid.SQLiteDatabase$Transaction setTransactionSuccessful -> setTransactionSuccessful
    org.sqldroid.SQLiteDatabase$Transaction endTransaction -> endTransaction
    org.sqldroid.SQLiteDatabase$Transaction close -> close
    org.sqldroid.SQLiteDatabase$Transaction beginTransaction -> beginTransaction
    org.sqldroid.SQLiteDatabase$Transaction[] $VALUES -> $VALUES
    org.sqldroid.SQLiteDatabase$Transaction[] values() -> values
    org.sqldroid.SQLiteDatabase$Transaction valueOf(java.lang.String) -> valueOf
org.xclcharts.chart.ArcLineChart -> org.xclcharts.chart.ArcLineChart:
    java.lang.String TAG -> TAG
    int OFFSET_ANGLE -> OFFSET_ANGLE
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLine -> mPaintLine
    java.util.List mDataset -> mDataset
    float mBarInnerMargin -> mBarInnerMargin
    float mLabelOffsetX -> mLabelOffsetX
    android.graphics.Paint mPaintFill -> mPaintFill
    float mRadius -> mRadius
    float mInnerRaius -> mInnerRaius
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void calcPlotRange() -> calcPlotRange
    float getRadius() -> getRadius
    void setLabelOffsetX(float) -> setLabelOffsetX
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    boolean setBarInnerMargin(float) -> setBarInnerMargin
    float getInnerMargin() -> getInnerMargin
    void setInnerRaius(float) -> setInnerRaius
    boolean validateAngle(float) -> validateAngle
    boolean renderCap(android.graphics.Canvas,float,android.graphics.PointF[],int[]) -> renderCap
    boolean renderLabels(android.graphics.Canvas,float,android.graphics.PointF[]) -> renderLabels
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.chart.ArcLineData -> org.xclcharts.chart.ArcLineData:
    java.lang.String TAG -> TAG
    java.lang.String mKey -> mKey
    java.lang.String mLabel -> mLabel
    double mValue -> mValue
    int mColor -> mColor
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabel(java.lang.String) -> setLabel
    void setPercentage(double) -> setPercentage
    void setBarColor(int) -> setBarColor
    java.lang.String getLabel() -> getLabel
    double getPercentage() -> getPercentage
    int getBarColor() -> getBarColor
    float getSliceAngle() -> getSliceAngle
org.xclcharts.chart.AreaChart -> org.xclcharts.chart.AreaChart:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintAreaFill -> mPaintAreaFill
    java.util.List mDataSet -> mDataSet
    int mAreaAlpha -> mAreaAlpha
    java.util.List mLstPathPoints -> mLstPathPoints
    android.graphics.Path mPathArea -> mPathArea
    android.graphics.PointF[] mBezierControls -> mBezierControls
    java.util.List mLstKey -> mLstKey
    java.util.List mLstPoints -> mLstPoints
    java.util.List mLstDots -> mLstDots
    org.xclcharts.renderer.XEnum$CrurveLineStyle mCrurveLineStyle -> mCrurveLineStyle
    int Y_MIN -> Y_MIN
    int Y_MAX -> Y_MAX
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initPaint() -> initPaint
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    void setAreaAlpha(int) -> setAreaAlpha
    void setCrurveLineStyle(org.xclcharts.renderer.XEnum$CrurveLineStyle) -> setCrurveLineStyle
    org.xclcharts.renderer.XEnum$CrurveLineStyle getCrurveLineStyle() -> getCrurveLineStyle
    boolean calcAllPoints(org.xclcharts.chart.AreaData,java.util.List,java.util.List,java.util.List) -> calcAllPoints
    boolean renderBezierArea(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderBezierArea
    boolean renderArea(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderArea
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.AreaData,java.util.List) -> renderLine
    boolean renderBezierCurveLine(android.graphics.Canvas,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderBezierCurveLine
    boolean renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.AreaData,int,java.util.List) -> renderDotAndLabel
    float getLineMaxMinY(int,java.util.List) -> getLineMaxMinY
    boolean renderVerticalPlot(android.graphics.Canvas) -> renderVerticalPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
org.xclcharts.chart.AreaData -> org.xclcharts.chart.AreaData:
    int mAreaFillColor -> mAreaFillColor
    boolean mApplayGradient -> mApplayGradient
    int mAreaBeginColor -> mAreaBeginColor
    int mAreaEndColor -> mAreaEndColor
    android.graphics.Shader$TileMode mTileMode -> mTileMode
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    void setAreaFillColor(int) -> setAreaFillColor
    int getAreaFillColor() -> getAreaFillColor
    void setApplayGradient(boolean) -> setApplayGradient
    boolean getApplayGradient() -> getApplayGradient
    void setGradientDirection(org.xclcharts.renderer.XEnum$Direction) -> setGradientDirection
    org.xclcharts.renderer.XEnum$Direction getGradientDirection() -> getGradientDirection
    void setGradientMode(android.graphics.Shader$TileMode) -> setGradientMode
    android.graphics.Shader$TileMode getGradientMode() -> getGradientMode
    void setAreaBeginColor(int) -> setAreaBeginColor
    void setAreaEndColor(int) -> setAreaEndColor
    int getAreaBeginColor() -> getAreaBeginColor
    int getAreaEndColor() -> getAreaEndColor
org.xclcharts.chart.BarChart -> org.xclcharts.chart.BarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.FlatBar mFlatBar -> mFlatBar
    java.util.List mDataSet -> mDataSet
    org.xclcharts.renderer.line.PlotCustomLine mCustomLine -> mCustomLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    void setCustomLines(java.util.List) -> setCustomLines
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setChartDirection(org.xclcharts.renderer.XEnum$Direction) -> setChartDirection
    org.xclcharts.renderer.XEnum$Direction getChartDirection() -> getChartDirection
    void defaultAxisSetting() -> defaultAxisSetting
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    int getDataAxisDetailSetMaxSize() -> getDataAxisDetailSetMaxSize
    float getHorizontalYSteps() -> getHorizontalYSteps
    void renderVerticalBarCategoryAxis(android.graphics.Canvas) -> renderVerticalBarCategoryAxis
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    float get3DOffsetX() -> get3DOffsetX
    float get3DBaseOffsetX() -> get3DBaseOffsetX
    float get3DBaseOffsetY() -> get3DBaseOffsetY
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int getDatasetSize(java.util.List) -> getDatasetSize
    void setBarDataColor(android.graphics.Paint,java.util.List,int,int) -> setBarDataColor
    org.xclcharts.event.click.BarPosition getPositionRecord(float,float) -> getPositionRecord
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
org.xclcharts.chart.BarChart3D -> org.xclcharts.chart.BarChart3D:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.Bar3D mBar3D -> mBar3D
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setAxis3DBaseThickness(int) -> setAxis3DBaseThickness
    double getAxis3DBaseThickness() -> getAxis3DBaseThickness
    void setBarThickness(int) -> setBarThickness
    double getBarThickness() -> getBarThickness
    void setBarAngle(int) -> setBarAngle
    int getBarAngle() -> getBarAngle
    void setBarAlpha(int) -> setBarAlpha
    void setAxis3DBaseColor(int) -> setAxis3DBaseColor
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    float get3DOffsetX() -> get3DOffsetX
    float get3DBaseOffsetX() -> get3DBaseOffsetX
    float get3DBaseOffsetY() -> get3DBaseOffsetY
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    void drawClipAxisLine(android.graphics.Canvas) -> drawClipAxisLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
org.xclcharts.chart.BarData -> org.xclcharts.chart.BarData:
    java.util.List mDataSet -> mDataSet
    java.util.List mDataColor -> mDataColor
    java.lang.String mKey -> mKey
    java.lang.Integer mColor -> mColor
    void setDataColor(java.util.List) -> setDataColor
    java.util.List getDataColor() -> getDataColor
    void setDataSet(java.util.List) -> setDataSet
    void setKey(java.lang.String) -> setKey
    void setColor(java.lang.Integer) -> setColor
    java.util.List getDataSet() -> getDataSet
    java.lang.String getKey() -> getKey
    java.lang.Integer getColor() -> getColor
org.xclcharts.chart.BubbleChart -> org.xclcharts.chart.BubbleChart:
    java.lang.String TAG -> TAG
    java.util.List mDataset -> mDataset
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    float mBubbleMaxSize -> mBubbleMaxSize
    float mBubbleMinSize -> mBubbleMinSize
    float mBubbleScaleMax -> mBubbleScaleMax
    float mBubbleScaleMin -> mBubbleScaleMin
    android.graphics.Paint mPaintPoint -> mPaintPoint
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    android.graphics.Paint mPaintBorderPoint -> mPaintBorderPoint
    org.xclcharts.renderer.plot.PlotQuadrantRender mPlotQuadrant -> mPlotQuadrant
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setBubbleMaxSize(float) -> setBubbleMaxSize
    void setBubbleMinSize(float) -> setBubbleMinSize
    void setBubbleScaleMax(float) -> setBubbleScaleMax
    void setBubbleScaleMin(float) -> setBubbleScaleMin
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    float calcRaidus(float,float,float) -> calcRaidus
    org.xclcharts.renderer.plot.PlotQuadrant getPlotQuadrant() -> getPlotQuadrant
    android.graphics.Paint getPointPaint() -> getPointPaint
    android.graphics.Paint getPointBorderPaint() -> getPointBorderPaint
    void drawQuadrant(android.graphics.Canvas) -> drawQuadrant
    void renderPoints(android.graphics.Canvas,org.xclcharts.chart.BubbleData,int) -> renderPoints
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.BubbleData -> org.xclcharts.chart.BubbleData:
    java.util.LinkedHashMap mPointMap -> mPointMap
    java.util.List mBubble -> mBubble
    android.graphics.Paint mLabelPaint -> mLabelPaint
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    int mColor -> mColor
    int mBorderColor -> mBorderColor
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.LinkedHashMap) -> setDataSet
    java.util.LinkedHashMap getDataSet() -> getDataSet
    void setBubble(java.util.List) -> setBubble
    java.util.List getBubble() -> getBubble
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setBorderColor(int) -> setBorderColor
    int getBorderColor() -> getBorderColor
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.CircleChart -> org.xclcharts.chart.CircleChart:
    java.lang.String TAG -> TAG
    java.lang.String mDataInfo -> mDataInfo
    org.xclcharts.renderer.XEnum$CircleType mDisplayType -> mDisplayType
    android.graphics.Paint mPaintBgCircle -> mPaintBgCircle
    android.graphics.Paint mPaintFillCircle -> mPaintFillCircle
    android.graphics.Paint mPaintDataInfo -> mPaintDataInfo
    boolean mShowInnerFill -> mShowInnerFill
    boolean mShowInnerBG -> mShowInnerBG
    java.util.List mDataSet -> mDataSet
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void setDataSource(java.util.List) -> setDataSource
    void setAttributeInfo(java.lang.String) -> setAttributeInfo
    void setCircleType(org.xclcharts.renderer.XEnum$CircleType) -> setCircleType
    android.graphics.Paint getFillCirclePaint() -> getFillCirclePaint
    android.graphics.Paint getBgCirclePaint() -> getBgCirclePaint
    android.graphics.Paint getDataInfoPaint() -> getDataInfoPaint
    void hideInnerFill() -> hideInnerFill
    void hideInnerBG() -> hideInnerBG
    void showInnerFill() -> showInnerFill
    boolean isShowInnerFill() -> isShowInnerFill
    void showInnerBG() -> showInnerBG
    boolean isShowInnerBG() -> isShowInnerBG
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPercent
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.CustomLineData -> org.xclcharts.chart.CustomLineData:
    java.lang.String mLabel -> mLabel
    java.lang.Double mDesireValue -> mDesireValue
    int mColor -> mColor
    int mLineStroke -> mLineStroke
    float mLabelRotateAngle -> mLabelRotateAngle
    android.graphics.Paint$Align mLabelAlign -> mLabelAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mLabelPostion -> mLabelPostion
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.XEnum$DotStyle mLineCap -> mLineCap
    int mLabelOffset -> mLabelOffset
    android.graphics.Paint mPaintCustomLine -> mPaintCustomLine
    android.graphics.Paint mPaintLineLabel -> mPaintLineLabel
    boolean mLineVisible -> mLineVisible
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    java.lang.Double getValue() -> getValue
    void setValue(java.lang.Double) -> setValue
    int getColor() -> getColor
    void setColor(int) -> setColor
    int getLineStroke() -> getLineStroke
    void setLineStroke(int) -> setLineStroke
    boolean isSetLineStroke() -> isSetLineStroke
    void setCustomLineCap(org.xclcharts.renderer.XEnum$DotStyle) -> setCustomLineCap
    org.xclcharts.renderer.XEnum$DotStyle getCustomeLineCap() -> getCustomeLineCap
    void setLabelHorizontalPostion(android.graphics.Paint$Align) -> setLabelHorizontalPostion
    android.graphics.Paint$Align getLabelHorizontalPostion() -> getLabelHorizontalPostion
    void setLabelVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setLabelVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getLabelVerticalAlign() -> getLabelVerticalAlign
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    float getLabelRotateAngle() -> getLabelRotateAngle
    void setLabelRotateAngle(float) -> setLabelRotateAngle
    void setLabelOffset(int) -> setLabelOffset
    int getLabelOffset() -> getLabelOffset
    android.graphics.Paint getCustomLinePaint() -> getCustomLinePaint
    android.graphics.Paint getLineLabelPaint() -> getLineLabelPaint
    boolean isShowLine() -> isShowLine
    void hideLine() -> hideLine
    void showLine() -> showLine
org.xclcharts.chart.DialChart -> org.xclcharts.chart.DialChart:
    java.lang.String TAG -> TAG
    int INIT_ANGLE -> INIT_ANGLE
    int FIX_TOTAL_ANGLE -> FIX_TOTAL_ANGLE
    float mStartAngle -> mStartAngle
    float mTotalAngle -> mTotalAngle
    java.util.List mRoundAxis -> mRoundAxis
    org.xclcharts.renderer.plot.PointerRender mPointer -> mPointer
    java.util.List mPointerSet -> mPointerSet
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setStartAngle(float) -> setStartAngle
    void setTotalAngle(float) -> setTotalAngle
    java.util.List getPlotAxis() -> getPlotAxis
    java.util.List getPlotPointer() -> getPlotPointer
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    void addPointer() -> addPointer
    void clearPlotPointer() -> clearPlotPointer
    void clearPlotAxis() -> clearPlotAxis
    void clearAll() -> clearAll
    org.xclcharts.renderer.plot.Pointer getPointer() -> getPointer
    void renderPointerLine(android.graphics.Canvas) -> renderPointerLine
    void addInnerTicksAxis(float,java.util.List) -> addInnerTicksAxis
    void addOuterTicksAxis(float,java.util.List) -> addOuterTicksAxis
    void addTicksAxis(float,java.util.List,org.xclcharts.renderer.XEnum$RoundTickAxisType) -> addTicksAxis
    void addStrokeRingAxis(float,float,java.util.List,java.util.List) -> addStrokeRingAxis
    void addStrokeRingAxis(float,float,java.util.List,java.util.List,java.util.List) -> addStrokeRingAxis
    void addFillRingAxis(float,java.util.List,java.util.List) -> addFillRingAxis
    void addFillRingAxis(float,java.util.List,java.util.List,java.util.List) -> addFillRingAxis
    void addRingAxis(float,float,java.util.List,java.util.List,java.util.List) -> addRingAxis
    void addArcLineAxis(float) -> addArcLineAxis
    void addFillAxis(float,int) -> addFillAxis
    void addCircleAxis(float,int) -> addCircleAxis
    void addLineAxis(org.xclcharts.renderer.XEnum$Location,float) -> addLineAxis
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.DountChart -> org.xclcharts.chart.DountChart:
    int mFillRadius -> mFillRadius
    float mInnerRadius -> mInnerRadius
    android.graphics.Paint mPaintFill -> mPaintFill
    android.graphics.Paint mPaintCenterText -> mPaintCenterText
    java.lang.String mCenterText -> mCenterText
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void initCenterTextPaint() -> initCenterTextPaint
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setInnerRadius(float) -> setInnerRadius
    float calcInnerRadius() -> calcInnerRadius
    android.graphics.Paint getCenterTextPaint() -> getCenterTextPaint
    void setCenterText(java.lang.String) -> setCenterText
    void renderCenterText(android.graphics.Canvas) -> renderCenterText
    android.graphics.PointF renderLabelInside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelInside
    void renderInnderCircle(android.graphics.Canvas) -> renderInnderCircle
    void renderDount(android.graphics.Canvas) -> renderDount
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.GaugeChart -> org.xclcharts.chart.GaugeChart:
    java.lang.String TAG -> TAG
    double mTickSteps -> mTickSteps
    java.util.List mLabels -> mLabels
    android.graphics.Paint mPaintTick -> mPaintTick
    float mPointerAngle -> mPointerAngle
    android.graphics.Paint mPaintPointerLine -> mPaintPointerLine
    android.graphics.Paint mPaintPinterCircle -> mPaintPinterCircle
    android.graphics.Paint mPaintPartitionFill -> mPaintPartitionFill
    android.graphics.Paint mPaintDount -> mPaintDount
    java.util.List mPartitionDataset -> mPartitionDataset
    int mStartAngle -> mStartAngle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initPaint() -> initPaint
    android.graphics.Paint getTickPaint() -> getTickPaint
    android.graphics.Paint getPinterCirclePaint() -> getPinterCirclePaint
    android.graphics.Paint getPointerLinePaint() -> getPointerLinePaint
    android.graphics.Paint getPartitionFillPaint() -> getPartitionFillPaint
    android.graphics.Paint getDountPaint() -> getDountPaint
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPercent
    void setTickSteps(double) -> setTickSteps
    void setCategories(java.util.List) -> setCategories
    void setPartition(java.util.List) -> setPartition
    void setCurrentAngle(float) -> setCurrentAngle
    void renderLabels(android.graphics.Canvas) -> renderLabels
    void renderTicks(android.graphics.Canvas) -> renderTicks
    void renderPointerLine(android.graphics.Canvas) -> renderPointerLine
    void renderPinterCircle(android.graphics.Canvas) -> renderPinterCircle
    boolean renderPartitionFill(android.graphics.Canvas) -> renderPartitionFill
    float getCirY() -> getCirY
    float getRadius() -> getRadius
    void renderDount(android.graphics.Canvas) -> renderDount
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.LineChart -> org.xclcharts.chart.LineChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    org.xclcharts.renderer.line.PlotCustomLine mCustomLine -> mCustomLine
    boolean mLineAxisIntersectVisible -> mLineAxisIntersectVisible
    java.util.List mLstKey -> mLstKey
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.LinkedList) -> setDataSource
    void setDesireLines(java.util.List) -> setDesireLines
    void setLineAxisIntersectVisible(boolean) -> setLineAxisIntersectVisible
    boolean getLineAxisIntersectVisible() -> getLineAxisIntersectVisible
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.LineData,java.lang.String,int) -> renderLine
    boolean renderVerticalPlot(android.graphics.Canvas) -> renderVerticalPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.LineData -> org.xclcharts.chart.LineData:
    java.util.List mLinePoint -> mLinePoint
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setLinePoint(java.util.List) -> setLinePoint
    java.util.List getLinePoint() -> getLinePoint
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.LnData -> org.xclcharts.chart.LnData:
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    org.xclcharts.renderer.line.PlotLine mPlotLine -> mPlotLine
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.plot.PlotLabelRender mPlotLabel -> mPlotLabel
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    org.xclcharts.renderer.line.PlotLine getPlotLine() -> getPlotLine
    void setLineColor(int) -> setLineColor
    int getLineColor() -> getLineColor
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    void setLineKey(java.lang.String) -> setLineKey
    java.lang.String getLineKey() -> getLineKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getDotPaint() -> getDotPaint
    void setDotRadius(int) -> setDotRadius
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
    org.xclcharts.renderer.plot.PlotLabel getPlotLabel() -> getPlotLabel
org.xclcharts.chart.PieChart -> org.xclcharts.chart.PieChart:
    java.lang.String TAG -> TAG
    boolean mGradient -> mGradient
    float mSelectedOffset -> mSelectedOffset
    java.util.List mDataset -> mDataset
    android.graphics.Paint mPaintArc -> mPaintArc
    android.graphics.RectF mRectF -> mRectF
    android.graphics.Paint mPaintArcBorder -> mPaintArcBorder
    boolean mSaveLabelsPosition -> mSaveLabelsPosition
    org.xclcharts.renderer.XEnum$LabelSaveType mLabelSaveType -> mLabelSaveType
    java.util.ArrayList mLstLabels -> mLstLabels
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    android.graphics.Paint geArcPaint() -> geArcPaint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void saveLabelsPosition(org.xclcharts.renderer.XEnum$LabelSaveType) -> saveLabelsPosition
    java.util.ArrayList getLabelsPosition() -> getLabelsPosition
    android.graphics.Paint getArcBorderPaint() -> getArcBorderPaint
    void showGradient() -> showGradient
    void hideGradient() -> hideGradient
    boolean getGradient() -> getGradient
    void setSelectedOffset(float) -> setSelectedOffset
    float getSelectedOffset() -> getSelectedOffset
    android.graphics.RadialGradient renderRadialGradient(android.graphics.Paint,float,float,float) -> renderRadialGradient
    boolean validateAngle(float) -> validateAngle
    void renderArcBorder(android.graphics.Canvas,android.graphics.RectF,float,float) -> renderArcBorder
    void initRectF(float,float,float,float) -> initRectF
    boolean renderLabels(android.graphics.Canvas) -> renderLabels
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean validateParams() -> validateParams
    org.xclcharts.event.click.ArcPosition getPositionRecord(float,float) -> getPositionRecord
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.PieChart3D -> org.xclcharts.chart.PieChart3D:
    java.lang.String TAG -> TAG
    int mRender3DLevel -> mRender3DLevel
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    boolean render3D(android.graphics.Canvas,float,java.util.List,float,float,float) -> render3D
    boolean renderFlatArcAndLegend(android.graphics.Canvas,float,java.util.List,float,float,float) -> renderFlatArcAndLegend
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.PieData -> org.xclcharts.chart.PieData:
    java.lang.String TAG -> TAG
    java.lang.String mPieKey -> mPieKey
    java.lang.String mPieLabel -> mPieLabel
    double mPieValue -> mPieValue
    int mPieColor -> mPieColor
    boolean mSelected -> mSelected
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    org.xclcharts.renderer.XEnum$SliceLabelStyle mLabelStyle -> mLabelStyle
    boolean mCustLabelStyle -> mCustLabelStyle
    int mCustLabelColor -> mCustLabelColor
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabel(java.lang.String) -> setLabel
    void setPercentage(double) -> setPercentage
    void setSliceColor(int) -> setSliceColor
    void setSelected(boolean) -> setSelected
    java.lang.String getLabel() -> getLabel
    double getPercentage() -> getPercentage
    boolean getSelected() -> getSelected
    int getSliceColor() -> getSliceColor
    float getSliceAngle() -> getSliceAngle
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
    void setCustLabelStyle(org.xclcharts.renderer.XEnum$SliceLabelStyle,int) -> setCustLabelStyle
    org.xclcharts.renderer.XEnum$SliceLabelStyle getLabelStyle() -> getLabelStyle
    boolean getCustLabelStyleStatus() -> getCustLabelStyleStatus
    int getCustLabelColor() -> getCustLabelColor
org.xclcharts.chart.RadarChart -> org.xclcharts.chart.RadarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.axis.DataAxisRender dataAxis -> dataAxis
    org.xclcharts.renderer.axis.CategoryAxisRender categoryAxis -> categoryAxis
    java.util.List mDataSet -> mDataSet
    java.lang.Float[][] mArrayDotX -> mArrayDotX
    java.lang.Float[][] mArrayDotY -> mArrayDotY
    java.lang.Float[][] mArrayLabelX -> mArrayLabelX
    java.lang.Float[][] mArrayLabelY -> mArrayLabelY
    java.lang.Float[] mArrayLabelAgent -> mArrayLabelAgent
    java.lang.Float[] mArrayRadius -> mArrayRadius
    int mLabelOffset -> mLabelOffset
    int mAreaAlpha -> mAreaAlpha
    android.graphics.Path mRdPath -> mRdPath
    org.xclcharts.renderer.XEnum$RadarChartType mRadarChartType -> mRadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarDataAreaStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarDataAreaStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void clearArray() -> clearArray
    void setChartType(org.xclcharts.renderer.XEnum$RadarChartType) -> setChartType
    org.xclcharts.renderer.axis.DataAxis getDataAxis() -> getDataAxis
    org.xclcharts.renderer.axis.CategoryAxis getCategoryAxis() -> getCategoryAxis
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setAreaAlpha(int) -> setAreaAlpha
    boolean validateParams() -> validateParams
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderGridLinesRadar(android.graphics.Canvas) -> renderGridLinesRadar
    void renderGridLinesRound(android.graphics.Canvas) -> renderGridLinesRound
    void renderAxisLines(android.graphics.Canvas) -> renderAxisLines
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    int getAxisTickCount() -> getAxisTickCount
    int getPlotAgentNumber() -> getPlotAgentNumber
    void setlabelOffset(int) -> setlabelOffset
    void calcAllPoints() -> calcAllPoints
    void renderDataArea(android.graphics.Canvas) -> renderDataArea
    void renderDataLine(android.graphics.Canvas,org.xclcharts.chart.RadarData,java.lang.Float[],java.lang.Float[],int) -> renderDataLine
    void drawDataPath(android.graphics.Canvas,org.xclcharts.chart.RadarData,java.lang.Float[],java.lang.Float[],int) -> drawDataPath
    void renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.RadarData,float,float,int,int) -> renderDotAndLabel
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarDataAreaStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarDataAreaStyle
org.xclcharts.chart.RadarData -> org.xclcharts.chart.RadarData:
    org.xclcharts.renderer.XEnum$RadarDataAreaStyle mAreaStyle -> mAreaStyle
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    void setAreaStyle(org.xclcharts.renderer.XEnum$RadarDataAreaStyle) -> setAreaStyle
    org.xclcharts.renderer.XEnum$RadarDataAreaStyle getAreaStyle() -> getAreaStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
org.xclcharts.chart.RangeBarChart -> org.xclcharts.chart.RangeBarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.FlatBar mFlatBar -> mFlatBar
    java.util.List mDataSet -> mDataSet
    java.lang.String mKey -> mKey
    float mBarWidth -> mBarWidth
    boolean mLabelVisible -> mLabelVisible
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setBarWidth(float) -> setBarWidth
    float getBarWidth() -> getBarWidth
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    float[] cataPosition(double,double) -> cataPosition
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    void renderAxesTick(android.graphics.Canvas) -> renderAxesTick
    org.xclcharts.event.click.BarPosition getPositionRecord(float,float) -> getPositionRecord
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
org.xclcharts.chart.RangeBarData -> org.xclcharts.chart.RangeBarData:
    double mMax -> mMax
    double mMin -> mMin
    double mX -> mX
    void setMax(double) -> setMax
    void setMin(double) -> setMin
    double getMax() -> getMax
    double getMin() -> getMin
    void setX(double) -> setX
    double getX() -> getX
org.xclcharts.chart.RoseChart -> org.xclcharts.chart.RoseChart:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintInner -> mPaintInner
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    boolean validateParams() -> validateParams
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.ScatterChart -> org.xclcharts.chart.ScatterChart:
    java.lang.String TAG -> TAG
    java.util.List mDataset -> mDataset
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    android.graphics.Paint mPaintPoint -> mPaintPoint
    org.xclcharts.renderer.plot.PlotQuadrantRender mPlotQuadrant -> mPlotQuadrant
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    org.xclcharts.renderer.plot.PlotQuadrant getPlotQuadrant() -> getPlotQuadrant
    android.graphics.Paint getPointPaint() -> getPointPaint
    void drawQuadrant(android.graphics.Canvas) -> drawQuadrant
    void renderPoints(android.graphics.Canvas,org.xclcharts.chart.ScatterData,int) -> renderPoints
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.ScatterData -> org.xclcharts.chart.ScatterData:
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    java.util.LinkedHashMap mPointMap -> mPointMap
    android.graphics.Paint mLabelPaint -> mLabelPaint
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.LinkedHashMap) -> setDataSet
    java.util.LinkedHashMap getDataSet() -> getDataSet
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    org.xclcharts.renderer.line.PlotDot getPlotDot() -> getPlotDot
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.SplineChart -> org.xclcharts.chart.SplineChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    org.xclcharts.renderer.line.PlotCustomLine mCustomLine -> mCustomLine
    java.util.List mLstPoints -> mLstPoints
    android.graphics.Path mBezierPath -> mBezierPath
    java.util.List mLstDots -> mLstDots
    java.util.List mLstKey -> mLstKey
    org.xclcharts.renderer.XEnum$CrurveLineStyle mCrurveLineStyle -> mCrurveLineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    void setCustomLines(java.util.List) -> setCustomLines
    void setCrurveLineStyle(org.xclcharts.renderer.XEnum$CrurveLineStyle) -> setCrurveLineStyle
    org.xclcharts.renderer.XEnum$CrurveLineStyle getCrurveLineStyle() -> getCrurveLineStyle
    void calcAllPoints(org.xclcharts.chart.SplineData,java.util.List,java.util.List) -> calcAllPoints
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.SplineData,java.util.List) -> renderLine
    boolean renderBezierCurveLine(android.graphics.Canvas,android.graphics.Path,org.xclcharts.chart.SplineData,java.util.List) -> renderBezierCurveLine
    boolean renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.SplineData,int,java.util.List) -> renderDotAndLabel
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
org.xclcharts.chart.SplineData -> org.xclcharts.chart.SplineData:
    java.util.LinkedHashMap mLinePointMap -> mLinePointMap
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setLineDataSet(java.util.LinkedHashMap) -> setLineDataSet
    java.util.LinkedHashMap getLineDataSet() -> getLineDataSet
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.StackBarChart -> org.xclcharts.chart.StackBarChart:
    org.xclcharts.renderer.bar.FlatBar flatBar -> flatBar
    boolean mTotalLabelVisible -> mTotalLabelVisible
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setTotalLabelVisible(boolean) -> setTotalLabelVisible
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
org.xclcharts.common.CurveHelper -> org.xclcharts.common.CurveHelper:
    void curve3(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> curve3
org.xclcharts.common.DensityUtil -> org.xclcharts.common.DensityUtil:
    float getDensity(android.content.Context) -> getDensity
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getWidth(android.view.View) -> getWidth
    int getHeight(android.view.View) -> getHeight
org.xclcharts.common.DrawHelper -> org.xclcharts.common.DrawHelper:
    org.xclcharts.common.DrawHelper instance -> instance
    android.graphics.RectF mRectF -> mRectF
    android.graphics.Path mPath -> mPath
    android.graphics.Paint mPaint -> mPaint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    org.xclcharts.common.DrawHelper getInstance() -> getInstance
    void initRectF() -> initRectF
    void initPath() -> initPath
    void initPaint() -> initPaint
    int randomColor() -> randomColor
    int getLightColor(int,int) -> getLightColor
    int getDarkerColor(int) -> getDarkerColor
    int getPaintFontHeight(android.graphics.Paint) -> getPaintFontHeight
    float getTextWidth(android.graphics.Paint,java.lang.String) -> getTextWidth
    int calcTextHeight(android.graphics.Paint,java.lang.String) -> calcTextHeight
    void drawRotateText(java.lang.String,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawRotateText
    void drawTrigangle(float,float,float,org.xclcharts.renderer.XEnum$TriangleDirection,org.xclcharts.renderer.XEnum$TriangleStyle,android.graphics.Canvas,android.graphics.Paint) -> drawTrigangle
    android.graphics.PathEffect getDotLineStyle() -> getDotLineStyle
    android.graphics.PathEffect getDashLineStyle() -> getDashLineStyle
    void drawDotLine(float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawDotLine
    void drawDashLine(float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawDashLine
    void drawLine(org.xclcharts.renderer.XEnum$LineStyle,float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawLine
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float,boolean) -> drawPercent
    void drawPathArc(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPathArc
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
org.xclcharts.common.IFormatterDoubleCallBack -> org.xclcharts.common.IFormatterDoubleCallBack:
    java.lang.String doubleFormatter(java.lang.Double) -> doubleFormatter
org.xclcharts.common.IFormatterTextCallBack -> org.xclcharts.common.IFormatterTextCallBack:
    java.lang.String textFormatter(java.lang.String) -> textFormatter
org.xclcharts.common.MathHelper -> org.xclcharts.common.MathHelper:
    org.xclcharts.common.MathHelper instance -> instance
    float mPosX -> mPosX
    float mPosY -> mPosY
    android.graphics.PointF mPointF -> mPointF
    int DEFAULT_DIV_SCALE -> DEFAULT_DIV_SCALE
    org.xclcharts.common.MathHelper getInstance() -> getInstance
    void resetEndPointXY() -> resetEndPointXY
    android.graphics.PointF calcArcEndPointXY(float,float,float,float) -> calcArcEndPointXY
    android.graphics.PointF getArcEndPointF() -> getArcEndPointF
    float getPosX() -> getPosX
    float getPosY() -> getPosY
    double getDegree(float,float,float,float) -> getDegree
    double getDistance(float,float,float,float) -> getDistance
    float add(float,float) -> add
    float sub(float,float) -> sub
    float mul(float,float) -> mul
    float div(float,float) -> div
    float div(float,float,int) -> div
    float round(float,int) -> round
    double ftod(float) -> ftod
    float dtof(double) -> dtof
    double add(double,double) -> add
    double sub(double,double) -> sub
    double div(double,double) -> div
    double div(double,double,int) -> div
org.xclcharts.common.PointHelper -> org.xclcharts.common.PointHelper:
    android.graphics.PointF center(android.graphics.PointF,android.graphics.PointF) -> center
    float distance(android.graphics.PointF,android.graphics.PointF) -> distance
    android.graphics.PointF translate(android.graphics.PointF,float,float) -> translate
    android.graphics.PointF percent(android.graphics.PointF,android.graphics.PointF,float) -> percent
    android.graphics.PointF percent(android.graphics.PointF,float,android.graphics.PointF,float) -> percent
org.xclcharts.common.SysinfoHelper -> org.xclcharts.common.SysinfoHelper:
    org.xclcharts.common.SysinfoHelper instance -> instance
    org.xclcharts.common.SysinfoHelper getInstance() -> getInstance
    boolean supportHardwareAccelerated() -> supportHardwareAccelerated
org.xclcharts.event.click.ArcPosition -> org.xclcharts.event.click.ArcPosition:
    float mOffsetAngle -> mOffsetAngle
    float mCurrentAngle -> mCurrentAngle
    float mRadius -> mRadius
    float mSelectedOffset -> mSelectedOffset
    float mInitAngle -> mInitAngle
    android.graphics.PointF mCirXY -> mCirXY
    float getAngle() -> getAngle
    void saveInitialAngle(float) -> saveInitialAngle
    float getRadius() -> getRadius
    android.graphics.PointF getPointF() -> getPointF
    float getStartAngle() -> getStartAngle
    float getSweepAngle() -> getSweepAngle
    float getSelectedOffset() -> getSelectedOffset
    boolean compareRange(float,float) -> compareRange
    boolean compareRadius(float,float) -> compareRadius
org.xclcharts.event.click.BarPosition -> org.xclcharts.event.click.BarPosition:
org.xclcharts.event.click.ChartArcListener -> org.xclcharts.event.click.ChartArcListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.ArcPosition) -> onClick
org.xclcharts.event.click.ChartBarListener -> org.xclcharts.event.click.ChartBarListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.BarPosition) -> onClick
org.xclcharts.event.click.ChartPointListener -> org.xclcharts.event.click.ChartPointListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.PointPosition) -> onClick
org.xclcharts.event.click.PlotArcPosition -> org.xclcharts.event.click.PlotArcPosition:
    void saveAngle(float,float,float,float) -> saveAngle
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotCirXY(float,float) -> savePlotCirXY
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PlotBarPosition -> org.xclcharts.event.click.PlotBarPosition:
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotRectF(float,float,float,float) -> savePlotRectF
    void savePlotRectF(android.graphics.RectF) -> savePlotRectF
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PlotPointPosition -> org.xclcharts.event.click.PlotPointPosition:
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotPosition(float,float) -> savePlotPosition
    void savePlotRectF(float,float,float,float) -> savePlotRectF
    void savePlotRectF(android.graphics.RectF) -> savePlotRectF
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PointPosition -> org.xclcharts.event.click.PointPosition:
    android.graphics.PointF mPoint -> mPoint
    android.graphics.PointF getPosition() -> getPosition
    java.lang.String getPointInfo() -> getPointInfo
org.xclcharts.event.click.PositionListener -> org.xclcharts.event.click.PositionListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.PositionRecord) -> onClick
org.xclcharts.event.click.PositionRecord -> org.xclcharts.event.click.PositionRecord:
    int mDataID -> mDataID
    int mDataChildID -> mDataChildID
    boolean compareRange(float,float) -> compareRange
    int getDataID() -> getDataID
    int getDataChildID() -> getDataChildID
    int getRecordID() -> getRecordID
    void saveDataID(int) -> saveDataID
    void saveDataChildID(int) -> saveDataChildID
org.xclcharts.event.click.RectPosition -> org.xclcharts.event.click.RectPosition:
    android.graphics.RectF mRectF -> mRectF
    android.graphics.RectF mRectFRange -> mRectFRange
    int mExtValue -> mExtValue
    void extPointClickRange(int) -> extPointClickRange
    void saveRectF(float,float,float,float) -> saveRectF
    void saveRectF(android.graphics.RectF) -> saveRectF
    float getRadius() -> getRadius
    java.lang.String getRectInfo() -> getRectInfo
    android.graphics.RectF getRectF() -> getRectF
    boolean compareRange(float,float) -> compareRange
org.xclcharts.event.touch.ChartTouch -> org.xclcharts.event.touch.ChartTouch:
    android.view.View mView -> mView
    org.xclcharts.renderer.XChart mChart -> mChart
    float oldX -> oldX
    float oldY -> oldY
    float oldDist -> oldDist
    float newDist -> newDist
    float halfDist -> halfDist
    float scaleRate -> scaleRate
    int action -> action
    float newX -> newX
    float newY -> newY
    float FIXED_RANGE -> FIXED_RANGE
    void handleTouch(android.view.MotionEvent) -> handleTouch
    void handleTouch_Scale(android.view.MotionEvent) -> handleTouch_Scale
    void handleTouch_PanMode(android.view.MotionEvent) -> handleTouch_PanMode
    void setLocation(float,float,float,float) -> setLocation
    float spacing(android.view.MotionEvent) -> spacing
org.xclcharts.event.touch.IChartTouch -> org.xclcharts.event.touch.IChartTouch:
    void handleTouch(android.view.MotionEvent) -> handleTouch
org.xclcharts.renderer.AxesChart -> org.xclcharts.renderer.AxesChart:
    org.xclcharts.renderer.axis.DataAxisRender dataAxis -> dataAxis
    org.xclcharts.renderer.axis.CategoryAxisRender categoryAxis -> categoryAxis
    org.xclcharts.renderer.plot.AxisTitleRender axisTitle -> axisTitle
    org.xclcharts.common.IFormatterDoubleCallBack mItemLabelFormatter -> mItemLabelFormatter
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    float mMoveX -> mMoveX
    float mMoveY -> mMoveY
    org.xclcharts.renderer.XEnum$Location mDataAxisLocation -> mDataAxisLocation
    org.xclcharts.renderer.XEnum$Location mCategoryAxisLocation -> mCategoryAxisLocation
    boolean mAxesClosed -> mAxesClosed
    float myMargin -> myMargin
    float mxMargin -> mxMargin
    java.util.ArrayList mLstDataTick -> mLstDataTick
    java.util.ArrayList mLstCateTick -> mLstCateTick
    org.xclcharts.renderer.AxesChart$ClipExt mClipExt -> mClipExt
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void initChart() -> initChart
    org.xclcharts.renderer.axis.DataAxis getDataAxis() -> getDataAxis
    org.xclcharts.renderer.axis.CategoryAxis getCategoryAxis() -> getCategoryAxis
    void initCategoryAxis() -> initCategoryAxis
    void initDataAxis() -> initDataAxis
    void drawCategoryAxisLabels(android.graphics.Canvas,java.util.ArrayList) -> drawCategoryAxisLabels
    void drawDataAxisLabels(android.graphics.Canvas,java.util.ArrayList) -> drawDataAxisLabels
    org.xclcharts.renderer.plot.AxisTitle getAxisTitle() -> getAxisTitle
    float getAxisScreenWidth() -> getAxisScreenWidth
    float getPlotScreenWidth() -> getPlotScreenWidth
    float getPlotScreenHeight() -> getPlotScreenHeight
    float getAxisScreenHeight() -> getAxisScreenHeight
    float getVerticalYSteps(int) -> getVerticalYSteps
    float getVerticalXSteps(int) -> getVerticalXSteps
    void setItemLabelFormatter(org.xclcharts.common.IFormatterDoubleCallBack) -> setItemLabelFormatter
    java.lang.String getFormatterItemLabel(double) -> getFormatterItemLabel
    boolean isDrawYAxisTickMarks(float,float) -> isDrawYAxisTickMarks
    boolean isDrawXAxisTickMarks(float,float) -> isDrawXAxisTickMarks
    void drawHorizontalGridLines(android.graphics.Canvas,float,float,int,int,float,float) -> drawHorizontalGridLines
    void drawVerticalGridLines(android.graphics.Canvas,float,float,int,int,float,float) -> drawVerticalGridLines
    void setDataAxisLocation(org.xclcharts.renderer.XEnum$Location) -> setDataAxisLocation
    org.xclcharts.renderer.XEnum$Location getDataAxisLocation() -> getDataAxisLocation
    void setCategoryAxisLocation(org.xclcharts.renderer.XEnum$Location) -> setCategoryAxisLocation
    org.xclcharts.renderer.XEnum$Location getCategoryAxisLocation() -> getCategoryAxisLocation
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setAxesClosed(boolean) -> setAxesClosed
    boolean getAxesClosedStatus() -> getAxesClosedStatus
    void initMoveXY() -> initMoveXY
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipAxisLine(android.graphics.Canvas) -> drawClipAxisLine
    void drawClipDataAxisTickMarks(android.graphics.Canvas) -> drawClipDataAxisTickMarks
    void drawClipCategoryAxisTickMarks(android.graphics.Canvas) -> drawClipCategoryAxisTickMarks
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    boolean drawFixedPlot(android.graphics.Canvas) -> drawFixedPlot
    void setXTickMarksOffsetMargin(float) -> setXTickMarksOffsetMargin
    void setYTickMarksOffsetMargin(float) -> setYTickMarksOffsetMargin
    float getClipYMargin() -> getClipYMargin
    float getClipXMargin() -> getClipXMargin
    org.xclcharts.renderer.AxesChart$ClipExt getClipExt() -> getClipExt
    boolean drawClipVerticalPlot(android.graphics.Canvas) -> drawClipVerticalPlot
    boolean drawClipHorizontalPlot(android.graphics.Canvas) -> drawClipHorizontalPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.AxesChart$ClipExt -> org.xclcharts.renderer.AxesChart$ClipExt:
    float mClipExtLeft -> mClipExtLeft
    float mClipExtTop -> mClipExtTop
    float mClipExtRight -> mClipExtRight
    float mClipExtBottom -> mClipExtBottom
    float clipExtLeft -> clipExtLeft
    float clipExtTop -> clipExtTop
    float clipExtRight -> clipExtRight
    float clipExtBottom -> clipExtBottom
    org.xclcharts.renderer.AxesChart this$0 -> this$0
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType
    void setExtLeft(float) -> setExtLeft
    void setExtTop(float) -> setExtTop
    void setExtRight(float) -> setExtRight
    void setExtBottom(float) -> setExtBottom
    void calc(org.xclcharts.renderer.XEnum$ChartType) -> calc
    float getExtLeft() -> getExtLeft
    float getExtTop() -> getExtTop
    float getExtRight() -> getExtRight
    float getExtBottom() -> getExtBottom
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType
org.xclcharts.renderer.CirChart -> org.xclcharts.renderer.CirChart:
    java.lang.String TAG -> TAG
    float mRadius -> mRadius
    org.xclcharts.renderer.XEnum$SliceLabelStyle mLabelStyle -> mLabelStyle
    android.graphics.Paint mPaintLabel -> mPaintLabel
    float mOffsetAngle -> mOffsetAngle
    org.xclcharts.renderer.plot.LabelBrokenLineRender mLabelLine -> mLabelLine
    boolean mIsLabelLineSyncColor -> mIsLabelLineSyncColor
    boolean mIsLabelPointSyncColor -> mIsLabelPointSyncColor
    boolean mIsLabelSyncColor -> mIsLabelSyncColor
    org.xclcharts.renderer.plot.PlotLabelRender mPlotLabel -> mPlotLabel
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void calcPlotRange() -> calcPlotRange
    float getRadius() -> getRadius
    void setInitialAngle(float) -> setInitialAngle
    float getInitialAngle() -> getInitialAngle
    void setLabelStyle(org.xclcharts.renderer.XEnum$SliceLabelStyle) -> setLabelStyle
    org.xclcharts.renderer.XEnum$SliceLabelStyle getLabelStyle() -> getLabelStyle
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    org.xclcharts.renderer.plot.LabelBrokenLine getLabelBrokenLine() -> getLabelBrokenLine
    android.graphics.PointF renderLabelInside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelInside
    android.graphics.PointF renderLabelOutside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelOutside
    android.graphics.PointF renderLabelLine(android.graphics.Canvas,org.xclcharts.chart.PieData,float,float,float,float,boolean) -> renderLabelLine
    void syncLabelLineColor() -> syncLabelLineColor
    void syncLabelPointColor() -> syncLabelPointColor
    void syncLabelColor() -> syncLabelColor
    org.xclcharts.renderer.plot.PlotLabel getPlotLabel() -> getPlotLabel
    boolean renderLabel(android.graphics.Canvas,org.xclcharts.chart.PieData,org.xclcharts.renderer.info.PlotArcLabelInfo,boolean,boolean) -> renderLabel
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.EventChart -> org.xclcharts.renderer.EventChart:
    java.lang.String TAG -> TAG
    boolean mListenClick -> mListenClick
    int mClickRangeExtValue -> mClickRangeExtValue
    java.util.ArrayList mRecordset -> mRecordset
    int mSelectID -> mSelectID
    int mSelectDataID -> mSelectDataID
    int mSelectDataChildID -> mSelectDataChildID
    boolean mShowClikedFocus -> mShowClikedFocus
    android.graphics.Paint mFocusPaint -> mFocusPaint
    android.graphics.PointF mFocusPoint -> mFocusPoint
    float mFocusRadius -> mFocusRadius
    android.graphics.RectF mFocusRect -> mFocusRect
    org.xclcharts.event.click.ArcPosition mFocusArcPosition -> mFocusArcPosition
    boolean mFocusArcSelect -> mFocusArcSelect
    org.xclcharts.renderer.info.ToolTipRender mToolTip -> mToolTip
    void ActiveListenItemClick() -> ActiveListenItemClick
    void DeactiveListenItemClick() -> DeactiveListenItemClick
    boolean getListenItemClickStatus() -> getListenItemClickStatus
    java.util.ArrayList getPositionRecordset() -> getPositionRecordset
    void showClikedFocus() -> showClikedFocus
    void clearSelected() -> clearSelected
    void saveSelected(int,int,int) -> saveSelected
    int getSelected() -> getSelected
    void savePointRecord(int,int,float,float,android.graphics.RectF) -> savePointRecord
    void savePointRecord(int,int,float,float,float,float,float,float) -> savePointRecord
    void saveBarRectFRecord(int,int,float,float,float,float) -> saveBarRectFRecord
    void saveBarRecord(int,int,float,float,android.graphics.RectF) -> saveBarRecord
    void saveArcRecord(int,float,float,float,float,float,float,float) -> saveArcRecord
    void extPointClickRange(int) -> extPointClickRange
    boolean isPlotClickArea(float,float) -> isPlotClickArea
    org.xclcharts.event.click.ArcPosition getArcRecord(float,float) -> getArcRecord
    org.xclcharts.event.click.BarPosition getBarRecord(float,float) -> getBarRecord
    org.xclcharts.event.click.PointPosition getPointRecord(float,float) -> getPointRecord
    void initPositionRecord() -> initPositionRecord
    android.graphics.Paint getFocusPaint() -> getFocusPaint
    void showFocusPointF(android.graphics.PointF,float) -> showFocusPointF
    void showFocusRectF(android.graphics.RectF) -> showFocusRectF
    void showFocusArc(org.xclcharts.event.click.ArcPosition) -> showFocusArc
    void showFocusArc(org.xclcharts.event.click.ArcPosition,boolean) -> showFocusArc
    org.xclcharts.renderer.info.ToolTip getToolTip() -> getToolTip
    void renderToolTip(android.graphics.Canvas) -> renderToolTip
    boolean drawFocusRect(android.graphics.Canvas,int,int,float,float,float,float) -> drawFocusRect
    boolean renderFocusShape(android.graphics.Canvas) -> renderFocusShape
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.renderer.IRender -> org.xclcharts.renderer.IRender:
    boolean render(android.graphics.Canvas) -> render
org.xclcharts.renderer.LnChart -> org.xclcharts.renderer.LnChart:
    java.lang.String TAG -> TAG
    android.graphics.PointF[] BezierControls -> BezierControls
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    int getCategoryAxisCount() -> getCategoryAxisCount
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    boolean isPlotClickArea(float,float) -> isPlotClickArea
    org.xclcharts.event.click.PointPosition getPositionRecord(float,float) -> getPositionRecord
    void renderBezierCurveLine(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,java.util.List) -> renderBezierCurveLine
    void renderBezierCurvePath(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> renderBezierCurvePath
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
org.xclcharts.renderer.RdChart -> org.xclcharts.renderer.RdChart:
    java.lang.String TAG -> TAG
    float mRadius -> mRadius
    int mOffsetAngle -> mOffsetAngle
    org.xclcharts.common.IFormatterDoubleCallBack mDotLabelFormatter -> mDotLabelFormatter
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLine -> mPaintLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void calcPlotRange() -> calcPlotRange
    org.xclcharts.event.click.PointPosition getPositionRecord(float,float) -> getPositionRecord
    float getRadius() -> getRadius
    void setInitialAngle(int) -> setInitialAngle
    int getInitialAngle() -> getInitialAngle
    void setDotLabelFormatter(org.xclcharts.common.IFormatterDoubleCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(double) -> getFormatterDotLabel
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.XChart -> org.xclcharts.renderer.XChart:
    org.xclcharts.renderer.plot.PlotAreaRender plotArea -> plotArea
    org.xclcharts.renderer.plot.PlotGridRender plotGrid -> plotGrid
    org.xclcharts.renderer.plot.PlotTitleRender plotTitle -> plotTitle
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    float mWidth -> mWidth
    float mHeight -> mHeight
    float mPaddingTop -> mPaddingTop
    float mPaddingBottom -> mPaddingBottom
    float mPaddingLeft -> mPaddingLeft
    float mPaddingRight -> mPaddingRight
    boolean mBackgroundColorVisible -> mBackgroundColorVisible
    float[] mTranslateXY -> mTranslateXY
    boolean mShowBorder -> mShowBorder
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    org.xclcharts.renderer.plot.PlotLegendRender plotLegend -> plotLegend
    org.xclcharts.renderer.info.LegendRender mDyLegend -> mDyLegend
    boolean mEnableScale -> mEnableScale
    float mXScale -> mXScale
    float mYScale -> mYScale
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    boolean mEnableGC -> mEnableGC
    boolean mDyLineVisible -> mDyLineVisible
    org.xclcharts.renderer.info.DyLineRender mDyLine -> mDyLine
    boolean mEnablePanMode -> mEnablePanMode
    org.xclcharts.renderer.XEnum$PanMode mPlotPanMode -> mPlotPanMode
    void initChart() -> initChart
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    org.xclcharts.renderer.plot.PlotLegend getPlotLegend() -> getPlotLegend
    void setPadding(float,float,float,float) -> setPadding
    org.xclcharts.renderer.plot.PlotArea getPlotArea() -> getPlotArea
    org.xclcharts.renderer.plot.PlotGrid getPlotGrid() -> getPlotGrid
    org.xclcharts.renderer.plot.PlotTitle getPlotTitle() -> getPlotTitle
    void setChartRange(float,float) -> setChartRange
    void setChartRange(float,float,float,float) -> setChartRange
    void setTitle(java.lang.String) -> setTitle
    void addSubtitle(java.lang.String) -> addSubtitle
    void setTitleVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setTitleVerticalAlign
    void setTitleAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setTitleAlign
    float getLeft() -> getLeft
    float getTop() -> getTop
    float getRight() -> getRight
    float getBottom() -> getBottom
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getPaddingTop() -> getPaddingTop
    float getPaddingBottom() -> getPaddingBottom
    float getPaddingLeft() -> getPaddingLeft
    float getPaddingRight() -> getPaddingRight
    android.graphics.PointF getCenterXY() -> getCenterXY
    void setTranslateXY(float,float) -> setTranslateXY
    float[] getTranslateXY() -> getTranslateXY
    void calcPlotRange() -> calcPlotRange
    void renderTitle(android.graphics.Canvas) -> renderTitle
    void setApplyBackgroundColor(boolean) -> setApplyBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    void showBorder() -> showBorder
    void showRoundBorder() -> showRoundBorder
    void hideBorder() -> hideBorder
    org.xclcharts.renderer.plot.Border getBorder() -> getBorder
    boolean isShowBorder() -> isShowBorder
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void renderBorder(android.graphics.Canvas) -> renderBorder
    void renderChartBackground(android.graphics.Canvas) -> renderChartBackground
    void setScale(float,float,float,float) -> setScale
    boolean getClikedScaleStatus() -> getClikedScaleStatus
    void scaleChart(android.graphics.Canvas) -> scaleChart
    void enableScale() -> enableScale
    void disableScale() -> disableScale
    boolean getScaleStatus() -> getScaleStatus
    void setPlotPanMode(org.xclcharts.renderer.XEnum$PanMode) -> setPlotPanMode
    org.xclcharts.renderer.XEnum$PanMode getPlotPanMode() -> getPlotPanMode
    void enablePanMode() -> enablePanMode
    void disablePanMode() -> disablePanMode
    boolean getPanModeStatus() -> getPanModeStatus
    org.xclcharts.renderer.info.Legend getDyLegend() -> getDyLegend
    void disableGC() -> disableGC
    void enableGC() -> enableGC
    void execGC() -> execGC
    void showDyLine() -> showDyLine
    void hideDyLine() -> hideDyLine
    boolean getDyLineVisible() -> getDyLineVisible
    org.xclcharts.renderer.info.DyLine getDyLine() -> getDyLine
    void drawDyLine(android.graphics.Canvas) -> drawDyLine
    void drawDyLegend(android.graphics.Canvas) -> drawDyLegend
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    float add(float,float) -> add
    float sub(float,float) -> sub
    float mul(float,float) -> mul
    float div(float,float) -> div
    float dtof(double) -> dtof
org.xclcharts.renderer.XEnum -> org.xclcharts.renderer.XEnum:
org.xclcharts.renderer.XEnum$BarStyle -> org.xclcharts.renderer.XEnum$BarStyle:
    org.xclcharts.renderer.XEnum$BarStyle GRADIENT -> GRADIENT
    org.xclcharts.renderer.XEnum$BarStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$BarStyle STROKE -> STROKE
    org.xclcharts.renderer.XEnum$BarStyle OUTLINE -> OUTLINE
    org.xclcharts.renderer.XEnum$BarStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$BarStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$BarStyle[] values() -> values
    org.xclcharts.renderer.XEnum$BarStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$ChartType -> org.xclcharts.renderer.XEnum$ChartType:
    org.xclcharts.renderer.XEnum$ChartType NONE -> NONE
    org.xclcharts.renderer.XEnum$ChartType BAR -> BAR
    org.xclcharts.renderer.XEnum$ChartType BAR3D -> BAR3D
    org.xclcharts.renderer.XEnum$ChartType STACKBAR -> STACKBAR
    org.xclcharts.renderer.XEnum$ChartType PIE -> PIE
    org.xclcharts.renderer.XEnum$ChartType PIE3D -> PIE3D
    org.xclcharts.renderer.XEnum$ChartType DOUNT -> DOUNT
    org.xclcharts.renderer.XEnum$ChartType LINE -> LINE
    org.xclcharts.renderer.XEnum$ChartType SPLINE -> SPLINE
    org.xclcharts.renderer.XEnum$ChartType AREA -> AREA
    org.xclcharts.renderer.XEnum$ChartType ROSE -> ROSE
    org.xclcharts.renderer.XEnum$ChartType RADAR -> RADAR
    org.xclcharts.renderer.XEnum$ChartType DIAL -> DIAL
    org.xclcharts.renderer.XEnum$ChartType RANGEBAR -> RANGEBAR
    org.xclcharts.renderer.XEnum$ChartType ARCLINE -> ARCLINE
    org.xclcharts.renderer.XEnum$ChartType CIRCLE -> CIRCLE
    org.xclcharts.renderer.XEnum$ChartType SCATTER -> SCATTER
    org.xclcharts.renderer.XEnum$ChartType BUBBLE -> BUBBLE
    org.xclcharts.renderer.XEnum$ChartType GAUGE -> GAUGE
    org.xclcharts.renderer.XEnum$ChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$ChartType[] values() -> values
    org.xclcharts.renderer.XEnum$ChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$CircleType -> org.xclcharts.renderer.XEnum$CircleType:
    org.xclcharts.renderer.XEnum$CircleType FULL -> FULL
    org.xclcharts.renderer.XEnum$CircleType HALF -> HALF
    org.xclcharts.renderer.XEnum$CircleType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$CircleType[] values() -> values
    org.xclcharts.renderer.XEnum$CircleType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$CrurveLineStyle -> org.xclcharts.renderer.XEnum$CrurveLineStyle:
    org.xclcharts.renderer.XEnum$CrurveLineStyle BEELINE -> BEELINE
    org.xclcharts.renderer.XEnum$CrurveLineStyle BEZIERCURVE -> BEZIERCURVE
    org.xclcharts.renderer.XEnum$CrurveLineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$CrurveLineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$CrurveLineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$Direction -> org.xclcharts.renderer.XEnum$Direction:
    org.xclcharts.renderer.XEnum$Direction HORIZONTAL -> HORIZONTAL
    org.xclcharts.renderer.XEnum$Direction VERTICAL -> VERTICAL
    org.xclcharts.renderer.XEnum$Direction[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$Direction[] values() -> values
    org.xclcharts.renderer.XEnum$Direction valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DotStyle -> org.xclcharts.renderer.XEnum$DotStyle:
    org.xclcharts.renderer.XEnum$DotStyle HIDE -> HIDE
    org.xclcharts.renderer.XEnum$DotStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$DotStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$DotStyle DOT -> DOT
    org.xclcharts.renderer.XEnum$DotStyle RING -> RING
    org.xclcharts.renderer.XEnum$DotStyle PRISMATIC -> PRISMATIC
    org.xclcharts.renderer.XEnum$DotStyle X -> X
    org.xclcharts.renderer.XEnum$DotStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DotStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DotStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DyInfoStyle -> org.xclcharts.renderer.XEnum$DyInfoStyle:
    org.xclcharts.renderer.XEnum$DyInfoStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$DyInfoStyle ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$DyInfoStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DyInfoStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DyInfoStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DyLineStyle -> org.xclcharts.renderer.XEnum$DyLineStyle:
    org.xclcharts.renderer.XEnum$DyLineStyle Cross -> Cross
    org.xclcharts.renderer.XEnum$DyLineStyle BackwardDiagonal -> BackwardDiagonal
    org.xclcharts.renderer.XEnum$DyLineStyle Vertical -> Vertical
    org.xclcharts.renderer.XEnum$DyLineStyle Horizontal -> Horizontal
    org.xclcharts.renderer.XEnum$DyLineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DyLineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DyLineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$HorizontalAlign -> org.xclcharts.renderer.XEnum$HorizontalAlign:
    org.xclcharts.renderer.XEnum$HorizontalAlign LEFT -> LEFT
    org.xclcharts.renderer.XEnum$HorizontalAlign CENTER -> CENTER
    org.xclcharts.renderer.XEnum$HorizontalAlign RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$HorizontalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$HorizontalAlign[] values() -> values
    org.xclcharts.renderer.XEnum$HorizontalAlign valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LabelLinePoint -> org.xclcharts.renderer.XEnum$LabelLinePoint:
    org.xclcharts.renderer.XEnum$LabelLinePoint NONE -> NONE
    org.xclcharts.renderer.XEnum$LabelLinePoint BEGIN -> BEGIN
    org.xclcharts.renderer.XEnum$LabelLinePoint END -> END
    org.xclcharts.renderer.XEnum$LabelLinePoint ALL -> ALL
    org.xclcharts.renderer.XEnum$LabelLinePoint[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LabelLinePoint[] values() -> values
    org.xclcharts.renderer.XEnum$LabelLinePoint valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LabelSaveType -> org.xclcharts.renderer.XEnum$LabelSaveType:
    org.xclcharts.renderer.XEnum$LabelSaveType NONE -> NONE
    org.xclcharts.renderer.XEnum$LabelSaveType ONLYPOSITION -> ONLYPOSITION
    org.xclcharts.renderer.XEnum$LabelSaveType ALL -> ALL
    org.xclcharts.renderer.XEnum$LabelSaveType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LabelSaveType[] values() -> values
    org.xclcharts.renderer.XEnum$LabelSaveType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LegendType -> org.xclcharts.renderer.XEnum$LegendType:
    org.xclcharts.renderer.XEnum$LegendType COLUMN -> COLUMN
    org.xclcharts.renderer.XEnum$LegendType ROW -> ROW
    org.xclcharts.renderer.XEnum$LegendType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LegendType[] values() -> values
    org.xclcharts.renderer.XEnum$LegendType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LineStyle -> org.xclcharts.renderer.XEnum$LineStyle:
    org.xclcharts.renderer.XEnum$LineStyle SOLID -> SOLID
    org.xclcharts.renderer.XEnum$LineStyle DOT -> DOT
    org.xclcharts.renderer.XEnum$LineStyle DASH -> DASH
    org.xclcharts.renderer.XEnum$LineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$LineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$Location -> org.xclcharts.renderer.XEnum$Location:
    org.xclcharts.renderer.XEnum$Location TOP -> TOP
    org.xclcharts.renderer.XEnum$Location BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$Location LEFT -> LEFT
    org.xclcharts.renderer.XEnum$Location RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$Location[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$Location[] values() -> values
    org.xclcharts.renderer.XEnum$Location valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$PanMode -> org.xclcharts.renderer.XEnum$PanMode:
    org.xclcharts.renderer.XEnum$PanMode HORIZONTAL -> HORIZONTAL
    org.xclcharts.renderer.XEnum$PanMode VERTICAL -> VERTICAL
    org.xclcharts.renderer.XEnum$PanMode FREE -> FREE
    org.xclcharts.renderer.XEnum$PanMode[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$PanMode[] values() -> values
    org.xclcharts.renderer.XEnum$PanMode valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$PointerStyle -> org.xclcharts.renderer.XEnum$PointerStyle:
    org.xclcharts.renderer.XEnum$PointerStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$PointerStyle LINE -> LINE
    org.xclcharts.renderer.XEnum$PointerStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$PointerStyle[] values() -> values
    org.xclcharts.renderer.XEnum$PointerStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RadarChartType -> org.xclcharts.renderer.XEnum$RadarChartType:
    org.xclcharts.renderer.XEnum$RadarChartType RADAR -> RADAR
    org.xclcharts.renderer.XEnum$RadarChartType ROUND -> ROUND
    org.xclcharts.renderer.XEnum$RadarChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RadarChartType[] values() -> values
    org.xclcharts.renderer.XEnum$RadarChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RadarDataAreaStyle -> org.xclcharts.renderer.XEnum$RadarDataAreaStyle:
    org.xclcharts.renderer.XEnum$RadarDataAreaStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$RadarDataAreaStyle STROKE -> STROKE
    org.xclcharts.renderer.XEnum$RadarDataAreaStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RadarDataAreaStyle[] values() -> values
    org.xclcharts.renderer.XEnum$RadarDataAreaStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RectType -> org.xclcharts.renderer.XEnum$RectType:
    org.xclcharts.renderer.XEnum$RectType RECT -> RECT
    org.xclcharts.renderer.XEnum$RectType ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$RectType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RectType[] values() -> values
    org.xclcharts.renderer.XEnum$RectType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RoundAxisType -> org.xclcharts.renderer.XEnum$RoundAxisType:
    org.xclcharts.renderer.XEnum$RoundAxisType TICKAXIS -> TICKAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType RINGAXIS -> RINGAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType ARCLINEAXIS -> ARCLINEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType FILLAXIS -> FILLAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType CIRCLEAXIS -> CIRCLEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType LINEAXIS -> LINEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RoundAxisType[] values() -> values
    org.xclcharts.renderer.XEnum$RoundAxisType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RoundTickAxisType -> org.xclcharts.renderer.XEnum$RoundTickAxisType:
    org.xclcharts.renderer.XEnum$RoundTickAxisType INNER_TICKAXIS -> INNER_TICKAXIS
    org.xclcharts.renderer.XEnum$RoundTickAxisType OUTER_TICKAXIS -> OUTER_TICKAXIS
    org.xclcharts.renderer.XEnum$RoundTickAxisType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RoundTickAxisType[] values() -> values
    org.xclcharts.renderer.XEnum$RoundTickAxisType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$SliceLabelStyle -> org.xclcharts.renderer.XEnum$SliceLabelStyle:
    org.xclcharts.renderer.XEnum$SliceLabelStyle HIDE -> HIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle INSIDE -> INSIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle OUTSIDE -> OUTSIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle BROKENLINE -> BROKENLINE
    org.xclcharts.renderer.XEnum$SliceLabelStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$SliceLabelStyle[] values() -> values
    org.xclcharts.renderer.XEnum$SliceLabelStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TickType -> org.xclcharts.renderer.XEnum$TickType:
    org.xclcharts.renderer.XEnum$TickType MARKS -> MARKS
    org.xclcharts.renderer.XEnum$TickType LABELS -> LABELS
    org.xclcharts.renderer.XEnum$TickType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TickType[] values() -> values
    org.xclcharts.renderer.XEnum$TickType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TriangleDirection -> org.xclcharts.renderer.XEnum$TriangleDirection:
    org.xclcharts.renderer.XEnum$TriangleDirection UP -> UP
    org.xclcharts.renderer.XEnum$TriangleDirection DOWN -> DOWN
    org.xclcharts.renderer.XEnum$TriangleDirection LEFT -> LEFT
    org.xclcharts.renderer.XEnum$TriangleDirection RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$TriangleDirection[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TriangleDirection[] values() -> values
    org.xclcharts.renderer.XEnum$TriangleDirection valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TriangleStyle -> org.xclcharts.renderer.XEnum$TriangleStyle:
    org.xclcharts.renderer.XEnum$TriangleStyle OUTLINE -> OUTLINE
    org.xclcharts.renderer.XEnum$TriangleStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$TriangleStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TriangleStyle[] values() -> values
    org.xclcharts.renderer.XEnum$TriangleStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$VerticalAlign -> org.xclcharts.renderer.XEnum$VerticalAlign:
    org.xclcharts.renderer.XEnum$VerticalAlign TOP -> TOP
    org.xclcharts.renderer.XEnum$VerticalAlign MIDDLE -> MIDDLE
    org.xclcharts.renderer.XEnum$VerticalAlign BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$VerticalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$VerticalAlign[] values() -> values
    org.xclcharts.renderer.XEnum$VerticalAlign valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.axis.Axis -> org.xclcharts.renderer.axis.Axis:
    android.graphics.Paint mPaintAxis -> mPaintAxis
    boolean mAxisLineVisible -> mAxisLineVisible
    android.graphics.Paint mPaintTickMarks -> mPaintTickMarks
    android.graphics.Paint mPaintTickLabels -> mPaintTickLabels
    boolean mTickMarksVisible -> mTickMarksVisible
    boolean mAxisLabelsVisible -> mAxisLabelsVisible
    float mTickLabelRotateAngle -> mTickLabelRotateAngle
    boolean mAxisVisible -> mAxisVisible
    void initAxisPaint() -> initAxisPaint
    void initTickMarksPaint() -> initTickMarksPaint
    void initTickLabelPaint() -> initTickLabelPaint
    void show() -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void showAxisLine() -> showAxisLine
    void hideAxisLine() -> hideAxisLine
    boolean isShowAxisLine() -> isShowAxisLine
    android.graphics.Paint getAxisPaint() -> getAxisPaint
    android.graphics.Paint getTickMarksPaint() -> getTickMarksPaint
    android.graphics.Paint getTickLabelPaint() -> getTickLabelPaint
    void showTickMarks() -> showTickMarks
    void hideTickMarks() -> hideTickMarks
    boolean isShowTickMarks() -> isShowTickMarks
    void showAxisLabels() -> showAxisLabels
    void hideAxisLabels() -> hideAxisLabels
    boolean isShowAxisLabels() -> isShowAxisLabels
    float getTickLabelRotateAngle() -> getTickLabelRotateAngle
    void setTickLabelRotateAngle(float) -> setTickLabelRotateAngle
org.xclcharts.renderer.axis.CategoryAxis -> org.xclcharts.renderer.axis.CategoryAxis:
    double mAxisSteps -> mAxisSteps
    void setAxisSteps(double) -> setAxisSteps
    double getAxisSteps() -> getAxisSteps
org.xclcharts.renderer.axis.CategoryAxisRender -> org.xclcharts.renderer.axis.CategoryAxisRender:
    java.util.List getDataSet() -> getDataSet
    void renderAxisHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisHorizontalTick
    void renderAxisVerticalTick(android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisVerticalTick
    void renderAxis(android.graphics.Canvas,float,float,float,float) -> renderAxis
    void setDataBuilding(java.util.List) -> setDataBuilding
org.xclcharts.renderer.axis.DataAxis -> org.xclcharts.renderer.axis.DataAxis:
    double mDataAxisMin -> mDataAxisMin
    double mDataAxisMax -> mDataAxisMax
    double mDataAxisSteps -> mDataAxisSteps
    double mDetailModeSteps -> mDetailModeSteps
    boolean mShowFirstTick -> mShowFirstTick
    void setAxisMin(double) -> setAxisMin
    void setAxisMax(double) -> setAxisMax
    void setAxisSteps(double) -> setAxisSteps
    void setDetailModeSteps(double) -> setDetailModeSteps
    double getAxisMin() -> getAxisMin
    double getAxisMax() -> getAxisMax
    double getAxisSteps() -> getAxisSteps
    double getDetailModeSteps() -> getDetailModeSteps
    boolean isDetailMode() -> isDetailMode
    void showFirstTick() -> showFirstTick
    void hideFirstTick() -> hideFirstTick
org.xclcharts.renderer.axis.DataAxisRender -> org.xclcharts.renderer.axis.DataAxisRender:
    int mCurrentId -> mCurrentId
    double getAxisRange() -> getAxisRange
    int getAixTickCount() -> getAixTickCount
    void setAxisTickCurrentID(int) -> setAxisTickCurrentID
    boolean isPrimaryTick() -> isPrimaryTick
    boolean isPrimaryTick(int) -> isPrimaryTick
    int getTickMarksLength() -> getTickMarksLength
    boolean isShowAxisLabels() -> isShowAxisLabels
    void renderAxisHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisHorizontalTick
    void renderAxisVerticalTick(android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisVerticalTick
    void renderAxis(android.graphics.Canvas,float,float,float,float) -> renderAxis
org.xclcharts.renderer.axis.RoundAxis -> org.xclcharts.renderer.axis.RoundAxis:
    float mCirX -> mCirX
    float mCirY -> mCirY
    float mOrgRadius -> mOrgRadius
    float mRadius -> mRadius
    int mDetailModeSteps -> mDetailModeSteps
    float mRadiusPercentage -> mRadiusPercentage
    float mInnerRadiusPercentage -> mInnerRadiusPercentage
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    float mTotalAngle -> mTotalAngle
    float mInitAngle -> mInitAngle
    org.xclcharts.renderer.XEnum$RoundAxisType mAxisType -> mAxisType
    java.util.List mPercentage -> mPercentage
    java.util.List mColor -> mColor
    java.util.List mLabels -> mLabels
    android.graphics.Paint mPaintFillAxis -> mPaintFillAxis
    boolean mLongTickfakeBold -> mLongTickfakeBold
    org.xclcharts.renderer.XEnum$RoundTickAxisType mRoundTickAxisType -> mRoundTickAxisType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
    void setRoundAxisType(org.xclcharts.renderer.XEnum$RoundAxisType) -> setRoundAxisType
    void setDetailModeSteps(int) -> setDetailModeSteps
    void setDetailModeSteps(int,boolean) -> setDetailModeSteps
    float getRadius() -> getRadius
    void setRoundTickAxisType(org.xclcharts.renderer.XEnum$RoundTickAxisType) -> setRoundTickAxisType
    void setRadiusPercentage(float) -> setRadiusPercentage
    void setRingInnerRadiusPercentage(float) -> setRingInnerRadiusPercentage
    android.graphics.Paint getFillAxisPaint() -> getFillAxisPaint
    void initFillAxisPaint() -> initFillAxisPaint
    void setLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setLabelFormatter
    java.lang.String getFormatterLabel(java.lang.String) -> getFormatterLabel
    org.xclcharts.renderer.XEnum$RoundAxisType getAxisType() -> getAxisType
    float getOuterRadiusPercentage() -> getOuterRadiusPercentage
    float getRingInnerRadiusPercentage() -> getRingInnerRadiusPercentage
    float getOuterRadius() -> getOuterRadius
    float getRingInnerRadius() -> getRingInnerRadius
    android.graphics.PointF getCenterXY() -> getCenterXY
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
org.xclcharts.renderer.axis.RoundAxisRender -> org.xclcharts.renderer.axis.RoundAxisRender:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$Location mLocation -> mLocation
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
    void setAxisPercentage(java.util.List) -> setAxisPercentage
    void setAxisColor(java.util.List) -> setAxisColor
    void setAxisLabels(java.util.List) -> setAxisLabels
    void setLineAxisLocation(org.xclcharts.renderer.XEnum$Location) -> setLineAxisLocation
    boolean renderTicks(android.graphics.Canvas,java.util.List) -> renderTicks
    android.graphics.PointF getLabelXY(java.lang.String,float,float,float,float,float,float) -> getLabelXY
    boolean renderFillAxis(android.graphics.Canvas) -> renderFillAxis
    boolean renderTickAxis(android.graphics.Canvas) -> renderTickAxis
    boolean renderArcLineAxis(android.graphics.Canvas) -> renderArcLineAxis
    boolean renderCircleAxis(android.graphics.Canvas) -> renderCircleAxis
    boolean renderRingAxis(android.graphics.Canvas) -> renderRingAxis
    boolean renderPartitions(android.graphics.Canvas,float,float,int,java.lang.String) -> renderPartitions
    boolean renderLineAxis(android.graphics.Canvas) -> renderLineAxis
    void setCenterXY(float,float) -> setCenterXY
    void setOrgRadius(float) -> setOrgRadius
    void setAngleInfo(float,float) -> setAngleInfo
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
org.xclcharts.renderer.axis.XYAxis -> org.xclcharts.renderer.axis.XYAxis:
    java.util.List mDataSet -> mDataSet
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    android.graphics.Paint$Align mTickMarksAlign -> mTickMarksAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mTickMarksPosition -> mTickMarksPosition
    int mTickMarksLength -> mTickMarksLength
    int mTickLabelMargin -> mTickLabelMargin
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setVerticalTickPosition(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalTickPosition
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalTickPosition() -> getVerticalTickPosition
    void setHorizontalTickAlign(android.graphics.Paint$Align) -> setHorizontalTickAlign
    android.graphics.Paint$Align getHorizontalTickAlign() -> getHorizontalTickAlign
    void setLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setLabelFormatter
    java.lang.String getFormatterLabel(java.lang.String) -> getFormatterLabel
    void renderHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderHorizontalTick
    void renderVerticalTick(android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderVerticalTick
    void renderLeftAxisTickMaskLabel(android.graphics.Canvas,float,float,java.lang.String,float) -> renderLeftAxisTickMaskLabel
    int getTickMarksLength() -> getTickMarksLength
    void setTickLabelMargin(int) -> setTickLabelMargin
    int getTickLabelMargin() -> getTickLabelMargin
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.bar.Bar -> org.xclcharts.renderer.bar.Bar:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$Direction mBarDirection -> mBarDirection
    android.graphics.Paint mPaintBar -> mPaintBar
    android.graphics.Paint mPaintItemLabel -> mPaintItemLabel
    int mItemLabelAnchorOffset -> mItemLabelAnchorOffset
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    boolean mShowItemLabel -> mShowItemLabel
    double mBarInnerMargin -> mBarInnerMargin
    org.xclcharts.renderer.XEnum$BarStyle mBarStyle -> mBarStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    org.xclcharts.renderer.XEnum$Direction getBarDirection() -> getBarDirection
    void setBarDirection(org.xclcharts.renderer.XEnum$Direction) -> setBarDirection
    android.graphics.Paint getBarPaint() -> getBarPaint
    android.graphics.Paint getItemLabelPaint() -> getItemLabelPaint
    int getItemLabelAnchorOffset() -> getItemLabelAnchorOffset
    void setItemLabelAnchorOffset(int) -> setItemLabelAnchorOffset
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
    void setItemLabelVisible(boolean) -> setItemLabelVisible
    boolean setBarInnerMargin(double) -> setBarInnerMargin
    double getInnerMargin() -> getInnerMargin
    boolean getItemLabelsVisible() -> getItemLabelsVisible
    float[] calcBarHeightAndMargin(float,int) -> calcBarHeightAndMargin
    float[] calcBarWidthAndMargin(float,int) -> calcBarWidthAndMargin
    void drawBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> drawBarItemLabel
    void setBarStyle(org.xclcharts.renderer.XEnum$BarStyle) -> setBarStyle
    org.xclcharts.renderer.XEnum$BarStyle getBarStyle() -> getBarStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
org.xclcharts.renderer.bar.Bar3D -> org.xclcharts.renderer.bar.Bar3D:
    int mThickness -> mThickness
    int mAngle -> mAngle
    int mAlpha -> mAlpha
    android.graphics.Paint mPaint3D -> mPaint3D
    android.graphics.Paint mPaintBase -> mPaintBase
    android.graphics.Paint mPaintBase3D -> mPaintBase3D
    int mAxisBaseThickness -> mAxisBaseThickness
    int mAxisBaseColor -> mAxisBaseColor
    android.graphics.Path mPathRectangle2D -> mPathRectangle2D
    android.graphics.Paint mPaintLine -> mPaintLine
    double getOffsetX(double,double) -> getOffsetX
    double getOffsetY(double,double) -> getOffsetY
    double getOffsetX() -> getOffsetX
    double getOffsetY() -> getOffsetY
    float[] getBarHeightAndMargin(float,int) -> getBarHeightAndMargin
    float[] getBarWidthAndMargin(float,int) -> getBarWidthAndMargin
    void renderVertical3DBar(float,float,float,float,int,android.graphics.Canvas) -> renderVertical3DBar
    void render3DXAxis(float,float,float,float,android.graphics.Canvas) -> render3DXAxis
    void renderHorizontal3DBar(float,float,float,float,int,android.graphics.Canvas) -> renderHorizontal3DBar
    void render3DYAxis(float,float,float,float,android.graphics.Canvas) -> render3DYAxis
    int getThickness() -> getThickness
    void setThickness(int) -> setThickness
    int getAngle() -> getAngle
    void setAngle(int) -> setAngle
    int getAlpha() -> getAlpha
    void setAlpha(int) -> setAlpha
    int getAxis3DBaseThickness() -> getAxis3DBaseThickness
    void setAxis3DBaseThickness(int) -> setAxis3DBaseThickness
    void renderBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> renderBarItemLabel
    void setAxis3DBaseColor(int) -> setAxis3DBaseColor
    int getAxis3DBaseColor() -> getAxis3DBaseColor
org.xclcharts.renderer.bar.FlatBar -> org.xclcharts.renderer.bar.FlatBar:
    java.lang.String TAG -> TAG
    int mFillAlpha -> mFillAlpha
    android.graphics.LinearGradient linearGradient -> linearGradient
    android.graphics.Path mPath -> mPath
    int radius -> radius
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle
    int getFillAlpha() -> getFillAlpha
    void setFillAlpha(int) -> setFillAlpha
    float[] getBarHeightAndMargin(float,int) -> getBarHeightAndMargin
    float[] getBarWidthAndMargin(float,int) -> getBarWidthAndMargin
    void setBarGradient(float,float,float,float) -> setBarGradient
    boolean renderBar(float,float,float,float,android.graphics.Canvas) -> renderBar
    void renderBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> renderBarItemLabel
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle
org.xclcharts.renderer.info.DyInfo -> org.xclcharts.renderer.info.DyInfo:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintBorder -> mPaintBorder
    android.graphics.Paint mPaintBackground -> mPaintBackground
    android.graphics.RectF mRect -> mRect
    float mRowSpan -> mRowSpan
    float mColSpan -> mColSpan
    float mMargin -> mMargin
    org.xclcharts.renderer.XEnum$DyInfoStyle mStyle -> mStyle
    float mRoundRectX -> mRoundRectX
    float mRoundRectY -> mRoundRectY
    java.util.ArrayList mClickedDotStyle -> mClickedDotStyle
    java.util.ArrayList mClickedText -> mClickedText
    java.util.ArrayList mClickedPaint -> mClickedPaint
    android.graphics.PointF mCenterXY -> mCenterXY
    android.graphics.Paint$Align mPositionAlign -> mPositionAlign
    float mRectWidth -> mRectWidth
    float mRectHeight -> mRectHeight
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    android.graphics.Paint getBorderPaint() -> getBorderPaint
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    boolean validateParams() -> validateParams
    void getContentRect() -> getContentRect
    void setRowSpan(float) -> setRowSpan
    void setColSpan(float) -> setColSpan
    void setMargin(float) -> setMargin
    void setRoundRectX(float) -> setRoundRectX
    void setRoundRectY(float) -> setRoundRectY
    void setCenterXY(float,float) -> setCenterXY
    void setStyle(org.xclcharts.renderer.XEnum$DyInfoStyle) -> setStyle
    void addInfo(java.lang.String,android.graphics.Paint) -> addInfo
    void addInfo(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addInfo
    void drawInfo(android.graphics.Canvas) -> drawInfo
    void clear() -> clear
    void getInfoRect() -> getInfoRect
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
org.xclcharts.renderer.info.DyLine -> org.xclcharts.renderer.info.DyLine:
    android.graphics.Paint mPaintLine -> mPaintLine
    android.graphics.PointF mCenterXY -> mCenterXY
    org.xclcharts.renderer.XEnum$DyLineStyle mDyLineStyle -> mDyLineStyle
    org.xclcharts.renderer.XEnum$LineStyle mLineDrawStyle -> mLineDrawStyle
    float mOldX -> mOldX
    float mOldY -> mOldY
    android.graphics.Paint getLinePaint() -> getLinePaint
    void setCurrentXY(float,float) -> setCurrentXY
    boolean isInvalidate() -> isInvalidate
    void setDyLineStyle(org.xclcharts.renderer.XEnum$DyLineStyle) -> setDyLineStyle
    org.xclcharts.renderer.XEnum$DyLineStyle getDyLineStyle() -> getDyLineStyle
    void setLineDrawStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineDrawStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineDrawStyle() -> getLineDrawStyle
org.xclcharts.renderer.info.DyLineRender -> org.xclcharts.renderer.info.DyLineRender:
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle
    void drawCross(android.graphics.Canvas) -> drawCross
    void drawBackwardDiagonal(android.graphics.Canvas) -> drawBackwardDiagonal
    void drawVertical(android.graphics.Canvas) -> drawVertical
    void drawHorizontal(android.graphics.Canvas) -> drawHorizontal
    void renderLine(android.graphics.Canvas,float,float,float,float) -> renderLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle
org.xclcharts.renderer.info.Legend -> org.xclcharts.renderer.info.Legend:
    float mXPercentage -> mXPercentage
    float mYPercentage -> mYPercentage
    void setPosition(float,float) -> setPosition
    void addLegend(java.lang.String,android.graphics.Paint) -> addLegend
    void addLegend(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addLegend
org.xclcharts.renderer.info.LegendRender -> org.xclcharts.renderer.info.LegendRender:
    void setPlotWH(float,float) -> setPlotWH
    void renderInfo(android.graphics.Canvas) -> renderInfo
org.xclcharts.renderer.info.PlotArcLabelInfo -> org.xclcharts.renderer.info.PlotArcLabelInfo:
    float Radius -> Radius
    float OffsetAngle -> OffsetAngle
    float CurrentAngle -> CurrentAngle
    android.graphics.PointF mLabelPointF -> mLabelPointF
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    float getOffsetAngle() -> getOffsetAngle
    void setOffsetAngle(float) -> setOffsetAngle
    float getCurrentAngle() -> getCurrentAngle
    void setCurrentAngle(float) -> setCurrentAngle
    android.graphics.PointF getLabelPointF() -> getLabelPointF
    void setLabelPointF(android.graphics.PointF) -> setLabelPointF
org.xclcharts.renderer.info.PlotAxisTick -> org.xclcharts.renderer.info.PlotAxisTick:
org.xclcharts.renderer.info.PlotDataInfo -> org.xclcharts.renderer.info.PlotDataInfo:
    float X -> X
    float Y -> Y
    java.lang.String Label -> Label
    int ID -> ID
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    int getID() -> getID
    void setID(int) -> setID
org.xclcharts.renderer.info.ToolTip -> org.xclcharts.renderer.info.ToolTip:
    void setInfoStyle(org.xclcharts.renderer.XEnum$DyInfoStyle) -> setInfoStyle
    void setRoundRadius(float,float) -> setRoundRadius
    void setAlign(android.graphics.Paint$Align) -> setAlign
    void setCurrentXY(float,float) -> setCurrentXY
    void addToolTip(java.lang.String,android.graphics.Paint) -> addToolTip
    void addToolTip(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addToolTip
org.xclcharts.renderer.info.ToolTipRender -> org.xclcharts.renderer.info.ToolTipRender:
    void renderInfo(android.graphics.Canvas) -> renderInfo
org.xclcharts.renderer.line.PlotCustomLine -> org.xclcharts.renderer.line.PlotCustomLine:
    java.lang.String TAG -> TAG
    java.util.List mCustomLineDataset -> mCustomLineDataset
    org.xclcharts.renderer.axis.DataAxisRender mDataAxis -> mDataAxis
    org.xclcharts.renderer.plot.PlotAreaRender mPlotArea -> mPlotArea
    float mAxisScreenHeight -> mAxisScreenHeight
    float mAxisScreenWidth -> mAxisScreenWidth
    int CAPSIZE -> CAPSIZE
    org.xclcharts.renderer.line.PlotDot mDot -> mDot
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setVerticalPlot(org.xclcharts.renderer.axis.DataAxisRender,org.xclcharts.renderer.plot.PlotAreaRender,float) -> setVerticalPlot
    void setHorizontalPlot(org.xclcharts.renderer.axis.DataAxisRender,org.xclcharts.renderer.plot.PlotAreaRender,float) -> setHorizontalPlot
    boolean validateParams() -> validateParams
    boolean renderVerticalCustomlinesDataAxis(android.graphics.Canvas) -> renderVerticalCustomlinesDataAxis
    void renderCapLabelVerticalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float) -> renderCapLabelVerticalPlot
    void renderLabel(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLabel
    boolean renderHorizontalCustomlinesDataAxis(android.graphics.Canvas) -> renderHorizontalCustomlinesDataAxis
    void renderCapLabelHorizontalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,double) -> renderCapLabelHorizontalPlot
    void renderLineCapHorizontalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLineCapHorizontalPlot
    void renderLineCapVerticalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLineCapVerticalPlot
    void renderLineCap(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float,float,float) -> renderLineCap
    void initPlotDot() -> initPlotDot
    void setCustomLines(java.util.List) -> setCustomLines
    void setDataAxis(org.xclcharts.renderer.axis.DataAxisRender) -> setDataAxis
    void setPlotArea(org.xclcharts.renderer.plot.PlotAreaRender) -> setPlotArea
    void setAxisScreenHeight(float) -> setAxisScreenHeight
    void setAxisScreenWidth(float) -> setAxisScreenWidth
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.line.PlotDot -> org.xclcharts.renderer.line.PlotDot:
    int mColor -> mColor
    int mRingInnerColor -> mRingInnerColor
    org.xclcharts.renderer.XEnum$DotStyle mDotStyle -> mDotStyle
    float mRadius -> mRadius
    int mAlpha -> mAlpha
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setRingInnerColor(int) -> setRingInnerColor
    int getRingInnerColor() -> getRingInnerColor
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    void setDotRadius(float) -> setDotRadius
    float getDotRadius() -> getDotRadius
    void setAlpah(int) -> setAlpah
    int getAlpha() -> getAlpha
org.xclcharts.renderer.line.PlotDotRender -> org.xclcharts.renderer.line.PlotDotRender:
    org.xclcharts.renderer.line.PlotDotRender instance -> instance
    android.graphics.Paint mPaintFill -> mPaintFill
    android.graphics.Path mPath -> mPath
    android.graphics.RectF mRect -> mRect
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle
    org.xclcharts.renderer.line.PlotDotRender getInstance() -> getInstance
    void initPath() -> initPath
    android.graphics.Paint getInnerFillPaint() -> getInnerFillPaint
    android.graphics.RectF renderDot(android.graphics.Canvas,org.xclcharts.renderer.line.PlotDot,float,float,float,float,android.graphics.Paint) -> renderDot
    void renderRing(android.graphics.Canvas,android.graphics.Paint,float,org.xclcharts.renderer.line.PlotDot,float,float) -> renderRing
    void renderTriangle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderTriangle
    void renderPrismatic(android.graphics.Canvas,android.graphics.Paint,float,float,float,float) -> renderPrismatic
    void renderRect(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderRect
    void renderX(android.graphics.Canvas,android.graphics.Paint) -> renderX
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle
org.xclcharts.renderer.line.PlotLine -> org.xclcharts.renderer.line.PlotLine:
    android.graphics.Paint mPaintLine -> mPaintLine
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintDot -> mPaintDot
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    void initLinePaint() -> initLinePaint
    void initLabelPaint() -> initLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    android.graphics.Paint getDotPaint() -> getDotPaint
    org.xclcharts.renderer.line.PlotDot getPlotDot() -> getPlotDot
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
org.xclcharts.renderer.plot.AxisTitle -> org.xclcharts.renderer.plot.AxisTitle:
    android.graphics.Paint mPaintLeftAxisTitle -> mPaintLeftAxisTitle
    android.graphics.Paint mPaintLowerAxisTitle -> mPaintLowerAxisTitle
    android.graphics.Paint mPaintRightAxisTitle -> mPaintRightAxisTitle
    java.lang.String mLeftAxisTitle -> mLeftAxisTitle
    java.lang.String mLowerAxisTitle -> mLowerAxisTitle
    java.lang.String mRightAxisTitle -> mRightAxisTitle
    void initLeftAxisTitlePaint() -> initLeftAxisTitlePaint
    void initLowerAxisTitlePaint() -> initLowerAxisTitlePaint
    void initRightAxisTitlePaint() -> initRightAxisTitlePaint
    android.graphics.Paint getLeftAxisTitlePaint() -> getLeftAxisTitlePaint
    android.graphics.Paint getLowerAxisTitlePaint() -> getLowerAxisTitlePaint
    android.graphics.Paint getRightAxisTitlePaint() -> getRightAxisTitlePaint
    void setLeftAxisTitle(java.lang.String) -> setLeftAxisTitle
    void setLowerAxisTitle(java.lang.String) -> setLowerAxisTitle
    void setRightAxisTitle(java.lang.String) -> setRightAxisTitle
    java.lang.String getLeftAxisTitle() -> getLeftAxisTitle
    java.lang.String getLowerAxisTitle() -> getLowerAxisTitle
    java.lang.String getRightAxisTitle() -> getRightAxisTitle
org.xclcharts.renderer.plot.AxisTitleRender -> org.xclcharts.renderer.plot.AxisTitleRender:
    org.xclcharts.renderer.XChart mChart -> mChart
    void setRange(org.xclcharts.renderer.XChart) -> setRange
    boolean render(android.graphics.Canvas) -> render
    void drawLeftAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawLeftAxisTitle
    void drawAxisTitleLower(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawAxisTitleLower
    void drawRightAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawRightAxisTitle
org.xclcharts.renderer.plot.Border -> org.xclcharts.renderer.plot.Border:
    android.graphics.Paint mPaintBorderLine -> mPaintBorderLine
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.XEnum$RectType mRectType -> mRectType
    int mRaidus -> mRaidus
    int mBorderSpadding -> mBorderSpadding
    android.graphics.Paint mPaintBackground -> mPaintBackground
    android.graphics.Paint getLinePaint() -> getLinePaint
    void setBorderLineColor(int) -> setBorderLineColor
    void setBorderLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setBorderLineStyle
    void setBorderRectType(org.xclcharts.renderer.XEnum$RectType) -> setBorderRectType
    org.xclcharts.renderer.XEnum$LineStyle getBorderLineStyle() -> getBorderLineStyle
    org.xclcharts.renderer.XEnum$RectType getBorderRectType() -> getBorderRectType
    void setRoundRadius(int) -> setRoundRadius
    int getRoundRadius() -> getRoundRadius
    int getBorderWidth() -> getBorderWidth
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
org.xclcharts.renderer.plot.BorderRender -> org.xclcharts.renderer.plot.BorderRender:
    android.graphics.RectF mRect -> mRect
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType
    int getBorderSpadding() -> getBorderSpadding
    void setPaintLineStyle() -> setPaintLineStyle
    void renderBox(android.graphics.Canvas,android.graphics.RectF,boolean,boolean) -> renderBox
    void renderBorder(java.lang.String,android.graphics.Canvas,float,float,float,float) -> renderBorder
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType
org.xclcharts.renderer.plot.LabelBrokenLine -> org.xclcharts.renderer.plot.LabelBrokenLine:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$LabelLinePoint mLinePoint -> mLinePoint
    float mRadius -> mRadius
    android.graphics.Paint mPaintLabelLine -> mPaintLabelLine
    android.graphics.Paint mPaintPoint -> mPaintPoint
    float mLabelBrokenLineLength -> mLabelBrokenLineLength
    boolean mIsBZLine -> mIsBZLine
    float mBrokenStartPoint -> mBrokenStartPoint
    void isBZLine() -> isBZLine
    void isBeeLine() -> isBeeLine
    void setLinePointStyle(org.xclcharts.renderer.XEnum$LabelLinePoint) -> setLinePointStyle
    org.xclcharts.renderer.XEnum$LabelLinePoint getLinePointStyle() -> getLinePointStyle
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setBrokenLine(float) -> setBrokenLine
    float getBrokenLine() -> getBrokenLine
    android.graphics.Paint getLabelLinePaint() -> getLabelLinePaint
    android.graphics.Paint getPointPaint() -> getPointPaint
    void setBrokenStartPoin(float) -> setBrokenStartPoin
org.xclcharts.renderer.plot.LabelBrokenLineRender -> org.xclcharts.renderer.plot.LabelBrokenLineRender:
    android.graphics.Path mBzLine -> mBzLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint
    android.graphics.PointF renderLabelLine(java.lang.String,float,float,float,float,float,android.graphics.Canvas,android.graphics.Paint,boolean,org.xclcharts.renderer.plot.PlotLabelRender) -> renderLabelLine
    void drawBrokenLine(float,float,float,float,float,android.graphics.Canvas) -> drawBrokenLine
    void drawBZLine(float,float,float,float,float,android.graphics.Canvas) -> drawBZLine
    void drawPoint(float,float,float,float,float,float,android.graphics.Canvas) -> drawPoint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint
org.xclcharts.renderer.plot.PlotArea -> org.xclcharts.renderer.plot.PlotArea:
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    float mWidth -> mWidth
    float mHeight -> mHeight
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    boolean mBackgroundColorVisible -> mBackgroundColorVisible
    float mExtWidth -> mExtWidth
    boolean mApplayGradient -> mApplayGradient
    int mBeginColor -> mBeginColor
    int mEndColor -> mEndColor
    android.graphics.Shader$TileMode mTileMode -> mTileMode
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    void initBackgroundPaint() -> initBackgroundPaint
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    void setBackgroundColorVisible(boolean) -> setBackgroundColorVisible
    boolean getBackgroundColorVisible() -> getBackgroundColorVisible
    void setBackgroundColor(boolean,int) -> setBackgroundColor
    float getLeft() -> getLeft
    float getPlotLeft() -> getPlotLeft
    float getTop() -> getTop
    float getPlotTop() -> getPlotTop
    float getBottom() -> getBottom
    float getPlotBottom() -> getPlotBottom
    float getRight() -> getRight
    float getPlotRight() -> getPlotRight
    float getWidth() -> getWidth
    float getPlotWidth() -> getPlotWidth
    float getHeight() -> getHeight
    float getPlotHeight() -> getPlotHeight
    void extWidth(float) -> extWidth
    float getExtWidth() -> getExtWidth
    void setApplayGradient(boolean) -> setApplayGradient
    boolean getApplayGradient() -> getApplayGradient
    void setGradientDirection(org.xclcharts.renderer.XEnum$Direction) -> setGradientDirection
    org.xclcharts.renderer.XEnum$Direction getGradientDirection() -> getGradientDirection
    void setGradientMode(android.graphics.Shader$TileMode) -> setGradientMode
    android.graphics.Shader$TileMode getGradientMode() -> getGradientMode
    void setBeginColor(int) -> setBeginColor
    void setEndColor(int) -> setEndColor
    int getBeginColor() -> getBeginColor
    int getEndColor() -> getEndColor
org.xclcharts.renderer.plot.PlotAreaRender -> org.xclcharts.renderer.plot.PlotAreaRender:
    void drawPlotBackground(android.graphics.Canvas) -> drawPlotBackground
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void setLeft(float) -> setLeft
    void setTop(float) -> setTop
    void setRight(float) -> setRight
    void setBottom(float) -> setBottom
    float getPlotRight() -> getPlotRight
    boolean render(android.graphics.Canvas) -> render
org.xclcharts.renderer.plot.PlotAttrInfo -> org.xclcharts.renderer.plot.PlotAttrInfo:
    java.util.List mAttrInfoLocation -> mAttrInfoLocation
    java.util.List mAttrInfo -> mAttrInfo
    java.util.List mAttrInfoPostion -> mAttrInfoPostion
    java.util.List mAttrInfoPaint -> mAttrInfoPaint
    java.util.List getPlotAttrInfo() -> getPlotAttrInfo
    java.util.List getPlotAttrInfoPostion() -> getPlotAttrInfoPostion
    java.util.List getPlotAttrInfoPaint() -> getPlotAttrInfoPaint
    void clearPlotAttrInfo() -> clearPlotAttrInfo
    void addAttributeInfo(org.xclcharts.renderer.XEnum$Location,java.lang.String,float,android.graphics.Paint) -> addAttributeInfo
org.xclcharts.renderer.plot.PlotAttrInfoRender -> org.xclcharts.renderer.plot.PlotAttrInfoRender:
    android.graphics.PointF mPosPintF -> mPosPintF
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    void renderAttrInfo(android.graphics.Canvas,float,float,float) -> renderAttrInfo
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
org.xclcharts.renderer.plot.PlotGrid -> org.xclcharts.renderer.plot.PlotGrid:
    android.graphics.Paint mPaintGridLineHorizontal -> mPaintGridLineHorizontal
    android.graphics.Paint mPaintGridLineVertical -> mPaintGridLineVertical
    boolean mGridLinesHorizontalVisible -> mGridLinesHorizontalVisible
    boolean mGridLinesVerticalVisible -> mGridLinesVerticalVisible
    boolean mOddRowBgColorVisible -> mOddRowBgColorVisible
    boolean mEvenRowBgColorVisible -> mEvenRowBgColorVisible
    android.graphics.Paint mPaintOddBgColor -> mPaintOddBgColor
    android.graphics.Paint mPaintEvenBgColor -> mPaintEvenBgColor
    org.xclcharts.renderer.XEnum$LineStyle mHorizontalLineStyle -> mHorizontalLineStyle
    org.xclcharts.renderer.XEnum$LineStyle mVerticalLineStyle -> mVerticalLineStyle
    void initEvenBgColorPaint() -> initEvenBgColorPaint
    void initOddBgColorPaint() -> initOddBgColorPaint
    void initHorizontalLinePaint() -> initHorizontalLinePaint
    void initVerticalLinePaint() -> initVerticalLinePaint
    void setOddRowBackgroundColor(int) -> setOddRowBackgroundColor
    void setEvenRowBackgroundColor(int) -> setEvenRowBackgroundColor
    void showHorizontalLines() -> showHorizontalLines
    void hideHorizontalLines() -> hideHorizontalLines
    boolean isShowHorizontalLines() -> isShowHorizontalLines
    void showVerticalLines() -> showVerticalLines
    void hideVerticalLines() -> hideVerticalLines
    boolean isShowVerticalLines() -> isShowVerticalLines
    void showOddRowBgColor() -> showOddRowBgColor
    void hideOddRowBgColor() -> hideOddRowBgColor
    boolean isShowOddRowBgColor() -> isShowOddRowBgColor
    void showEvenRowBgColor() -> showEvenRowBgColor
    void hideEvenRowBgColor() -> hideEvenRowBgColor
    boolean isShowEvenRowBgColor() -> isShowEvenRowBgColor
    android.graphics.Paint getHorizontalLinePaint() -> getHorizontalLinePaint
    android.graphics.Paint getVerticalLinePaint() -> getVerticalLinePaint
    android.graphics.Paint getOddRowsBgColorPaint() -> getOddRowsBgColorPaint
    android.graphics.Paint getEvenRowsBgColorPaint() -> getEvenRowsBgColorPaint
    org.xclcharts.renderer.XEnum$LineStyle getVerticalLineStyle() -> getVerticalLineStyle
    void setVerticalLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setVerticalLineStyle
    org.xclcharts.renderer.XEnum$LineStyle getHorizontalLineStyle() -> getHorizontalLineStyle
    void setHorizontalLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setHorizontalLineStyle
org.xclcharts.renderer.plot.PlotGridRender -> org.xclcharts.renderer.plot.PlotGridRender:
    boolean mMajorTickLine -> mMajorTickLine
    int BLOB_WIDTH -> BLOB_WIDTH
    void setPrimaryTickLine(boolean) -> setPrimaryTickLine
    void renderOddRowsFill(android.graphics.Canvas,float,float,float,float) -> renderOddRowsFill
    void renderEvenRowsFill(android.graphics.Canvas,float,float,float,float) -> renderEvenRowsFill
    void renderGridLinesHorizontal(android.graphics.Canvas,float,float,float,float) -> renderGridLinesHorizontal
    void renderGridLinesVertical(android.graphics.Canvas,float,float,float,float) -> renderGridLinesVertical
org.xclcharts.renderer.plot.PlotLabel -> org.xclcharts.renderer.plot.PlotLabel:
    float mMargin -> mMargin
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    boolean mShowBox -> mShowBox
    boolean mShowBoxBorder -> mShowBoxBorder
    boolean mShowBackground -> mShowBackground
    float mOffsetX -> mOffsetX
    float mOffsetY -> mOffsetY
    int DEF_BOX_BG_ALPHA -> DEF_BOX_BG_ALPHA
    org.xclcharts.renderer.plot.Border getBox() -> getBox
    void initBox() -> initBox
    void hideBox() -> hideBox
    void hideBorder() -> hideBorder
    void hideBackground() -> hideBackground
    void showBox() -> showBox
    void showBorder() -> showBorder
    void showBackground() -> showBackground
    void setOffsetX(float) -> setOffsetX
    void setOffsetY(float) -> setOffsetY
    void setMargin(float) -> setMargin
    float getMargin() -> getMargin
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float) -> drawLabel
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float,int) -> drawLabel
org.xclcharts.renderer.plot.PlotLabelRender -> org.xclcharts.renderer.plot.PlotLabelRender:
    android.graphics.RectF mRectBox -> mRectBox
    int mBorderColor -> mBorderColor
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float,int) -> drawLabel
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float) -> drawLabel
    float getLabelWidth(android.graphics.Paint,java.lang.String) -> getLabelWidth
    float getLabelHeight(android.graphics.Paint) -> getLabelHeight
    void drawBox(android.graphics.Canvas,float,float,float,float) -> drawBox
org.xclcharts.renderer.plot.PlotLegend -> org.xclcharts.renderer.plot.PlotLegend:
    float mMargin -> mMargin
    android.graphics.Paint mKeyPaint -> mKeyPaint
    boolean mVisible -> mVisible
    float mOffsetX -> mOffsetX
    float mOffsetY -> mOffsetY
    float mRowSpan -> mRowSpan
    float mColSpan -> mColSpan
    org.xclcharts.renderer.XEnum$LegendType mLegendType -> mLegendType
    org.xclcharts.renderer.XEnum$HorizontalAlign mHorizontalAlign -> mHorizontalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mVerticalAlign -> mVerticalAlign
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    boolean mShowBox -> mShowBox
    boolean mShowBoxBorder -> mShowBoxBorder
    boolean mShowBackground -> mShowBackground
    void show() -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void hideBox() -> hideBox
    void hideBorder() -> hideBorder
    void hideBackground() -> hideBackground
    void showBox() -> showBox
    void showBorder() -> showBorder
    void showBackground() -> showBackground
    android.graphics.Paint getPaint() -> getPaint
    void setLabelMargin(float) -> setLabelMargin
    void setRowSpan(float) -> setRowSpan
    void setColSpan(float) -> setColSpan
    float getLabelMargin() -> getLabelMargin
    void setOffsetX(float) -> setOffsetX
    void setOffsetY(float) -> setOffsetY
    void setType(org.xclcharts.renderer.XEnum$LegendType) -> setType
    org.xclcharts.renderer.XEnum$LegendType getType() -> getType
    void setHorizontalAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setHorizontalAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getHorizontalAlign() -> getHorizontalAlign
    void setVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalAlign() -> getVerticalAlign
    org.xclcharts.renderer.plot.Border getBox() -> getBox
org.xclcharts.renderer.plot.PlotLegendRender -> org.xclcharts.renderer.plot.PlotLegendRender:
    org.xclcharts.renderer.plot.PlotArea mPlotArea -> mPlotArea
    org.xclcharts.renderer.XChart mXChart -> mXChart
    float mKeyLabelX -> mKeyLabelX
    float mKeyLabelY -> mKeyLabelY
    java.util.ArrayList mLstDotStyle -> mLstDotStyle
    java.util.ArrayList mLstKey -> mLstKey
    java.util.ArrayList mLstColor -> mLstColor
    float mRectWidth -> mRectWidth
    float mRectHeight -> mRectHeight
    java.util.LinkedHashMap mMapID -> mMapID
    boolean mIsLnChart -> mIsLnChart
    android.graphics.Paint mPaintLine -> mPaintLine
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType mType -> mType
    int BOX_LINE_SIZE -> BOX_LINE_SIZE
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setXChart(org.xclcharts.renderer.XChart) -> setXChart
    void initEnv() -> initEnv
    float getLabelTextWidth(java.lang.String) -> getLabelTextWidth
    float getLabelTextHeight() -> getLabelTextHeight
    boolean renderBarKey(android.graphics.Canvas,java.util.List) -> renderBarKey
    void renderLineKey(android.graphics.Canvas,java.util.List) -> renderLineKey
    void renderPieKey(android.graphics.Canvas,java.util.List) -> renderPieKey
    void renderRdKey(android.graphics.Canvas,java.util.List) -> renderRdKey
    void renderPointKey(android.graphics.Canvas,java.util.List) -> renderPointKey
    void renderBubbleKey(android.graphics.Canvas,java.util.List) -> renderBubbleKey
    void renderRoundBarKey(android.graphics.Canvas,java.util.List) -> renderRoundBarKey
    void renderRangeBarKey(android.graphics.Canvas,java.lang.String,int) -> renderRangeBarKey
    void setLnChartStatus() -> setLnChartStatus
    void render(android.graphics.Canvas) -> render
    float getRectWidth() -> getRectWidth
    void calcContentRect() -> calcContentRect
    void getStartXY() -> getStartXY
    void drawLegend(android.graphics.Canvas) -> drawLegend
    void clearLst() -> clearLst
    void drawBox(android.graphics.Canvas) -> drawBox
    void refreshLst() -> refreshLst
    void convertArrayLineKey(java.util.List) -> convertArrayLineKey
    void convertArrayBarKey(java.util.List) -> convertArrayBarKey
    void convertArrayPieKey(java.util.List) -> convertArrayPieKey
    void convertArrayRadarKey(java.util.List) -> convertArrayRadarKey
    void convertArrayPointKey(java.util.List) -> convertArrayPointKey
    void convertArrayBubbleKey(java.util.List) -> convertArrayBubbleKey
    void convertArrayArcLineKey(java.util.List) -> convertArrayArcLineKey
    boolean isDrawKey(java.lang.String) -> isDrawKey
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType -> org.xclcharts.renderer.plot.a:
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType AXIS -> a
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType CIR -> b
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType LN -> c
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType RD -> d
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType[] ENUM$VALUES -> e
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType[] values() -> values
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.plot.PlotQuadrant -> org.xclcharts.renderer.plot.PlotQuadrant:
    int mFirstColor -> mFirstColor
    int mSecondColor -> mSecondColor
    int mThirdColor -> mThirdColor
    int mFourthColor -> mFourthColor
    boolean mShow -> mShow
    boolean mShowBgColor -> mShowBgColor
    boolean mShowVerticalLine -> mShowVerticalLine
    boolean mShowHorizontalLine -> mShowHorizontalLine
    android.graphics.Paint mPaintBgColor -> mPaintBgColor
    android.graphics.Paint mPaintVerticalLine -> mPaintVerticalLine
    android.graphics.Paint mPaintHorizontalLine -> mPaintHorizontalLine
    double mQuadrantXValue -> mQuadrantXValue
    double mQuadrantYValue -> mQuadrantYValue
    void show(double,double) -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void showBgColor() -> showBgColor
    void hideBgColor() -> hideBgColor
    void showVerticalLine() -> showVerticalLine
    void hideVerticalLine() -> hideVerticalLine
    void showHorizontalLine() -> showHorizontalLine
    void hideHorizontalLine() -> hideHorizontalLine
    void setBgColor(int,int,int,int) -> setBgColor
    android.graphics.Paint getVerticalLinePaint() -> getVerticalLinePaint
    android.graphics.Paint getHorizontalLinePaint() -> getHorizontalLinePaint
    android.graphics.Paint getBgColorPaint() -> getBgColorPaint
    void setQuadrantXYValue(double,double) -> setQuadrantXYValue
    double getQuadrantXValue() -> getQuadrantXValue
    double getQuadrantYValue() -> getQuadrantYValue
org.xclcharts.renderer.plot.PlotQuadrantRender -> org.xclcharts.renderer.plot.PlotQuadrantRender:
    void drawQuadrant(android.graphics.Canvas,float,float,float,float,float,float) -> drawQuadrant
org.xclcharts.renderer.plot.PlotTitle -> org.xclcharts.renderer.plot.PlotTitle:
    java.lang.String mChartTitle -> mChartTitle
    java.lang.String mSubtitle -> mSubtitle
    android.graphics.Paint mPaintTitle -> mPaintTitle
    android.graphics.Paint mPaintSubtitle -> mPaintSubtitle
    org.xclcharts.renderer.XEnum$HorizontalAlign mChartTitleAlign -> mChartTitleAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mTitlePosition -> mTitlePosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSubtitle(java.lang.String) -> setSubtitle
    java.lang.String getSubtitle() -> getSubtitle
    android.graphics.Paint getTitlePaint() -> getTitlePaint
    android.graphics.Paint getSubtitlePaint() -> getSubtitlePaint
    void setTitleAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setTitleAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getTitleAlign() -> getTitleAlign
    void setVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalAlign() -> getVerticalAlign
org.xclcharts.renderer.plot.PlotTitleRender -> org.xclcharts.renderer.plot.PlotTitleRender:
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    void renderTitle(float,float,float,float,float,android.graphics.Canvas) -> renderTitle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
org.xclcharts.renderer.plot.Pointer -> org.xclcharts.renderer.plot.Pointer:
    android.graphics.Paint mPaintPoint -> mPaintPoint
    android.graphics.Paint mPaintBaseCircle -> mPaintBaseCircle
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float mPercentage -> mPercentage
    float mPointerRadiusPercentage -> mPointerRadiusPercentage
    float mPointerTailRadiusPercentage -> mPointerTailRadiusPercentage
    float mBaseRadius -> mBaseRadius
    org.xclcharts.renderer.XEnum$PointerStyle mPointStyle -> mPointStyle
    boolean mShowBaseCircle -> mShowBaseCircle
    void setPointerStyle(org.xclcharts.renderer.XEnum$PointerStyle) -> setPointerStyle
    org.xclcharts.renderer.XEnum$PointerStyle getPointerStyle() -> getPointerStyle
    void setLength(float) -> setLength
    void setLength(float,float) -> setLength
    android.graphics.Paint getPointerPaint() -> getPointerPaint
    android.graphics.Paint getBaseCirclePaint() -> getBaseCirclePaint
    void setBaseRadius(float) -> setBaseRadius
    float getBaseRadius() -> getBaseRadius
    void hideBaseCircle() -> hideBaseCircle
    void showBaseCircle() -> showBaseCircle
    boolean isShowBaseCircle() -> isShowBaseCircle
    void setPercentage(float) -> setPercentage
    float getPercentage() -> getPercentage
org.xclcharts.renderer.plot.PointerRender -> org.xclcharts.renderer.plot.PointerRender:
    int FIX_ANGLE -> FIX_ANGLE
    float mStartAngle -> mStartAngle
    float mTotalAngle -> mTotalAngle
    float mPointerAngle -> mPointerAngle
    float mParentRadius -> mParentRadius
    float mPointerRadius -> mPointerRadius
    float mPointerTailRadius -> mPointerTailRadius
    float mEndX -> mEndX
    float mEndY -> mEndY
    float mTailX -> mTailX
    float mTailY -> mTailY
    android.graphics.Path mPath -> mPath
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle
    void setStartXY(float,float) -> setStartXY
    void setCurrentAngle(float) -> setCurrentAngle
    void setStartAngle(float) -> setStartAngle
    void setTotalAngle(float) -> setTotalAngle
    void setParentRadius(float) -> setParentRadius
    void calcRadius() -> calcRadius
    void setPointEndXY(float,float) -> setPointEndXY
    float getCurrentPointerAngle() -> getCurrentPointerAngle
    void calcEndXY() -> calcEndXY
    void renerLine(android.graphics.Canvas) -> renerLine
    void renderTriangle(android.graphics.Canvas) -> renderTriangle
    void renderCircle(android.graphics.Canvas) -> renderCircle
    void render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle
org.xclcharts.view.ChartView -> org.xclcharts.view.ChartView:
    org.xclcharts.event.touch.ChartTouch[] mChartTouch -> mChartTouch
    void render(android.graphics.Canvas) -> render
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    java.util.List bindChart() -> bindChart
    int getTouchCharts() -> getTouchCharts
    boolean touchChart(android.view.MotionEvent) -> touchChart
org.xclcharts.view.GraphicalView -> org.xclcharts.view.GraphicalView:
    java.lang.String TAG -> TAG
    void initChartView() -> initChartView
    void render(android.graphics.Canvas) -> render
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void disableHardwareAccelerated() -> disableHardwareAccelerated
